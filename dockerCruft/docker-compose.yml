version: '3.2'

services:
  #For software development use with google oauth defined
  dev-app:
    build:
      context: .
      dockerfile: Dockerfile_Dev
    ports:
      - '3000:3000'
    depends_on:
      - mongo
    environment:
      ROOT_URL: ${APP_ROOT_URL:-http://localhost}
      MONGO_URL: mongodb://mongo:27017/meteor
      METEOR_SETTINGS_WORKAROUND: "${METEOR_SETTINGS}"
    command: ["env;pwd;ls -la;ls -la mofacts; cd mofacts; meteor"] #["pwd; ls; cp -r node_modules ./mofacts/;cp package*.json ./mofacts/;cd ./mofacts;pwd;ls -la;meteor"]
    entrypoint: /bin/sh -c
    volumes:
      - type: bind
        source: ./mofacts
        target: /opt/src/mofacts

  #For use by users interested in testing their tdfs/stims and not development
  test-app:
    build:
      context: .
      dockerfile: Dockerfile_Dev
    ports:
      - '3000:3000'
    depends_on:
      - mongo_test
    environment:
      ROOT_URL: ${APP_ROOT_URL:-http://localhost}
      MONGO_URL: mongodb://mongo:27017/meteor
      PORT: 3000
    volumes:
      - type: bind
        source: /home/docker/mofacts
        target: /opt/src/mofacts

  #For use in production
  prod-app_1_a:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    depends_on:
      - mongo
    environment:
      ROOT_URL: ${APP_ROOT_URL:-http://localhost}
      MONGO_URL: mongodb://mongo:27017/meteor
      METEOR_SETTINGS: "${METEOR_SETTINGS}"
      PORT: 3000
    restart: unless-stopped

  prod-app_1_b:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3001:3000'
    depends_on:
      - mongo
    environment:
      ROOT_URL: ${APP_ROOT_URL:-http://localhost}
      MONGO_URL: mongodb://mongo:27017/meteor
      METEOR_SETTINGS: "${METEOR_SETTINGS}"
      PORT: 3000
    restart: unless-stopped

  prod-app_2_a:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3002:3000'
    depends_on:
      - mongo
    environment:
      ROOT_URL: ${APP_ROOT_URL:-http://localhost}
      MONGO_URL: mongodb://mongo:27017/meteor
      METEOR_SETTINGS: "${METEOR_SETTINGS}"
      PORT: 3000
    restart: unless-stopped

  prod-app_2_b:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3003:3000'
    depends_on:
      - mongo
    environment:
      ROOT_URL: ${APP_ROOT_URL:-http://localhost}
      MONGO_URL: mongodb://mongo:27017/meteor
      METEOR_SETTINGS: "${METEOR_SETTINGS}"
      PORT: 3000
    restart: unless-stopped

  mongo:
    build:
      context: .
      dockerfile: Dockerfile_Mongo
    volumes:
      - /data/db:/data/db

  mongo_test:
    build:
      context: .
      dockerfile: Dockerfile_Mongo
    volumes:
     - /home/docker/data:/data/db
