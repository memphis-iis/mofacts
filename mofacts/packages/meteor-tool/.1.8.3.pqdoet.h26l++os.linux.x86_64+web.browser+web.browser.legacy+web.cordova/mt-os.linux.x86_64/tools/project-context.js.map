{"version":3,"sources":["/tools/project-context.js"],"names":["module1","export","MeteorConfig","loadIsopackage","link","v","KNOWN_ISOBUILD_FEATURE_PACKAGES","optimisticReadJsonOrNull","optimisticHashOrNull","mapWhereToArches","Resolver","default","assert","require","_","archinfo","buildmessage","catalog","catalogLocal","Console","files","isopackCacheModule","packageMapModule","release","tropohouse","utils","watch","Profile","CAN_DELAY_LEGACY_BUILD","JSON","parse","process","env","METEOR_DISALLOW_DELAYED_LEGACY_BUILD","ProjectContext","options","self","ok","projectDir","Error","originalOptions","reset","exports","STAGE","INITIAL","READ_PROJECT_METADATA","INITIALIZE_CATALOG","RESOLVE_CONSTRAINTS","DOWNLOAD_MISSING_PACKAGES","BUILD_LOCAL_PACKAGES","SAVE_CHANGED_METADATA","extend","prototype","moreOptions","resetOptions","_includePackages","includePackages","_packageMapFilename","packageMapFilename","pathJoin","_serverArchitectures","serverArchitectures","push","host","uniq","_projectDirForLocalPackages","projectDirForLocalPackages","_explicitlyAddedLocalPackageDirs","explicitlyAddedLocalPackageDirs","projectLocalDir","METEOR_LOCAL_DIR","pathResolve","convertToStandardPath","_forceRebuildPackages","forceRebuildPackages","_ignorePackageDirsEnvVar","ignorePackageDirsEnvVar","_ignoreCheckoutPackages","ignoreCheckoutPackages","_officialCatalog","officialCatalog","official","alwaysWritePackageMap","neverWritePackageMap","_alwaysWritePackageMap","_neverWriteProjectConstraintsFile","neverWriteProjectConstraintsFile","_neverWritePackageMap","_upgradePackageNames","upgradePackageNames","_upgradeIndirectDepPatchVersions","upgradeIndirectDepPatchVersions","_forceIncludeCordovaUnibuild","forceIncludeCordovaUnibuild","has","_releaseForConstraints","releaseForConstraints","current","isCheckout","getCatalogReleaseData","preservePackageMap","packageMap","_cachedVersionsBeforeReset","toVersionMap","_oldPackageMapFileHash","packageMapFile","fileHash","_allowIncompatibleUpdate","allowIncompatibleUpdate","lintAppAndLocalPackages","_lintPackageWithSourceRoot","lintPackageWithSourceRoot","releaseFile","projectConstraintsFile","platformList","cordovaPluginsFile","appIdentifier","finishedUpgraders","projectCatalog","localCatalog","explicitlyAddedPackageNames","packageMapDelta","softRefreshIsopacks","isopackCache","forgetPreviousIsopackCache","_previousIsopackCache","_completedStage","_readResolverResultCache","readProjectMetadata","_completeStagesThrough","initializeCatalog","run","resolveConstraints","downloadMissingPackages","buildLocalPackages","saveChangedMetadata","prepareProjectForBuild","targetStage","assertInCapture","enterJob","completedStage","jobHasMessages","getProjectLocalDirectory","subdirectory","getMeteorShellDirectory","_readProjectMetadata","_ensureProjectDir","ReleaseFile","ProjectConstraintsFile","PackageMapFile","filename","CordovaPluginsFile","PlatformList","_ensureAppIdentifier","FinishedUpgraders","meteorConfig","appDirectory","writeReleaseFileAndDevBundleLink","releaseName","strictEqual","inCheckout","write","mkdir_p","constraintFilePath","exists","writeFileAtomically","gitignorePath","getProjectWatchSet","watchSet","WatchSet","each","metadataFile","merge","packageLocationWatchSet","getProjectAndLocalPackagesWatchSet","allLoadedLocalPackagesWatchSet","getLintingMessagesForLocalPackages","identifierFile","lines","getLinesOrEmpty","appId","find","map","trimSpaceAndComments","identity","randomIdentifier","join","comment","_resolveConstraints","assertInJob","depsAndConstraints","_getRootDepsAndConstraints","cachedVersions","getCachedVersions","anticipatedPrereleases","_getAnticipatedPrereleases","constraints","length","clone","p","resolverRunCount","runAndRetryWithRefreshIfHelpful","canRetry","resolver","_buildResolver","resolveOptions","previousSolution","missingPreviousVersionIsError","supportedIsobuildFeaturePackages","upgrade","solution","time","resolve","deps","e","constraintSolverError","versionParserError","error","message","tags","refreshCouldHelp","PackageMap","answer","PackageMapDelta","usedRCs","neededToUseUnanticipatedPrereleases","_saveResolverResultCache","_resolverResultCache","readFile","code","stringify","getOriginalAppDirForTestPackages","appDir","isString","_localPackageSearchDirs","searchDirs","PACKAGE_DIRS","warn","packageDirsFromEnvVar","envVar","delimiter","pathOsDelimiter","split","envPackageDirs","forEach","packagesDir","getCurrentToolsDir","_initializeCatalog","LocalCatalog","LayeredCatalog","initialize","localPackageSearchDirs","dir","localVersionRecord","getVersionBySourceRoot","packageName","_addAppConstraints","_addLocalPackageConstraints","_addReleaseConstraints","eachConstraint","constraint","package","getAllPackageNames","versionRecord","getLatestVersion","parsePackageConstraint","version","packages","rootConstraints","add","test","constraintObject","versionConstraint","alternatives","alt","versionString","ConstraintSolver","PackagesResolver","nudge","resultCache","_downloadMissingPackages","downloadPackagesMissingFromMap","_buildLocalPackages","IsopackCache","includeCordovaUnibuild","usesCordova","cacheDir","pluginCacheDirRoot","previousIsopackCache","lintLocalPackages","wipeCachedPackages","_saveChangedMetadata","writeIfModified","name","fullReleaseName","_modified","_constraintLines","_constraintMap","_readFile","contents","readAndWatchFile","extraConstraintMap","pkg","lineRecord","trim","skipOnWrite","splitBufferToLines","last","pop","line","leadingSpace","trailingSpaceAndComment","match","useBuildmessage","buildmessageFile","skipOnRead","file","keys","key","_write","lineParts","constraintString","messages","capture","title","hasMessages","formatMessages","iterator","getConstraint","addConstraints","constraintsToAdd","constraintToAdd","isEqual","addPackages","packagesToAdd","validatePackageName","updateReleaseConstraints","releaseRecord","compact","removePackages","packagesToRemove","filter","contains","removeAllPackages","_versions","fileInfo","readAndWatchFileWithHash","hash","trimSpace","packageVersion","parsePackageAndVersion","newVersions","packageNames","sort","fileContents","Buffer","from","sha1","addFile","_platforms","DEFAULT_PLATFORMS","platforms","difference","concat","getPlatforms","getCordovaPlatforms","isEmpty","getWebArchs","archs","canDelayBuildingArch","arch","_plugins","id","getPluginVersions","plugins","pluginNames","pluginName","unnormalizedReleaseName","displayReleaseName","releaseTrack","releaseVersion","fileMissing","noReleaseSpecified","normalReleaseSpecified","catalogUtils","parts","splitReleaseName","displayRelease","ensureDevBundleLink","getDevBundle","devBundle","devBundleParts","pathSep","meteorToolIndex","lastIndexOf","getReleaseVersion","meteorToolVersion","tool","realpath","makeLink","readLink","dotMeteorDir","pathDirname","localDir","devBundleLink","rm_recursive","newTarget","oldOSPath","oldTarget","readUpgraders","upgraders","appendUpgraders","appendText","upgrader","appendFile","constructor","packageJsonPath","_resolversByArch","Object","create","_ensureInitialized","json","_config","meteor","get","config","every","getNodeModulesToRecompileByArch","packageNamesByArch","recompile","Set","info","Array","isArray","where","getNodeModulesToRecompile","getMainModulesByArch","_getEntryModulesByArch","getMainModule","mainModulesByArch","_getEntryModule","getTestModulesByArch","getTestModule","testModulesByArch","configEntryModule","entryModulesByArch","entryMatch","mostSpecificMatch","entryModule","sourceRoot","targetArch","res","pathNormalize","pathRelative","path"],"mappings":"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","sourcesContent":["var assert = require(\"assert\");\nvar _ = require('underscore');\n\nvar archinfo = require('./utils/archinfo');\nvar buildmessage = require('./utils/buildmessage.js');\nvar catalog = require('./packaging/catalog/catalog.js');\nvar catalogLocal = require('./packaging/catalog/catalog-local.js');\nvar Console = require('./console/console.js').Console;\nvar files = require('./fs/files');\nvar isopackCacheModule = require('./isobuild/isopack-cache.js');\nimport { loadIsopackage } from './tool-env/isopackets.js';\nvar packageMapModule = require('./packaging/package-map.js');\nvar release = require('./packaging/release.js');\nvar tropohouse = require('./packaging/tropohouse.js');\nvar utils = require('./utils/utils.js');\nvar watch = require('./fs/watch');\nvar Profile = require('./tool-env/profile').Profile;\nimport { KNOWN_ISOBUILD_FEATURE_PACKAGES } from './isobuild/compiler.js';\n\nimport {\n  optimisticReadJsonOrNull,\n  optimisticHashOrNull,\n} from \"./fs/optimistic\";\n\nimport {\n  mapWhereToArches,\n} from \"./utils/archinfo\";\n\nimport Resolver from \"./isobuild/resolver\";\n\nconst CAN_DELAY_LEGACY_BUILD = ! JSON.parse(\n  process.env.METEOR_DISALLOW_DELAYED_LEGACY_BUILD || \"false\"\n);\n\n// The ProjectContext represents all the context associated with an app:\n// metadata files in the `.meteor` directory, the choice of package versions\n// used by it, etc.  Any time you want to work with an app, create a\n// ProjectContext and call prepareProjectForBuild on it (in a buildmessage\n// context).\n//\n// Note that this should only be used by parts of the code that truly require a\n// full project to exist; you won't find any reference to ProjectContext in\n// compiler.js or isopack.js, which work on individual files (though they will\n// get references to some of the objects which can be stored in a ProjectContext\n// such as PackageMap and IsopackCache).  Parts of the code that should deal\n// with ProjectContext include command implementations, the parts of bundler.js\n// that deal with creating a full project, PackageSource.initFromAppDir, stats\n// reporting, etc.\n//\n// Classes in this file follow the standard protocol where names beginning with\n// _ should not be externally accessed.\nfunction ProjectContext(options) {\n  var self = this;\n  assert.ok(self instanceof ProjectContext);\n\n  if (!options.projectDir)\n    throw Error(\"missing projectDir!\");\n\n  self.originalOptions = options;\n  self.reset();\n}\nexports.ProjectContext = ProjectContext;\n\n// The value is the name of the method to call to continue.\nvar STAGE = {\n  INITIAL: '_readProjectMetadata',\n  READ_PROJECT_METADATA: '_initializeCatalog',\n  INITIALIZE_CATALOG: '_resolveConstraints',\n  RESOLVE_CONSTRAINTS: '_downloadMissingPackages',\n  DOWNLOAD_MISSING_PACKAGES: '_buildLocalPackages',\n  BUILD_LOCAL_PACKAGES: '_saveChangedMetadata',\n  SAVE_CHANGED_METADATA: 'DONE'\n};\n\n_.extend(ProjectContext.prototype, {\n  reset: function (moreOptions, resetOptions) {\n    var self = this;\n    // Allow overriding some options until the next call to reset;\n    var options = _.extend({}, self.originalOptions, moreOptions);\n    // This is options that are actually directed at reset itself.\n    resetOptions = resetOptions || {};\n\n    self.projectDir = options.projectDir;\n    self.tropohouse = options.tropohouse || tropohouse.default;\n\n    self._includePackages = options.includePackages;\n\n    self._packageMapFilename = options.packageMapFilename ||\n      files.pathJoin(self.projectDir, '.meteor', 'versions');\n\n    self._serverArchitectures = options.serverArchitectures || [];\n    // We always need to download host versions of packages, at least for\n    // plugins.\n    self._serverArchitectures.push(archinfo.host());\n    self._serverArchitectures = _.uniq(self._serverArchitectures);\n\n    // test-packages overrides this to load local packages from your real app\n    // instead of from test-runner-app.\n    self._projectDirForLocalPackages = options.projectDirForLocalPackages ||\n      options.projectDir;\n    self._explicitlyAddedLocalPackageDirs =\n      options.explicitlyAddedLocalPackageDirs;\n\n    // Used to override the directory that Meteor's build process\n    // writes to; used by `meteor test` so that you can test your\n    // app in parallel to writing it, with an isolated database.\n    // You can override the default .meteor/local by specifying\n    // METEOR_LOCAL_DIR. You can use relative path if you want it\n    // relative to your project directory.\n    self.projectLocalDir = process.env.METEOR_LOCAL_DIR ?\n      files.pathResolve(options.projectDir,\n        files.convertToStandardPath(process.env.METEOR_LOCAL_DIR))\n      : (options.projectLocalDir ||\n        files.pathJoin(self.projectDir, '.meteor', 'local'));\n\n    // Used by 'meteor rebuild'; true to rebuild all packages, or a list of\n    // package names.  Deletes the isopacks and their plugin caches.\n    self._forceRebuildPackages = options.forceRebuildPackages;\n\n    // Set in a few cases where we really want to only get packages from\n    // checkout.\n    self._ignorePackageDirsEnvVar = options.ignorePackageDirsEnvVar;\n\n    // Set by some tests where we want to pretend that we don't have packages in\n    // the git checkout (because they're using a fake warehouse).\n    self._ignoreCheckoutPackages = options.ignoreCheckoutPackages;\n\n    // Set by some tests to override the official catalog.\n    self._officialCatalog = options.officialCatalog || catalog.official;\n\n    if (options.alwaysWritePackageMap && options.neverWritePackageMap)\n      throw Error(\"always or never?\");\n\n    // Set by 'meteor create' and 'meteor update' to ensure that\n    // .meteor/versions is always written even if release.current does not match\n    // the project's release.\n    self._alwaysWritePackageMap = options.alwaysWritePackageMap;\n\n    // Set by a few special-case commands that call\n    // projectConstraintsFile.addConstraints for internal reasons without\n    // intending to actually write .meteor/packages and .meteor/versions (eg,\n    // 'publish' wants to make sure making sure the test is built, and\n    // --get-ready wants to build every conceivable package).\n    self._neverWriteProjectConstraintsFile =\n      options.neverWriteProjectConstraintsFile;\n    self._neverWritePackageMap = options.neverWritePackageMap;\n\n    // Set by 'meteor update' to specify which packages may be updated. Array of\n    // package names.\n    self._upgradePackageNames = options.upgradePackageNames;\n    // Set by 'meteor update' to mean that we should upgrade the\n    // \"patch\" (and wrapNum, etc.) parts of indirect dependencies.\n    self._upgradeIndirectDepPatchVersions =\n      options.upgradeIndirectDepPatchVersions;\n\n    // Set by publishing commands to ensure that published packages always have\n    // a web.cordova slice (because we aren't yet smart enough to just default\n    // to using the web.browser slice instead or make a common 'web' slice).\n    self._forceIncludeCordovaUnibuild = options.forceIncludeCordovaUnibuild;\n\n    // If explicitly specified as null, use no release for constraints.\n    // If specified non-null, should be a release version catalog record.\n    // If not specified, defaults to release.current.\n    //\n    // Note that NONE of these cases are \"use the release from\n    // self.releaseFile\"; after all, if you are explicitly running `meteor\n    // --release foo` it will override what is found in .meteor/releases.\n    if (_.has(options, 'releaseForConstraints')) {\n      self._releaseForConstraints = options.releaseForConstraints || null;\n    } else if (release.current.isCheckout()) {\n      self._releaseForConstraints = null;\n    } else {\n      self._releaseForConstraints = release.current.getCatalogReleaseData();\n    }\n\n    if (resetOptions.preservePackageMap && self.packageMap) {\n      self._cachedVersionsBeforeReset = self.packageMap.toVersionMap();\n      // packageMapFile should always exist if packageMap does\n      self._oldPackageMapFileHash = self.packageMapFile.fileHash;\n    } else {\n      self._cachedVersionsBeforeReset = null;\n      self._oldPackageMapFileHash = null;\n    }\n\n    // The --allow-incompatible-update command-line switch, which allows\n    // the version solver to choose versions of root dependencies that are\n    // incompatible with the previously chosen versions (i.e. to downgrade\n    // them or change their major version).\n    self._allowIncompatibleUpdate = options.allowIncompatibleUpdate;\n\n    // If set, we run the linter on the app and local packages.  Set by 'meteor\n    // lint', and the runner commands (run/test-packages/debug) when --no-lint\n    // is not passed.\n    self.lintAppAndLocalPackages = options.lintAppAndLocalPackages;\n\n    // If set, we run the linter on just one local package, with this\n    // source root. Set by 'meteor lint' in a package, and 'meteor publish'.\n    self._lintPackageWithSourceRoot = options.lintPackageWithSourceRoot;\n\n    // Initialized by readProjectMetadata.\n    self.releaseFile = null;\n    self.projectConstraintsFile = null;\n    self.packageMapFile = null;\n    self.platformList = null;\n    self.cordovaPluginsFile = null;\n    self.appIdentifier = null;\n    self.finishedUpgraders = null;\n\n    // Initialized by initializeCatalog.\n    self.projectCatalog = null;\n    self.localCatalog = null;\n    // Once the catalog is read and the names of the \"explicitly\n    // added\" packages are determined, they will be listed here.\n    // (See explicitlyAddedLocalPackageDirs.)\n    // \"Explicitly added\" packages are typically present in non-app\n    // projects, like the one created by `meteor publish`.  This list\n    // is used to avoid pinning such packages to their previous\n    // versions when we run the version solver, which prevents an\n    // error telling you to pass `--allow-incompatible-update` when\n    // you publish your package after bumping the major version.\n    self.explicitlyAddedPackageNames = null;\n\n    // Initialized by _resolveConstraints.\n    self.packageMap = null;\n    self.packageMapDelta = null;\n\n    if (resetOptions.softRefreshIsopacks && self.isopackCache) {\n      // Make sure we only hold on to one old isopack cache, not a linked list\n      // of all of them.\n      self.isopackCache.forgetPreviousIsopackCache();\n      self._previousIsopackCache = self.isopackCache;\n    } else {\n      self._previousIsopackCache = null;\n    }\n    // Initialized by _buildLocalPackages.\n    self.isopackCache = null;\n\n    self._completedStage = STAGE.INITIAL;\n\n    // The resolverResultCache is used by the constraint solver; to\n    // us it's just an opaque object.  If we pass it into repeated\n    // calls to the constraint solver, the constraint solver can be\n    // more efficient by caching or memoizing its work.  We choose not\n    // to reset this when reset() is called more than once.\n    self._readResolverResultCache();\n  },\n\n  readProjectMetadata: function () {\n    // don't generate a profiling report for this stage (Profile.run),\n    // because all we do here is read a handful of files.\n    this._completeStagesThrough(STAGE.READ_PROJECT_METADATA);\n  },\n  initializeCatalog: function () {\n    Profile.run('ProjectContext initializeCatalog', () => {\n      this._completeStagesThrough(STAGE.INITIALIZE_CATALOG);\n    });\n  },\n  resolveConstraints: function () {\n    Profile.run('ProjectContext resolveConstraints', () => {\n      this._completeStagesThrough(STAGE.RESOLVE_CONSTRAINTS);\n    });\n  },\n  downloadMissingPackages: function () {\n    Profile.run('ProjectContext downloadMissingPackages', () => {\n      this._completeStagesThrough(STAGE.DOWNLOAD_MISSING_PACKAGES);\n    });\n  },\n  buildLocalPackages: function () {\n    Profile.run('ProjectContext buildLocalPackages', () => {\n      this._completeStagesThrough(STAGE.BUILD_LOCAL_PACKAGES);\n    });\n  },\n  saveChangedMetadata: function () {\n    Profile.run('ProjectContext saveChangedMetadata', () => {\n      this._completeStagesThrough(STAGE.SAVE_CHANGED_METADATA);\n    });\n  },\n  prepareProjectForBuild: function () {\n    // This is the same as saveChangedMetadata, but if we insert stages after\n    // that one it will continue to mean \"fully finished\".\n    Profile.run('ProjectContext prepareProjectForBuild', () => {\n      this._completeStagesThrough(STAGE.SAVE_CHANGED_METADATA);\n    });\n  },\n\n  _completeStagesThrough: function (targetStage) {\n    var self = this;\n    buildmessage.assertInCapture();\n\n    buildmessage.enterJob('preparing project', function () {\n      while (self._completedStage !== targetStage) {\n        // This error gets thrown if you request to go to a stage that's earlier\n        // than where you started. Note that the error will be mildly confusing\n        // because the key of STAGE does not match the value.\n        if (self.completedStage === STAGE.SAVE_CHANGED_METADATA)\n          throw Error(\"can't find requested stage \" + targetStage);\n\n        // The actual value of STAGE.FOO is the name of the method that takes\n        // you to the next step after FOO.\n        self[self._completedStage]();\n        if (buildmessage.jobHasMessages())\n          return;\n      }\n    });\n  },\n\n  getProjectLocalDirectory: function (subdirectory) {\n    var self = this;\n    return files.pathJoin(self.projectLocalDir, subdirectory);\n  },\n\n  getMeteorShellDirectory: function(projectDir) {\n    return this.getProjectLocalDirectory(\"shell\");\n  },\n\n  // You can call this manually (that is, the public version without\n  // an `_`) if you want to do some work before resolving constraints,\n  // or you can let prepareProjectForBuild do it for you.\n  //\n  // This should be pretty fast --- for example, we shouldn't worry about\n  // needing to wait for it to be done before we open the runner proxy.\n  _readProjectMetadata: Profile('_readProjectMetadata', function () {\n    var self = this;\n    buildmessage.assertInCapture();\n\n    buildmessage.enterJob('reading project metadata', function () {\n      // Ensure this is actually a project directory.\n      self._ensureProjectDir();\n      if (buildmessage.jobHasMessages())\n        return;\n\n      // Read .meteor/release.\n      self.releaseFile = new exports.ReleaseFile({\n        projectDir: self.projectDir,\n        catalog: self._officialCatalog,\n      });\n      if (buildmessage.jobHasMessages())\n        return;\n\n      // Read .meteor/packages.\n      self.projectConstraintsFile = new exports.ProjectConstraintsFile({\n        projectDir: self.projectDir,\n        includePackages: self._includePackages\n      });\n      if (buildmessage.jobHasMessages())\n        return;\n\n      // Read .meteor/versions.\n      self.packageMapFile = new exports.PackageMapFile({\n        filename: self._packageMapFilename\n      });\n      if (buildmessage.jobHasMessages())\n        return;\n\n      // Read .meteor/cordova-plugins.\n      self.cordovaPluginsFile = new exports.CordovaPluginsFile({\n        projectDir: self.projectDir\n      });\n      if (buildmessage.jobHasMessages())\n        return;\n\n      // Read .meteor/platforms, creating it if necessary.\n      self.platformList = new exports.PlatformList({\n        projectDir: self.projectDir\n      });\n      if (buildmessage.jobHasMessages())\n        return;\n\n      // Read .meteor/.id, creating it if necessary.\n      self._ensureAppIdentifier();\n      if (buildmessage.jobHasMessages())\n        return;\n\n      // Set up an object that knows how to read and write\n      // .meteor/.finished-upgraders.\n      self.finishedUpgraders = new exports.FinishedUpgraders({\n        projectDir: self.projectDir\n      });\n      if (buildmessage.jobHasMessages())\n        return;\n\n      self.meteorConfig = new MeteorConfig({\n        appDirectory: self.projectDir,\n      });\n      if (buildmessage.jobHasMessages()) {\n        return;\n      }\n    });\n\n    self._completedStage = STAGE.READ_PROJECT_METADATA;\n  }),\n\n  // Write the new release to .meteor/release and create a\n  // .meteor/dev_bundle symlink to the corresponding dev_bundle.\n  writeReleaseFileAndDevBundleLink(releaseName) {\n    assert.strictEqual(files.inCheckout(), false);\n    this.releaseFile.write(releaseName);\n  },\n\n  _ensureProjectDir: function () {\n    var self = this;\n    files.mkdir_p(files.pathJoin(self.projectDir, '.meteor'));\n\n    // This file existing is what makes a project directory a project directory,\n    // so let's make sure it exists!\n    var constraintFilePath = files.pathJoin(self.projectDir, '.meteor', 'packages');\n    if (! files.exists(constraintFilePath)) {\n      files.writeFileAtomically(constraintFilePath, '');\n    }\n\n    // Let's also make sure we have a minimal gitignore.\n    var gitignorePath = files.pathJoin(self.projectDir, '.meteor', '.gitignore');\n    if (! files.exists(gitignorePath)) {\n      files.writeFileAtomically(gitignorePath, 'local\\n');\n    }\n  },\n\n  // This is a WatchSet that ends up being the WatchSet for the app's\n  // initFromAppDir PackageSource. Changes to this will cause the whole app to\n  // be rebuilt (client and server).\n  getProjectWatchSet: function () {\n    // We don't cache a projectWatchSet on this object, since some of the\n    // metadata files can be written by us (eg .meteor/versions\n    // post-constraint-solve).\n    var self = this;\n    var watchSet = new watch.WatchSet;\n    _.each(\n      [self.releaseFile, self.projectConstraintsFile, self.packageMapFile,\n       self.platformList, self.cordovaPluginsFile],\n      function (metadataFile) {\n        metadataFile && watchSet.merge(metadataFile.watchSet);\n      });\n\n    if (self.localCatalog) {\n      watchSet.merge(self.localCatalog.packageLocationWatchSet);\n    }\n\n    return watchSet;\n  },\n\n  // This WatchSet encompasses everything that users can change to restart an\n  // app. We only watch this for failed bundles; for successful bundles, we have\n  // more precise server-specific and client-specific WatchSets that add up to\n  // this one.\n  getProjectAndLocalPackagesWatchSet: function () {\n    var self = this;\n    var watchSet = self.getProjectWatchSet();\n\n    // Include the loaded local packages (ie, the non-metadata files) but only\n    // if we've actually gotten to the buildLocalPackages step.\n    if (self.isopackCache) {\n      watchSet.merge(self.isopackCache.allLoadedLocalPackagesWatchSet);\n    }\n    return watchSet;\n  },\n\n  getLintingMessagesForLocalPackages: function () {\n    var self = this;\n    return self.isopackCache.getLintingMessagesForLocalPackages();\n  },\n\n  _ensureAppIdentifier: function () {\n    var self = this;\n    var identifierFile = files.pathJoin(self.projectDir, '.meteor', '.id');\n\n    // Find the first non-empty line, ignoring comments. We intentionally don't\n    // put this in a WatchSet, since changing this doesn't affect the built app\n    // much (and there's no real reason to update it anyway).\n    var lines = files.getLinesOrEmpty(identifierFile);\n    var appId = _.find(_.map(lines, files.trimSpaceAndComments), _.identity);\n\n    // If the file doesn't exist or has no non-empty lines, regenerate the\n    // token.\n    if (!appId) {\n      appId = [\n        utils.randomIdentifier(),\n        utils.randomIdentifier()\n      ].join(\".\");\n\n      var comment = (\n\"# This file contains a token that is unique to your project.\\n\" +\n\"# Check it into your repository along with the rest of this directory.\\n\" +\n\"# It can be used for purposes such as:\\n\" +\n\"#   - ensuring you don't accidentally deploy one app on top of another\\n\" +\n\"#   - providing package authors with aggregated statistics\\n\" +\n\"\\n\");\n      files.writeFileAtomically(identifierFile, comment + appId + '\\n');\n    }\n\n    self.appIdentifier = appId;\n  },\n\n  _resolveConstraints: Profile('_resolveConstraints', function () {\n    var self = this;\n    buildmessage.assertInJob();\n\n    var depsAndConstraints = self._getRootDepsAndConstraints();\n    // If this is in the runner and we have reset this ProjectContext for a\n    // rebuild, use the versions we calculated last time in this process (which\n    // may not have been written to disk if our release doesn't match the\n    // project's release on disk)... unless the actual file on disk has changed\n    // out from under us. Otherwise use the versions from .meteor/versions.\n    var cachedVersions;\n    if (self._cachedVersionsBeforeReset &&\n        self._oldPackageMapFileHash === self.packageMapFile.fileHash) {\n      // The file on disk hasn't change; reuse last time's results.\n      cachedVersions = self._cachedVersionsBeforeReset;\n    } else {\n      // We don't have a last time, or the file has changed; use\n      // .meteor/versions.\n      cachedVersions = self.packageMapFile.getCachedVersions();\n    }\n\n    var anticipatedPrereleases = self._getAnticipatedPrereleases(\n      depsAndConstraints.constraints, cachedVersions);\n\n    if (self.explicitlyAddedPackageNames.length) {\n      cachedVersions = _.clone(cachedVersions);\n      _.each(self.explicitlyAddedPackageNames, function (p) {\n        delete cachedVersions[p];\n      });\n    }\n\n    var resolverRunCount = 0;\n\n    // Nothing before this point looked in the official or project catalog!\n    // However, the resolver does, so it gets run in the retry context.\n    catalog.runAndRetryWithRefreshIfHelpful(function (canRetry) {\n      buildmessage.enterJob(\"selecting package versions\", function () {\n        var resolver = self._buildResolver();\n\n        var resolveOptions = {\n          previousSolution: cachedVersions,\n          anticipatedPrereleases: anticipatedPrereleases,\n          allowIncompatibleUpdate: self._allowIncompatibleUpdate,\n          // Not finding an exact match for a previous version in the catalog\n          // is considered an error if we haven't refreshed yet, and will\n          // trigger a refresh and another attempt.  That way, if a previous\n          // version exists, you'll get it, even if we don't have a record\n          // of it yet.  It's not actually fatal, though, for previousSolution\n          // to refer to package versions that we don't have access to or don't\n          // exist.  They'll end up getting changed or removed if possible.\n          missingPreviousVersionIsError: canRetry,\n          supportedIsobuildFeaturePackages: KNOWN_ISOBUILD_FEATURE_PACKAGES,\n        };\n        if (self._upgradePackageNames) {\n          resolveOptions.upgrade = self._upgradePackageNames;\n        }\n        if (self._upgradeIndirectDepPatchVersions) {\n          resolveOptions.upgradeIndirectDepPatchVersions = true;\n        }\n\n        resolverRunCount++;\n\n        var solution;\n        try {\n          Profile.time(\n            \"Select Package Versions\" +\n              (resolverRunCount > 1 ? (\" (Try \" + resolverRunCount + \")\") : \"\"),\n            function () {\n              solution = resolver.resolve(\n                depsAndConstraints.deps, depsAndConstraints.constraints,\n                resolveOptions);\n            });\n        } catch (e) {\n          if (!e.constraintSolverError && !e.versionParserError)\n            throw e;\n          // If the contraint solver gave us an error, refreshing\n          // might help to get new packages (see the comment on\n          // missingPreviousVersionIsError above).  If it's a\n          // package-version-parser error, print a nice message,\n          // but don't bother refreshing.\n          buildmessage.error(\n            e.message,\n            { tags: { refreshCouldHelp: !!e.constraintSolverError }});\n        }\n\n        if (buildmessage.jobHasMessages())\n          return;\n\n        self.packageMap = new packageMapModule.PackageMap(solution.answer, {\n          localCatalog: self.localCatalog\n        });\n\n        self.packageMapDelta = new packageMapModule.PackageMapDelta({\n          cachedVersions: cachedVersions,\n          packageMap: self.packageMap,\n          usedRCs: solution.usedRCs,\n          neededToUseUnanticipatedPrereleases:\n          solution.neededToUseUnanticipatedPrereleases,\n          anticipatedPrereleases: anticipatedPrereleases\n        });\n\n        self._saveResolverResultCache();\n\n        self._completedStage = STAGE.RESOLVE_CONSTRAINTS;\n      });\n    });\n  }),\n\n  _readResolverResultCache() {\n    if (! this._resolverResultCache) {\n      try {\n        this._resolverResultCache =\n          JSON.parse(files.readFile(files.pathJoin(\n            this.projectLocalDir,\n            \"resolver-result-cache.json\"\n          )));\n      } catch (e) {\n        if (e.code !== \"ENOENT\") throw e;\n        this._resolverResultCache = {};\n      }\n    }\n\n    return this._resolverResultCache;\n  },\n\n  _saveResolverResultCache() {\n    files.writeFileAtomically(\n      files.pathJoin(\n        this.projectLocalDir,\n        \"resolver-result-cache.json\"\n      ),\n      JSON.stringify(this._resolverResultCache) + \"\\n\"\n    );\n  },\n\n  // When running test-packages for an app with local packages, this\n  // method will return the original app dir, as opposed to the temporary\n  // testRunnerAppDir created for the tests.\n  getOriginalAppDirForTestPackages() {\n    const appDir = this._projectDirForLocalPackages;\n    if (_.isString(appDir) && appDir !== this.projectDir) {\n      return appDir;\n    }\n  },\n\n  _localPackageSearchDirs: function () {\n    const self = this;\n    let searchDirs = [\n      files.pathJoin(self._projectDirForLocalPackages, 'packages'),\n    ];\n\n    // User can provide additional package directories to search in\n    // METEOR_PACKAGE_DIRS (semi-colon/colon-separated, depending on OS),\n\n    // PACKAGE_DIRS Deprecated in 2016-10\n    // Warn users to migrate from PACKAGE_DIRS to METEOR_PACKAGE_DIRS\n    if (process.env.PACKAGE_DIRS) {\n      Console.warn('For compatibility, the PACKAGE_DIRS environment variable',\n        'is deprecated and will be removed in a future Meteor release.');\n      Console.warn('Developers should now use METEOR_PACKAGE_DIRS and',\n        'Windows projects should now use a semi-colon (;) to separate paths.');\n    }\n\n    function packageDirsFromEnvVar(envVar, delimiter = files.pathOsDelimiter) {\n      return process.env[envVar] && process.env[envVar].split(delimiter) || [];\n    }\n\n    const envPackageDirs = [\n    // METEOR_PACKAGE_DIRS should use the arch-specific delimiter\n      ...(packageDirsFromEnvVar('METEOR_PACKAGE_DIRS')),\n      // PACKAGE_DIRS (deprecated) always used ':' separator (yes, even Windows)\n      ...(packageDirsFromEnvVar('PACKAGE_DIRS', ':')),\n    ];\n\n    if (! self._ignorePackageDirsEnvVar && envPackageDirs.length) {\n      // path.delimiter was added in v0.9.3\n      envPackageDirs.forEach( p => searchDirs.push(files.pathResolve(p)) );\n    }\n\n    if (! self._ignoreCheckoutPackages && files.inCheckout()) {\n      // Running from a checkout, so use the Meteor core packages from the\n      // checkout.\n      const packagesDir =\n        files.pathJoin(files.getCurrentToolsDir(), 'packages');\n\n      searchDirs.push(\n        // Include packages like packages/ecmascript.\n        packagesDir,\n        // Include packages like packages/non-core/coffeescript.\n        files.pathJoin(packagesDir, \"non-core\"),\n        // Include packages like packages/non-core/blaze/packages/blaze.\n        files.pathJoin(packagesDir, \"non-core\", \"*\", \"packages\"),\n      );\n    }\n    return searchDirs;\n  },\n\n  // Returns a layered catalog with information about the packages that can be\n  // used in this project. Processes the package.js file from all local packages\n  // but does not compile the packages.\n  //\n  // Must be run in a buildmessage context. On build error, returns null.\n  _initializeCatalog: Profile('_initializeCatalog', function () {\n    var self = this;\n    buildmessage.assertInJob();\n\n    catalog.runAndRetryWithRefreshIfHelpful(function () {\n      buildmessage.enterJob(\n        \"scanning local packages\",\n        function () {\n          self.localCatalog = new catalogLocal.LocalCatalog;\n          self.projectCatalog = new catalog.LayeredCatalog(\n            self.localCatalog, self._officialCatalog);\n\n          var searchDirs = self._localPackageSearchDirs();\n          self.localCatalog.initialize({\n            localPackageSearchDirs: searchDirs,\n            explicitlyAddedLocalPackageDirs: self._explicitlyAddedLocalPackageDirs\n          });\n\n          if (buildmessage.jobHasMessages()) {\n            // Even if this fails, we want to leave self.localCatalog assigned,\n            // so that it gets counted included in the projectWatchSet.\n            return;\n          }\n\n          self.explicitlyAddedPackageNames = [];\n          _.each(self._explicitlyAddedLocalPackageDirs, function (dir) {\n            var localVersionRecord =\n                  self.localCatalog.getVersionBySourceRoot(dir);\n            if (localVersionRecord) {\n              self.explicitlyAddedPackageNames.push(localVersionRecord.packageName);\n            }\n          });\n\n          self._completedStage = STAGE.INITIALIZE_CATALOG;\n        }\n      );\n    });\n  }),\n\n  _getRootDepsAndConstraints: function () {\n    const depsAndConstraints = {\n      deps: [],\n      constraints: [],\n    };\n\n    this._addAppConstraints(depsAndConstraints);\n    this._addLocalPackageConstraints(depsAndConstraints);\n    this._addReleaseConstraints(depsAndConstraints);\n\n    return depsAndConstraints;\n  },\n\n  _addAppConstraints: function (depsAndConstraints) {\n    this.projectConstraintsFile.eachConstraint(function (constraint) {\n      // Add a dependency (\"this package must be used\") and a constraint\n      // (\"... at this version (maybe 'any reasonable')\").\n      depsAndConstraints.deps.push(constraint.package);\n      depsAndConstraints.constraints.push(constraint);\n    });\n  },\n\n  _addLocalPackageConstraints: function (depsAndConstraints) {\n    var self = this;\n    _.each(self.localCatalog.getAllPackageNames(), function (packageName) {\n      var versionRecord = self.localCatalog.getLatestVersion(packageName);\n      var constraint = utils.parsePackageConstraint(\n        packageName + \"@=\" + versionRecord.version);\n      // Add a constraint (\"this is the only version available\") but no\n      // dependency (we don't automatically use all local packages!)\n      depsAndConstraints.constraints.push(constraint);\n    });\n  },\n\n  _addReleaseConstraints: function (depsAndConstraints) {\n    var self = this;\n    if (! self._releaseForConstraints)\n      return;\n    _.each(self._releaseForConstraints.packages, function (version, packageName) {\n      var constraint = utils.parsePackageConstraint(\n        // Note that this used to be an exact name@=version constraint,\n        // before #7084 eliminated these constraints completely. They\n        // were reinstated in Meteor 1.4.3 as name@version constraints,\n        // and further refined to name@~version constraints in 1.5.2.\n        packageName + \"@~\" + version);\n      // Add a constraint but no dependency (we don't automatically use\n      // all local packages!):\n      depsAndConstraints.constraints.push(constraint);\n    });\n  },\n\n  _getAnticipatedPrereleases: function (rootConstraints, cachedVersions) {\n    var self = this;\n\n    var anticipatedPrereleases = {};\n    var add = function (packageName, version) {\n      if (! /-/.test(version)) {\n        return;\n      }\n      if (! _.has(anticipatedPrereleases, packageName)) {\n        anticipatedPrereleases[packageName] = {};\n      }\n      anticipatedPrereleases[packageName][version] = true;\n    };\n\n    // Pre-release versions that are root constraints (in .meteor/packages, in\n    // the release, or the version of a local package) are anticipated.\n    _.each(rootConstraints, function (constraintObject) {\n      _.each(constraintObject.versionConstraint.alternatives, function (alt) {\n        var version = alt.versionString;\n        version && add(constraintObject.package, version);\n      });\n    });\n\n    // Pre-release versions we decided to use in the past are anticipated.\n    _.each(cachedVersions, function (version, packageName) {\n      add(packageName, version);\n    });\n\n    return anticipatedPrereleases;\n  },\n\n  _buildResolver: function () {\n    const { ConstraintSolver } = loadIsopackage('constraint-solver');\n\n    return new ConstraintSolver.PackagesResolver(this.projectCatalog, {\n      nudge() {\n        Console.nudge(true);\n      },\n      Profile: Profile,\n      resultCache: this._resolverResultCache\n    });\n  },\n\n  _downloadMissingPackages: Profile('_downloadMissingPackages', function () {\n    var self = this;\n    buildmessage.assertInJob();\n    if (!self.packageMap)\n      throw Error(\"which packages to download?\");\n\n    catalog.runAndRetryWithRefreshIfHelpful(function () {\n      buildmessage.enterJob(\"downloading missing packages\", function () {\n        self.tropohouse.downloadPackagesMissingFromMap(self.packageMap, {\n          serverArchitectures: self._serverArchitectures\n        });\n        if (buildmessage.jobHasMessages())\n          return;\n        self._completedStage = STAGE.DOWNLOAD_MISSING_PACKAGES;\n      });\n    });\n  }),\n\n  _buildLocalPackages: Profile('_buildLocalPackages', function () {\n    var self = this;\n    buildmessage.assertInCapture();\n\n    self.isopackCache = new isopackCacheModule.IsopackCache({\n      packageMap: self.packageMap,\n      includeCordovaUnibuild: (self._forceIncludeCordovaUnibuild\n                               || self.platformList.usesCordova()),\n      cacheDir: self.getProjectLocalDirectory('isopacks'),\n      pluginCacheDirRoot: self.getProjectLocalDirectory('plugin-cache'),\n      tropohouse: self.tropohouse,\n      previousIsopackCache: self._previousIsopackCache,\n      lintLocalPackages: self.lintAppAndLocalPackages,\n      lintPackageWithSourceRoot: self._lintPackageWithSourceRoot\n    });\n\n    if (self._forceRebuildPackages) {\n      self.isopackCache.wipeCachedPackages(\n        self._forceRebuildPackages === true\n          ? null : self._forceRebuildPackages);\n    }\n\n    buildmessage.enterJob('building local packages', function () {\n      self.isopackCache.buildLocalPackages();\n    });\n    self._completedStage = STAGE.BUILD_LOCAL_PACKAGES;\n  }),\n\n  _saveChangedMetadata: Profile('_saveChangedMetadata', function () {\n    var self = this;\n\n    // Save any changes to .meteor/packages.\n    if (! self._neverWriteProjectConstraintsFile)\n      self.projectConstraintsFile.writeIfModified();\n\n    // Write .meteor/versions if the command always wants to (create/update),\n    // or if the release of the app matches the release of the process.\n    if (! self._neverWritePackageMap &&\n        (self._alwaysWritePackageMap ||\n         (release.current.isCheckout() && self.releaseFile.isCheckout()) ||\n         (! release.current.isCheckout() &&\n          release.current.name === self.releaseFile.fullReleaseName))) {\n\n      self.packageMapFile.write(self.packageMap);\n    }\n\n    self._completedStage = STAGE.SAVE_CHANGED_METADATA;\n  })\n});\n\n\n// Represents .meteor/packages.\nexports.ProjectConstraintsFile = function (options) {\n  var self = this;\n  buildmessage.assertInCapture();\n\n  self.filename = files.pathJoin(options.projectDir, '.meteor', 'packages');\n  self.watchSet = null;\n\n  // List of packages that should be included if not provided in .meteor/packages\n  self._includePackages = options.includePackages || [];\n\n  // Have we modified the in-memory representation since reading from disk?\n  self._modified = null;\n  // List of each line in the file; object with keys:\n  // - leadingSpace (string of spaces before the constraint)\n  // - constraint (as returned by utils.parsePackageConstraint)\n  // - trailingSpaceAndComment (string of spaces/comments after the constraint)\n  // This allows us to rewrite the file preserving comments.\n  self._constraintLines = null;\n  // Maps from package name to entry in _constraintLines.\n  self._constraintMap = null;\n  self._readFile();\n};\n\n_.extend(exports.ProjectConstraintsFile.prototype, {\n  _readFile: function () {\n    var self = this;\n    buildmessage.assertInCapture();\n\n    self.watchSet = new watch.WatchSet;\n    self._modified = false;\n    self._constraintMap = {};\n    self._constraintLines = [];\n    var contents = watch.readAndWatchFile(self.watchSet, self.filename);\n\n    // No .meteor/packages? This isn't a very good project directory. In fact,\n    // that's the definition of a project directory! (And that should have been\n    // fixed by _ensureProjectDir!)\n    if (contents === null)\n      throw Error(\"packages file missing: \" + self.filename);\n\n    var extraConstraintMap = {};\n    _.each(self._includePackages, function (pkg) {\n      var lineRecord = {\n        constraint: utils.parsePackageConstraint(pkg.trim()),\n        skipOnWrite: true\n      };\n      extraConstraintMap[lineRecord.constraint.package] = lineRecord;\n    });\n\n    var lines = files.splitBufferToLines(contents);\n    // Don't keep a record for the space at the end of the file.\n    if (lines.length && _.last(lines) === '')\n      lines.pop();\n\n    _.each(lines, function (line) {\n      var lineRecord =\n            { leadingSpace: '', constraint: null, trailingSpaceAndComment: '' };\n      self._constraintLines.push(lineRecord);\n      // Strip comment.\n      var match = line.match(/^([^#]*)(#.*)$/);\n      if (match) {\n        line = match[1];\n        lineRecord.trailingSpaceAndComment = match[2];\n      }\n      // Strip trailing space.\n      match = line.match(/^((?:.*\\S)?)(\\s*)$/);\n      line = match[1];\n      lineRecord.trailingSpaceAndComment =\n        match[2] + lineRecord.trailingSpaceAndComment;\n      // Strip leading space.\n      match = line.match(/^(\\s*)((?:\\S.*)?)$/);\n      lineRecord.leadingSpace = match[1];\n      line = match[2];\n\n      // No constraint? Leave lineRecord.constraint null and continue.\n      if (line === '')\n        return;\n      lineRecord.constraint = utils.parsePackageConstraint(line, {\n        useBuildmessage: true,\n        buildmessageFile: self.filename\n      });\n      if (! lineRecord.constraint)\n        return;  // recover by ignoring\n\n      // Mark as not iterable if already included in self._includePackages\n      if (_.has(extraConstraintMap, lineRecord.constraint.package))\n        lineRecord.skipOnRead = true;\n\n      if (_.has(self._constraintMap, lineRecord.constraint.package)) {\n        buildmessage.error(\n          \"Package name appears twice: \" + lineRecord.constraint.package, {\n            // XXX should this be relative?\n            file: self.filename\n          });\n        return;  // recover by ignoring\n      }\n      self._constraintMap[lineRecord.constraint.package] = lineRecord;\n    });\n\n    _.each(_.keys(extraConstraintMap), function (key) {\n      var lineRecord = extraConstraintMap[key];\n      self._constraintLines.push(lineRecord);\n      self._constraintMap[lineRecord.constraint.package] = lineRecord;\n    });\n  },\n\n  writeIfModified: function () {\n    var self = this;\n    self._modified && self._write();\n  },\n\n  _write: function () {\n    var self = this;\n    var lines = _.map(self._constraintLines, function (lineRecord) {\n      // Don't write packages that were not loaded from .meteor/packages\n      if (lineRecord.skipOnWrite)\n        return;\n      var lineParts = [lineRecord.leadingSpace];\n      if (lineRecord.constraint) {\n        lineParts.push(lineRecord.constraint.package);\n        if (lineRecord.constraint.constraintString) {\n          lineParts.push('@', lineRecord.constraint.constraintString);\n        }\n      }\n      lineParts.push(lineRecord.trailingSpaceAndComment, '\\n');\n      return lineParts.join('');\n    });\n    files.writeFileAtomically(self.filename, lines.join(''));\n    var messages = buildmessage.capture(\n      { title: 're-reading .meteor/packages' },\n      function () {\n        self._readFile();\n      });\n    // We shouldn't choke on something we just wrote!\n    if (messages.hasMessages())\n      throw Error(\"wrote bad .meteor/packages: \" + messages.formatMessages());\n  },\n\n  // Iterates over all constraints, in the format returned by\n  // utils.parsePackageConstraint.\n  eachConstraint: function (iterator) {\n    var self = this;\n    _.each(self._constraintLines, function (lineRecord) {\n      if (! lineRecord.skipOnRead && lineRecord.constraint)\n        iterator(lineRecord.constraint);\n    });\n  },\n\n  // Returns the constraint in the format returned by\n  // utils.parsePackageConstraint, or null.\n  getConstraint: function (name) {\n    var self = this;\n    if (_.has(self._constraintMap, name))\n      return self._constraintMap[name].constraint;\n    return null;\n  },\n\n  // Adds constraints, an array of objects as returned from\n  // utils.parsePackageConstraint.\n  // Does not write to disk immediately; changes are written to disk by\n  // writeIfModified() which is called in the _saveChangedMetadata step\n  // of project preparation.\n  addConstraints: function (constraintsToAdd) {\n    var self = this;\n    _.each(constraintsToAdd, function (constraintToAdd) {\n      if (! constraintToAdd.package) {\n        throw new Error(\"Expected PackageConstraint: \" + constraintToAdd);\n      }\n\n      var lineRecord;\n      if (! _.has(self._constraintMap, constraintToAdd.package)) {\n        lineRecord = {\n          leadingSpace: '',\n          constraint: constraintToAdd,\n          trailingSpaceAndComment: ''\n        };\n        self._constraintLines.push(lineRecord);\n        self._constraintMap[constraintToAdd.package] = lineRecord;\n        self._modified = true;\n        return;\n      }\n      lineRecord = self._constraintMap[constraintToAdd.package];\n      if (_.isEqual(constraintToAdd, lineRecord.constraint))\n        return;  // nothing changed\n      lineRecord.constraint = constraintToAdd;\n      self._modified = true;\n    });\n  },\n\n  // Like addConstraints, but takes an array of package name strings\n  // to add with no version constraint\n  addPackages: function (packagesToAdd) {\n    this.addConstraints(_.map(packagesToAdd, function (packageName) {\n      // make sure packageName is valid (and doesn't, for example,\n      // contain an '@' sign)\n      utils.validatePackageName(packageName);\n      return utils.parsePackageConstraint(packageName);\n    }));\n  },\n\n  // For every package we already have, update the constraint to be semver>=\n  // the constraint from the release\n  updateReleaseConstraints: function (releaseRecord) {\n    this.addConstraints(\n      _.compact(_.map(releaseRecord.packages, (version, packageName) => {\n        if (this.getConstraint(packageName)) {\n          return utils.parsePackageConstraint(packageName + '@' + version);\n        }\n      }))\n    );\n  },\n\n  // The packages in packagesToRemove are expected to actually be in the file;\n  // if you want to provide different output for packages in the file vs not,\n  // you should have already done that.\n  // Does not write to disk immediately; changes are written to disk by\n  // writeIfModified() which is called in the _saveChangedMetadata step\n  // of project preparation.\n  removePackages: function (packagesToRemove) {\n    var self = this;\n    self._constraintLines = _.filter(\n      self._constraintLines, function (lineRecord) {\n        return ! (lineRecord.constraint &&\n                  _.contains(packagesToRemove, lineRecord.constraint.package));\n      });\n    _.each(packagesToRemove, function (p) {\n      delete self._constraintMap[p];\n    });\n    self._modified = true;\n  },\n\n  // Removes all constraints. Generally this should only be used in situations\n  // where the project is not a real user app: while you can use\n  // removeAllPackages followed by addConstraints to fully replace the\n  // constraints in a project, this will also lose all user comments and\n  // (cosmetic) ordering from the file.\n  removeAllPackages: function () {\n    var self = this;\n    self._constraintLines = [];\n    self._constraintMap = {};\n    self._modified = true;\n  }\n});\n\n\n\n// Represents .meteor/versions.\nexports.PackageMapFile = function (options) {\n  var self = this;\n  buildmessage.assertInCapture();\n\n  self.filename = options.filename;\n  self.watchSet = new watch.WatchSet;\n  self.fileHash = null;\n  self._versions = {};\n\n  self._readFile();\n};\n\n_.extend(exports.PackageMapFile.prototype, {\n  _readFile: function () {\n    var self = this;\n\n    var fileInfo = watch.readAndWatchFileWithHash(self.watchSet, self.filename);\n    var contents = fileInfo.contents;\n    self.fileHash = fileInfo.hash;\n    // No .meteor/versions? That's OK, you just get to start your calculation\n    // from scratch.\n    if (contents === null)\n      return;\n\n    buildmessage.assertInCapture();\n    var lines = files.splitBufferToLines(contents);\n    _.each(lines, function (line) {\n      // We don't allow comments here, since it's cruel to allow comments in a\n      // file when you're going to overwrite them anyway.\n      line = files.trimSpace(line);\n      if (line === '')\n        return;\n      var packageVersion = utils.parsePackageAndVersion(line, {\n        useBuildmessage: true,\n        buildmessageFile: self.filename\n      });\n      if (!packageVersion)\n        return;  // recover by ignoring\n\n      // If a package appears multiple times in .meteor/versions, we just ignore\n      // the second one. This file is more meteor-controlled than\n      // .meteor/packages and people shouldn't be surprised to see it\n      // automatically fixed.\n      if (_.has(self._versions, packageVersion.package))\n        return;\n\n      self._versions[packageVersion.package] = packageVersion.version;\n    });\n  },\n\n  // Note that this is really specific to wanting to know what versions are in\n  // the .meteor/versions file on disk, which is a slightly different question\n  // from \"so, what versions should I be building with?\"  Usually you want the\n  // PackageMap produced by resolving constraints instead! Returns a map from\n  // package name to version.\n  getCachedVersions: function () {\n    var self = this;\n    return _.clone(self._versions);\n  },\n\n  write: function (packageMap) {\n    var self = this;\n    var newVersions = packageMap.toVersionMap();\n\n    // Only write the file if some version changed. (We don't need to do no-op\n    // writes, even if they fix sorting in the file.)\n    if (_.isEqual(self._versions, newVersions))\n      return;\n\n    self._versions = newVersions;\n    var packageNames = _.keys(self._versions);\n    packageNames.sort();\n    var lines = [];\n    _.each(packageNames, function (packageName) {\n      lines.push(packageName + \"@\" + self._versions[packageName] + \"\\n\");\n    });\n    var fileContents = Buffer.from(lines.join(''));\n    files.writeFileAtomically(self.filename, fileContents);\n\n    // Replace our watchSet with one for the new contents of the file.\n    var hash = watch.sha1(fileContents);\n    self.watchSet = new watch.WatchSet;\n    self.watchSet.addFile(self.filename, hash);\n  }\n});\n\n\n\n// Represents .meteor/platforms. We take no effort to maintain comments or\n// spacing here.\nexports.PlatformList = function (options) {\n  var self = this;\n\n  self.filename = files.pathJoin(options.projectDir, '.meteor', 'platforms');\n  self.watchSet = null;\n  self._platforms = null;\n\n  self._readFile();\n};\n\n// These platforms are always present and can be neither added or removed\nexports.PlatformList.DEFAULT_PLATFORMS = ['browser', 'server'];\n\n_.extend(exports.PlatformList.prototype, {\n  _readFile: function () {\n    var self = this;\n\n    // Reset the WatchSet.\n    self.watchSet = new watch.WatchSet;\n    var contents = watch.readAndWatchFile(self.watchSet, self.filename);\n\n    var platforms = contents ? files.splitBufferToLines(contents) : [];\n    // We don't allow comments here, since it's cruel to allow comments in a\n    // file when you're going to overwrite them anyway.\n    platforms = _.uniq(_.compact(_.map(platforms, files.trimSpace)));\n    platforms.sort();\n\n    // Missing some of the default platforms (or the whole file)? Add them and\n    // try again.\n    if (_.difference(exports.PlatformList.DEFAULT_PLATFORMS,\n                     platforms).length) {\n      // Write the platforms to disk (automatically adding DEFAULT_PLATFORMS and\n      // sorting), which automatically calls this function recursively to\n      // re-reads them.\n      self.write(platforms);\n      return;\n    }\n\n    self._platforms = platforms;\n  },\n\n  // Replaces the current platform file with the given list and resets this\n  // object (and its WatchSet) to track the new value.\n  write: function (platforms) {\n    var self = this;\n    self._platforms = null;\n    platforms = _.uniq(\n      platforms.concat(exports.PlatformList.DEFAULT_PLATFORMS));\n    platforms.sort();\n    files.writeFileAtomically(self.filename, platforms.join('\\n') + '\\n');\n    self._readFile();\n  },\n\n  getPlatforms: function () {\n    var self = this;\n    return _.clone(self._platforms);\n  },\n\n  getCordovaPlatforms: function () {\n    var self = this;\n    return _.difference(self._platforms,\n                        exports.PlatformList.DEFAULT_PLATFORMS);\n  },\n\n  usesCordova: function () {\n    var self = this;\n    return ! _.isEmpty(self.getCordovaPlatforms());\n  },\n\n  getWebArchs() {\n    var self = this;\n    var archs = [\n      \"web.browser\",\n      \"web.browser.legacy\",\n    ];\n    if (self.usesCordova()) {\n      archs.push(\"web.cordova\");\n    }\n    return archs;\n  },\n\n  canDelayBuildingArch(arch) {\n    return CAN_DELAY_LEGACY_BUILD &&\n      arch === \"web.browser.legacy\";\n  }\n});\n\n\n// Represents .meteor/cordova-plugins.\nexports.CordovaPluginsFile = function (options) {\n  var self = this;\n  buildmessage.assertInCapture();\n\n  self.filename = files.pathJoin(options.projectDir, '.meteor', 'cordova-plugins');\n  self.watchSet = null;\n  // Map from plugin name to version.\n  self._plugins = null;\n\n  self._readFile();\n};\n\n_.extend(exports.CordovaPluginsFile.prototype, {\n  _readFile: function () {\n    var self = this;\n    buildmessage.assertInCapture();\n\n    self.watchSet = new watch.WatchSet;\n    self._plugins = {};\n    var contents = watch.readAndWatchFile(self.watchSet, self.filename);\n    // No file?  No plugins.\n    if (contents === null)\n      return;\n\n    var lines = files.splitBufferToLines(contents);\n    _.each(lines, function (line) {\n      line = files.trimSpace(line);\n      if (line === '')\n        return;\n\n      // We just do a standard split here, not utils.parsePackageConstraint,\n      // since cordova plugins don't necessarily obey the same naming\n      // conventions as Meteor packages.\n      let { id, version } =\n        require('./cordova/package-id-version-parser.js').parse(line);\n      if (! version) {\n        buildmessage.error(\"Cordova plugin must specify version: \" + line, {\n          // XXX should this be relative?\n          file: self.filename\n        });\n        return;  // recover by ignoring\n      }\n      if (_.has(self._plugins, id)) {\n        buildmessage.error(\"Plugin name appears twice: \" + id, {\n          // XXX should this be relative?\n          file: self.filename\n        });\n        return;  // recover by ignoring\n      }\n      self._plugins[id] = version;\n    });\n  },\n\n  getPluginVersions: function () {\n    var self = this;\n    return _.clone(self._plugins);\n  },\n\n  write: function (plugins) {\n    var self = this;\n    var pluginNames = _.keys(plugins);\n    pluginNames.sort();\n    var lines = _.map(pluginNames, function (pluginName) {\n      return pluginName + '@' + plugins[pluginName] + '\\n';\n    });\n    files.writeFileAtomically(self.filename, lines.join(''));\n    var messages = buildmessage.capture(\n      { title: 're-reading .meteor/cordova-plugins' },\n      function () {\n        self._readFile();\n      });\n    // We shouldn't choke on something we just wrote!\n    if (messages.hasMessages())\n      throw Error(\"wrote bad .meteor/packages: \" + messages.formatMessages());\n  }\n});\n\n\n\n// Represents .meteor/release.\nexports.ReleaseFile = function (options) {\n  var self = this;\n\n  self.filename = files.pathJoin(options.projectDir, '.meteor', 'release');\n  self.catalog = options.catalog || catalog.official;\n\n  self.watchSet = null;\n  // The release name actually written in the file.  Null if no fill.  Empty if\n  // the file is empty.\n  self.unnormalizedReleaseName = null;\n  // The full release name (with METEOR@ if it's missing in\n  // unnormalizedReleaseName).\n  self.fullReleaseName = null;\n  // FOO@bar unless FOO === \"METEOR\" in which case \"Meteor bar\".\n  self.displayReleaseName = null;\n  // Just the track.\n  self.releaseTrack = null;\n  self.releaseVersion = null;\n  self._readFile();\n};\n\n_.extend(exports.ReleaseFile.prototype, {\n  fileMissing: function () {\n    var self = this;\n    return self.unnormalizedReleaseName === null;\n  },\n  noReleaseSpecified: function () {\n    var self = this;\n    return self.unnormalizedReleaseName === '';\n  },\n  isCheckout: function () {\n    var self = this;\n    return self.unnormalizedReleaseName === 'none';\n  },\n  normalReleaseSpecified: function () {\n    var self = this;\n    return ! (self.fileMissing() || self.noReleaseSpecified()\n              || self.isCheckout());\n  },\n\n  _readFile: function () {\n    var self = this;\n\n    // Start a new watchSet, in case we just overwrote this.\n    self.watchSet = new watch.WatchSet;\n    var contents = watch.readAndWatchFile(self.watchSet, self.filename);\n    // If file doesn't exist, leave unnormalizedReleaseName empty; fileMissing\n    // will be true.\n    if (contents === null)\n      return;\n\n    var lines = _.compact(_.map(files.splitBufferToLines(contents),\n                                files.trimSpaceAndComments));\n    // noReleaseSpecified will be true.\n    if (!lines.length) {\n      self.unnormalizedReleaseName = '';\n      return;\n    }\n\n    self.unnormalizedReleaseName = lines[0];\n\n    const catalogUtils = require('./packaging/catalog/catalog-utils.js');\n    var parts = catalogUtils.splitReleaseName(self.unnormalizedReleaseName);\n    self.fullReleaseName = parts[0] + '@' + parts[1];\n    self.displayReleaseName = catalogUtils.displayRelease(parts[0], parts[1]);\n    self.releaseTrack = parts[0];\n    self.releaseVersion = parts[1];\n\n    self.ensureDevBundleLink();\n  },\n\n  // Returns an absolute path to the dev_bundle appropriate for the\n  // release specified in the .meteor/release file.\n  getDevBundle() {\n    let devBundle = files.getDevBundle();\n    const devBundleParts = devBundle.split(files.pathSep);\n    const meteorToolIndex = devBundleParts.lastIndexOf(\"meteor-tool\");\n\n    if (meteorToolIndex >= 0) {\n      const releaseVersion = this.catalog.getReleaseVersion(\n        this.releaseTrack,\n        this.releaseVersion\n      );\n\n      if (releaseVersion) {\n        const meteorToolVersion = releaseVersion.tool.split(\"@\").pop();\n        devBundleParts[meteorToolIndex + 1] = meteorToolVersion;\n        devBundle = devBundleParts.join(files.pathSep);\n      }\n    }\n\n    try {\n      return files.realpath(devBundle);\n    } catch (e) {\n      if (e.code !== \"ENOENT\") throw e;\n      return null;\n    }\n  },\n\n  // Make a symlink from .meteor/local/dev_bundle to the actual dev_bundle.\n  ensureDevBundleLink() {\n    import { makeLink, readLink } from \"./cli/dev-bundle-links.js\";\n\n    const dotMeteorDir = files.pathDirname(this.filename);\n    const localDir = files.pathJoin(dotMeteorDir, \"local\");\n    const devBundleLink = files.pathJoin(localDir, \"dev_bundle\");\n\n    if (this.isCheckout()) {\n      // Only create .meteor/local/dev_bundle if .meteor/release refers to\n      // an actual release, and remove it otherwise.\n      files.rm_recursive(devBundleLink);\n      return;\n    }\n\n    if (files.inCheckout()) {\n      // Never update .meteor/local/dev_bundle to point to a checkout.\n      return;\n    }\n\n    const newTarget = this.getDevBundle();\n    if (! newTarget) {\n      return;\n    }\n\n    try {\n      const oldOSPath = readLink(devBundleLink);\n      const oldTarget = files.convertToStandardPath(oldOSPath);\n      if (newTarget === oldTarget) {\n        // Don't touch .meteor/local/dev_bundle if it already points to\n        // the right target path.\n        return;\n      }\n\n      files.mkdir_p(localDir);\n      makeLink(newTarget, devBundleLink);\n\n    } catch (e) {\n      if (e.code !== \"ENOENT\") {\n        // It's ok if the above commands failed because the target path\n        // did not exist, but other errors should not be silenced.\n        throw e;\n      }\n    }\n  },\n\n  write: function (releaseName) {\n    var self = this;\n    files.writeFileAtomically(self.filename, releaseName + '\\n');\n    self._readFile();\n  }\n});\n\n\n// Represents .meteor/.finished-upgraders.\n// This is only used in a few places, so we don't cache its value in memory;\n// we just read it when we need it. There's also no need to add it to a\n// watchSet because we don't need to rebuild when it changes.\nexports.FinishedUpgraders = function (options) {\n  var self = this;\n\n  self.filename = files.pathJoin(\n    options.projectDir, '.meteor', '.finished-upgraders');\n};\n\n_.extend(exports.FinishedUpgraders.prototype, {\n  readUpgraders: function () {\n    var self = this;\n    var upgraders = [];\n    var lines = files.getLinesOrEmpty(self.filename);\n    _.each(lines, function (line) {\n      line = files.trimSpaceAndComments(line);\n      if (line === '')\n        return;\n      upgraders.push(line);\n    });\n    return upgraders;\n  },\n\n  appendUpgraders: function (upgraders) {\n    var self = this;\n\n    var current = null;\n    try {\n      current = files.readFile(self.filename, 'utf8');\n    } catch (e) {\n      if (e.code !== 'ENOENT')\n        throw e;\n    }\n\n    var appendText = '';\n    if (current === null) {\n      // We're creating this file for the first time. Include a helpful comment.\n      appendText =\n\"# This file contains information which helps Meteor properly upgrade your\\n\" +\n\"# app when you run 'meteor update'. You should check it into version control\\n\" +\n\"# with your project.\\n\" +\n\"\\n\";\n    } else if (current.length && current[current.length - 1] !== '\\n') {\n      // File has an unterminated last line. Let's terminate it.\n      appendText = '\\n';\n    }\n\n    _.each(upgraders, function (upgrader) {\n      appendText += upgrader + '\\n';\n    });\n\n    files.appendFile(self.filename, appendText);\n  }\n});\n\nexport class MeteorConfig {\n  constructor({\n    appDirectory,\n  }) {\n    this.appDirectory = appDirectory;\n    this.packageJsonPath = files.pathJoin(appDirectory, \"package.json\");\n    this.watchSet = new watch.WatchSet;\n    this._resolversByArch = Object.create(null);\n  }\n\n  _ensureInitialized() {\n    if (! _.has(this, \"_config\")) {\n      const json = optimisticReadJsonOrNull(this.packageJsonPath);\n      this._config = json && json.meteor || null;\n      this.watchSet.addFile(\n        this.packageJsonPath,\n        optimisticHashOrNull(this.packageJsonPath)\n      );\n    }\n\n    return this._config;\n  }\n\n  // General utility for querying the \"meteor\" section of package.json.\n  // TODO Implement an API for setting these values?\n  get(...keys) {\n    let config = this._ensureInitialized();\n    if (config) {\n      keys.every(key => {\n        if (config && _.has(config, key)) {\n          config = config[key];\n          return true;\n        }\n      });\n      return config;\n    }\n  }\n\n  getNodeModulesToRecompileByArch() {\n    const packageNamesByArch = Object.create(null);\n    const recompile = this.get(\"nodeModules\", \"recompile\");\n\n    if (recompile && typeof recompile === \"object\") {\n      const get = arch => packageNamesByArch[arch] || (\n        packageNamesByArch[arch] = new Set);\n\n      Object.keys(recompile).forEach(packageName => {\n        const info = recompile[packageName];\n        if (! info) return;\n        if (info === true) {\n          get(\"web\").add(packageName);\n          get(\"os\").add(packageName);\n        } else if (typeof info === \"string\") {\n          mapWhereToArches(info).forEach(arch => {\n            get(arch).add(packageName);\n          });\n        } else if (Array.isArray(info)) {\n          info.forEach(where => {\n            mapWhereToArches(where).forEach(arch => {\n              get(arch).add(packageName);\n            });\n          });\n        }\n      });\n    }\n\n    return packageNamesByArch;\n  }\n\n  getNodeModulesToRecompile(\n    arch,\n    packageNamesByArch = this.getNodeModulesToRecompileByArch(),\n  ) {\n    return packageNamesByArch[arch];\n  }\n\n  // Call this first if you plan to call getMainModule multiple\n  // times, so that you can avoid repeating this work each time.\n  getMainModulesByArch() {\n    return this._getEntryModulesByArch(\"mainModule\");\n  }\n\n  // Given an architecture like web.browser, get the best mainModule for\n  // that architecture. For example, if this.config.mainModule.client is\n  // defined, then because mapWhereToArch(\"client\") === \"web\", and \"web\"\n  // matches web.browser, return this.config.mainModule.client.\n  getMainModule(\n    arch,\n    mainModulesByArch = this.getMainModulesByArch(),\n  ) {\n    return this._getEntryModule(arch, mainModulesByArch);\n  }\n\n  // Analogous to getMainModulesByArch, except for this.config.testModule.\n  getTestModulesByArch() {\n    return this._getEntryModulesByArch(\"testModule\");\n  }\n\n  // Analogous to getMainModule, except for this.config.testModule.\n  getTestModule(\n    arch,\n    testModulesByArch = this.getTestModulesByArch(),\n  ) {\n    return this._getEntryModule(arch, testModulesByArch);\n  }\n\n  _getEntryModulesByArch(...keys) {\n    const configEntryModule = this.get(...keys);\n    const entryModulesByArch = Object.create(null);\n\n    if (typeof configEntryModule === \"string\" ||\n        configEntryModule === false) {\n      // If the top-level config value is a string or false, use that\n      // value as the entry module for all architectures.\n      entryModulesByArch[\"os\"] = configEntryModule;\n      entryModulesByArch[\"web\"] = configEntryModule;\n    } else if (configEntryModule &&\n               typeof configEntryModule === \"object\") {\n      // If the top-level config value is an object, use its properties to\n      // select an entry module for each architecture.\n      Object.keys(configEntryModule).forEach(where => {\n        mapWhereToArches(where).forEach(arch => {\n          entryModulesByArch[arch] = configEntryModule[where];\n        });\n      });\n    }\n\n    return entryModulesByArch;\n  }\n\n  _getEntryModule(\n    arch,\n    entryModulesByArch,\n  ) {\n    const entryMatch = archinfo.mostSpecificMatch(\n      arch, Object.keys(entryModulesByArch));\n\n    if (entryMatch) {\n      const entryModule = entryModulesByArch[entryMatch];\n\n      if (entryModule === false) {\n        // If meteor.{main,test}Module.{client,server,...} === false, no\n        // modules will be loaded eagerly on the client or server. This is\n        // useful if you have an app with no special app/{client,server}\n        // directory structure and you want to specify an entry point for\n        // just the client (or just the server), without accidentally\n        // loading everything on the other architecture. Instead of\n        // omitting the entry module for the other architecture, simply\n        // set it to false.\n        return entryModule;\n      }\n\n      if (! this._resolversByArch[arch]) {\n        this._resolversByArch[arch] = new Resolver({\n          sourceRoot: this.appDirectory,\n          targetArch: arch,\n        });\n      }\n\n      // Use a Resolver to allow the mainModule strings to omit .js or\n      // .json file extensions, and to enable resolving directories\n      // containing package.json or index.js files.\n      const res = this._resolversByArch[arch].resolve(\n        // Only relative paths are allowed (not top-level packages).\n        \"./\" + files.pathNormalize(entryModule),\n        this.packageJsonPath\n      );\n\n      if (res && typeof res === \"object\") {\n        return files.pathRelative(this.appDirectory, res.path);\n      }\n\n      buildmessage.error(\n        `Could not resolve meteor.mainModule ${\n          JSON.stringify(entryModule)\n        } in ${\n          files.pathRelative(\n            this.appDirectory,\n            this.packageJsonPath\n          )\n        } (${arch})`\n      );\n    }\n  }\n}\n"],"file":"tools/project-context.js.map"}