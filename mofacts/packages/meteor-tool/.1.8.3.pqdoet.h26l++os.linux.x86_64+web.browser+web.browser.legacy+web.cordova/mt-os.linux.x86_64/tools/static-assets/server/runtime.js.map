{"version":3,"sources":["/tools/static-assets/server/runtime.js"],"names":["Module","module","constructor","Mp","prototype","resolve","id","_resolveFilename","require","enable","moduleLoad","load","filename","result","apply","arguments","runSetters","resolved","Promise","dynamicImport","then","reifyBabelParse","parse","reifyCompile","compile","_compile","content","generateLetDeclarations","ast","identical","code","call"],"mappings":";AAAA,QAAMA,MAAM,GAAGC,MAAM,CAACC,WAAtB;AACA,QAAMC,EAAE,GAAGH,MAAM,CAACI,SAAlB;;AAEAD,EAAAA,EAAE,CAACE,OAAH,GAAa,UAAUC,EAAV,EAAc;AACzB,WAAON,MAAM,CAACO,gBAAP,CAAwBD,EAAxB,EAA4B,IAA5B,CAAP;AACD,GAFD,C,CAIA;;;AACAE,EAAAA,OAAO,CAAC,mBAAD,CAAP,CAA6BC,MAA7B,CAAoCN,EAApC;;AAEA,QAAMO,UAAU,GAAGP,EAAE,CAACQ,IAAtB;;AACAR,EAAAA,EAAE,CAACQ,IAAH,GAAU,UAAUC,QAAV,EAAoB;AAC5B,UAAMC,MAAM,GAAGH,UAAU,CAACI,KAAX,CAAiB,IAAjB,EAAuBC,SAAvB,CAAf;;AACA,QAAI,OAAO,KAAKC,UAAZ,KAA2B,UAA/B,EAA2C;AACzC;AACA;AACA,WAAKA,UAAL;AACD;;AACD,WAAOH,MAAP;AACD,GARD;;AAUA,QAAMI,QAAQ,GAAGC,OAAO,CAACb,OAAR,EAAjB;;AACAF,EAAAA,EAAE,CAACgB,aAAH,GAAmB,UAAUb,EAAV,EAAc;AAC/B,WAAOW,QAAQ,CAACG,IAAT,CAAc,MAAMZ,OAAO,CAACF,EAAD,CAA3B,CAAP;AACD,GAFD;;AAIA,QAAMe,eAAe,GAAGb,OAAO,CAAC,yBAAD,CAAP,CAAmCc,KAA3D;;AACA,QAAMC,YAAY,GAAGf,OAAO,CAAC,oBAAD,CAAP,CAA8BgB,OAAnD;;AACA,QAAMC,QAAQ,GAAGtB,EAAE,CAACsB,QAApB;;AACAtB,EAAAA,EAAE,CAACsB,QAAH,GAAc,UAAUC,OAAV,EAAmBd,QAAnB,EAA6B;AACzC,QAAI;AACF,YAAMC,MAAM,GAAGU,YAAY,CAACG,OAAD,EAAU;AACnCJ,QAAAA,KAAK,EAAED,eAD4B;AAEnCM,QAAAA,uBAAuB,EAAE,KAFU;AAGnCC,QAAAA,GAAG,EAAE;AAH8B,OAAV,CAA3B;;AAKA,UAAI,CAACf,MAAM,CAACgB,SAAZ,EAAuB;AACrBH,QAAAA,OAAO,GAAGb,MAAM,CAACiB,IAAjB;AACD;AACF,KATD,SASU;AACR,aAAOL,QAAQ,CAACM,IAAT,CAAc,IAAd,EAAoBL,OAApB,EAA6Bd,QAA7B,CAAP;AACD;AACF,GAbD","sourcesContent":["const Module = module.constructor;\nconst Mp = Module.prototype;\n\nMp.resolve = function (id) {\n  return Module._resolveFilename(id, this);\n};\n\n// Enable the module.{watch,export,...} runtime API needed by Reify.\nrequire(\"reify/lib/runtime\").enable(Mp);\n\nconst moduleLoad = Mp.load;\nMp.load = function (filename) {\n  const result = moduleLoad.apply(this, arguments);\n  if (typeof this.runSetters === \"function\") {\n    // Make sure we call module.runSetters (or module.runModuleSetters, a\n    // legacy synonym) whenever a module finishes loading.\n    this.runSetters();\n  }\n  return result;\n};\n\nconst resolved = Promise.resolve();\nMp.dynamicImport = function (id) {\n  return resolved.then(() => require(id));\n};\n\nconst reifyBabelParse = require(\"reify/lib/parsers/babel\").parse;\nconst reifyCompile = require(\"reify/lib/compiler\").compile;\nconst _compile = Mp._compile;\nMp._compile = function (content, filename) {\n  try {\n    const result = reifyCompile(content, {\n      parse: reifyBabelParse,\n      generateLetDeclarations: false,\n      ast: false,\n    });\n    if (!result.identical) {\n      content = result.code;\n    }\n  } finally {\n    return _compile.call(this, content, filename);\n  }\n};\n"],"file":"tools/static-assets/server/runtime.js.map"}