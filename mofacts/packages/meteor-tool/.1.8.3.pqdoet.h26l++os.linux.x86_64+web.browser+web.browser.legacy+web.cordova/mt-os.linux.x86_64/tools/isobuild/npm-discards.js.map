{"version":3,"sources":["/tools/isobuild/npm-discards.js"],"names":["assert","require","files","_","NpmDiscards","ok","discards","NDp","prototype","merge","into","from","each","fromValue","packageName","intoValue","has","isString","isRegExp","push","isArray","apply","slice","shouldDiscard","candidatePath","isDirectory","lstat","currentPath","parentPath","pathDirname","pathBasename","relPath","pathRelative","pathJoin","pathSep","some","pattern","matches","match","charAt","indexOf","module","exports"],"mappings":"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","sourcesContent":["var assert = require(\"assert\");\nvar files = require('../fs/files');\nvar _ = require(\"underscore\");\n\n// This class encapsulates a structured specification of files and\n// directories that should be stripped from the node_modules directories\n// of Meteor packages during `meteor build`, as requested by calling\n// `Npm.discard` in package.js files.\nfunction NpmDiscards() {\n  assert.ok(this instanceof NpmDiscards);\n  this.discards = {};\n}\n\nvar NDp = NpmDiscards.prototype;\n\n// Update the current specification of discarded files with additional\n// patterns that should be discarded. See the comment in package-source.js\n// about `Npm.strip` for an explanation of what should be passed for the\n// `discards` parameter.\nNDp.merge = function(discards) {\n  merge(this.discards, discards);\n};\n\nfunction merge(into, from) {\n  _.each(from, function(fromValue, packageName) {\n    var intoValue = _.has(into, packageName) && into[packageName];\n    if (_.isString(fromValue) ||\n        _.isRegExp(fromValue)) {\n      if (intoValue) {\n        intoValue.push(fromValue);\n      } else {\n        into[packageName] = [fromValue];\n      }\n    } else if (_.isArray(fromValue)) {\n      if (intoValue) {\n        intoValue.push.apply(intoValue, fromValue);\n      } else {\n        // Make a defensive copy of any arrays passed to `Npm.strip`.\n        into[packageName] = fromValue.slice(0);\n      }\n    }\n  });\n}\n\nNDp.shouldDiscard = function shouldDiscard(candidatePath, isDirectory) {\n  if (typeof isDirectory === \"undefined\") {\n    isDirectory = files.lstat(candidatePath).isDirectory();\n  }\n\n  for (var currentPath = candidatePath, parentPath;\n       (parentPath = files.pathDirname(currentPath)) !== currentPath;\n       currentPath = parentPath) {\n    if (files.pathBasename(parentPath) === \"node_modules\") {\n      var packageName = files.pathBasename(currentPath);\n\n      if (_.has(this.discards, packageName)) {\n        var relPath = files.pathRelative(currentPath, candidatePath);\n\n        if (isDirectory) {\n          relPath = files.pathJoin(relPath, files.pathSep);\n        }\n\n        return this.discards[packageName].some(function(pattern) {\n          return matches(pattern, relPath);\n        });\n      }\n\n      // Stop at the first ancestor node_modules directory we find.\n      break;\n    }\n  }\n\n  return false;\n};\n\n// TODO Improve this. For example we don't currently support wildcard\n// string patterns (just use a RegExp if you need that flexibility).\nfunction matches(pattern, relPath) {\n  if (_.isRegExp(pattern)) {\n    return relPath.match(pattern);\n  }\n\n  assert.ok(_.isString(pattern));\n\n  if (pattern.charAt(0) === files.pathSep) {\n    return relPath.indexOf(pattern.slice(1)) === 0;\n  }\n\n  return relPath.indexOf(pattern) !== -1;\n}\n\nmodule.exports = NpmDiscards;\n"],"file":"tools/isobuild/npm-discards.js.map"}