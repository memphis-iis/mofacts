{"version":3,"sources":["/tools/isobuild/isopack.js"],"names":["Builder","module","link","default","v","files","fsFixPath","ISOPACKETS","makeIsopacketBuildContext","requestGarbageCollection","Unibuild","assert","require","compiler","archinfo","_","linker","buildmessage","bundler","watch","colonConverter","utils","buildPluginModule","Console","Profile","rejectBadPath","p","match","Error","Isopack","self","name","metadata","version","isTest","debugOnly","prodOnly","testOnly","unibuilds","plugins","cordovaDependencies","isobuildFeatures","pluginWatchSet","WatchSet","_pluginsInitialized","sourceProcessors","linter","minifier","includeTool","toolsOnDisk","pluginProviderPackageMap","pluginCacheDir","lintingMessages","knownFormats","convertOneStepForward","data","fromFormat","convertedData","clone","builds","convertOneStepBackward","format","convertIsopackFormat","toFormat","fromPos","indexOf","toPos","step","readMetadataFromDirectory","isopackDirectory","originalVersion","isopackJsonPath","pathJoin","unipackageJsonPath","exists","isopackJson","JSON","parse","readFile","exports","OldIsopackFormatError","stringify","extend","prototype","initEmpty","initFromOptions","options","npmDiscards","addUnibuild","push","setPluginProviderPackageMap","getSourceFilesUnderSourceRoot","sourceRoot","sourceFiles","anySourceFiles","addSourceFilesFromWatchSet","watchSet","each","hash","filename","relativePath","pathRelative","substr","pathSep","u","keys","architectures","archSet","unibuild","arch","_toolArchitectures","plugin","plug","arches","sort","any","a","without","buildArchitectures","simplify","simpler","forEach","parts","split","length","pop","join","platformSpecific","tarballName","convert","toolArches","pluck","host","uniq","getUnibuildAtArch","chosenArch","mostSpecificMatch","error","secondary","findWhere","_checkPluginsInitialized","ensurePluginsInitialized","assertInJob","SourceProcessorSet","displayName","hardcodeJs","singlePackage","allowConflicts","pluginsByArch","enterJob","title","Plugin","_makePluginApi","load","sourceProcessorSet","allSourceProcessors","sourceProcessor","instantiatePlugin","pluginName","isopack","registerSourceHandler","extension","handler","addLegacyHandler","packageDisplayName","isTemplate","archMatching","_registerSourceProcessor","factory","extensions","filenames","methodName","featurePackage","featureEnabled","hasExtensions","Array","hasFilenames","useMyCaller","some","e","endsWith","f","sp","SourceProcessor","factoryFunction","addSourceProcessor","registerCompiler","registerLinter","registerMinifier","badUsedExtension","find","ext","contains","undefined","nudge","convertToOSPath","convertToStandardPath","path","normalize","pathNormalize","relative","resolve","pathResolve","dirname","pathDirname","basename","pathBasename","extname","pathExtname","sep","fs","initFromPath","dir","firstIsopack","_loadUnibuildsFromPath","realpath","mainJson","has","unibuildWatchSets","isopackBuildInfoJson","unibuildDependencies","watchSetJSON","unibuildTag","fromJSON","pluginDependencies","summary","pluginMeta","readJsImage","pluginsBuilt","unibuildMeta","alreadyHaveUnibuild","kind","unibuildBasePath","uses","use","weak","isIsobuildFeaturePackage","package","tools","toolMeta","rootDir","hasCordovaUnibuild","canWriteLegacyBuilds","isResourceSafeForLegacyBuilds","resource","type","usesDefaultSourceProcessor","every","resources","saveToPath","outputDir","includePreCompilerPluginIsopackVersions","includeIsopackBuildInfo","isopackCache","outputPath","builder","isEmpty","writeLegacyBuilds","builtBy","BUILT_BY","toJSON","includeCordovaUnibuild","reserve","npmDirsToCopy","Object","create","write","Buffer","from","unibuildInfos","baseUnibuildName","unibuildDir","generateFilename","directory","unibuildJsonFile","usesModules","unibuildJson","jsResourcesForLegacyPrelink","getLegacyJsResources","writeJson","bundlePath","sourcePath","copyNodeModulesDirectory","to","symlink","pluginDir","pluginBuild","enter","pluginEntry","controlFile","toolsJson","_writeTool","copyDirectory","mainLegacyJson","unibuildInfo","legacyFilename","legacyDir","newResources","file","offset","servePath","_getServePath","prelinkFile","prelinkData","packageVariables","legacyPrelink","packageVariableNames","declaredExports","symbol","export","results","prelink","inputFiles","combinedServePath","pkg","source","assignedVariables","prelinkResource","writeToGeneratedFilename","sourceMap","acceptedByBuffer","isString","isNumber","isArray","complete","abort","pathsToCopy","runGitInCheckout","filter","shouldTranspile","pathsToTranspile","pathsToCopyStraight","toolPath","sourceRootDir","getCurrentToolsDir","copyTranspiledModules","needToTranspile","gitSha","specificFiles","devBundleIgnore","ignoreFiles","getDevBundle","ignore","isopacketBuildContext","messages","capture","packages","isopacketName","buildLocalPackages","jobHasMessages","image","buildJsImage","packageMap","hasMessages","formatMessages","getMergedWatchSet","merge","getClientWatchSet","test","getServerWatchSet","getStrongOrderedUsedAndImpliedPackages","processUse","unordered","implies","featurePackageName","pathInPackage","serveRoot","toString"],"mappings":"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","sourcesContent":["var assert = require('assert');\nvar compiler = require('./compiler.js');\nvar archinfo = require('../utils/archinfo');\nvar _ = require('underscore');\nvar linker = require('./linker.js');\nvar buildmessage = require('../utils/buildmessage.js');\nimport Builder from './builder.js';\nvar bundler = require('./bundler.js');\nvar watch = require('../fs/watch');\nimport * as files from '../fs/files';\nimport * as fsFixPath from '../fs/fsFixPath';\nimport {\n  ISOPACKETS,\n  makeIsopacketBuildContext,\n} from '../tool-env/isopackets.js';\nvar colonConverter = require('../utils/colon-converter.js');\nvar utils = require('../utils/utils.js');\nvar buildPluginModule = require('./build-plugin.js');\nvar Console = require('../console/console.js').Console;\nvar Profile = require('../tool-env/profile').Profile;\nimport { requestGarbageCollection } from \"../utils/gc.js\";\nimport { Unibuild } from \"./unibuild.js\";\n\nvar rejectBadPath = function (p) {\n  if (p.match(/\\.\\./)) {\n    throw new Error(\"bad path: \" + p);\n  }\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// Isopack\n///////////////////////////////////////////////////////////////////////////////\n\n// Meteor has a packaging system called \"Isobuild\". Isobuild knows how to\n// compile the same JavaScript code-base to different architectures: browser,\n// node.js-like server environment (could be Rhino or other) or a webview in a\n// Cordova mobile app.\n//\n// Each package used by Isobuild forms an Isopack. Isopack is a package format\n// containing source code for each architecture it can be ran on.\n// Each separate part built for a separate architecture is called \"Unibuild\".\n//\n// There are multiple reasons why we can't call it just \"build\" and historically\n// the name \"Unibuild\" has been associated with parts of Isopacks. We also can't\n// call it \"Isobuild\" because this is the brand-name of the whole\n// build/packaging system.\nvar Isopack = function () {\n  var self = this;\n\n  // These have the same meaning as in PackageSource.\n  self.name = null;\n  self.metadata = {};\n  self.version = null;\n  self.isTest = false;\n  self.debugOnly = false;\n  self.prodOnly = false;\n  self.testOnly = false;\n\n  // Unibuilds, an array of class Unibuild.\n  self.unibuilds = [];\n\n  // Plugins in this package. Map from plugin name to {arch -> JsImage}.\n  // Plugins are package-supplied classes and functions that can change the\n  // build process: introduce a new source processor (compiler, minifier,\n  // linter)\n  self.plugins = {};\n\n  self.cordovaDependencies = {};\n\n  // isobuild:* pseudo-packages which this package depends on.\n  self.isobuildFeatures = [];\n\n  // -- Information for up-to-date checks --\n  // Data in this section is only set if the Isopack was directly created by\n  // compiler.compile or read from a package compiled by IsopackCache (with its\n  // isopack-buildinfo.json file). They are not set for Isopacks read from\n  // the tropohouse.\n\n  // XXX this is likely to change once we have build versions\n  //\n  // A WatchSet for the full transitive dependencies for all plugins in this\n  // package, as well as this package's package.js. If any of these dependencies\n  // change, our plugins need to be rebuilt... but also, any package that\n  // directly uses this package needs to be rebuilt in case the change to\n  // plugins affected compilation.\n  self.pluginWatchSet = new watch.WatchSet();\n\n  // -- Loaded plugin state --\n\n  // True if plugins have been initialized (if ensurePluginsInitialized has\n  // been called)\n  self._pluginsInitialized = false;\n\n  // The SourceProcessors registered by plugins defined by this package.  Each\n  // value is a SourceProcessorSet. sourceProcessors.compiler includes the\n  // legacy source handlers as well.\n  // Valid when self._pluginsInitialized is true.\n  self.sourceProcessors = {\n    compiler: null,\n    linter: null,\n    minifier: null\n  };\n\n  // See description in PackageSource. If this is set, then we include a copy of\n  // our own source, in addition to any other tools that were originally in the\n  // isopack.\n  self.includeTool = false;\n\n  // This is tools to copy from trees on disk. This is used by the\n  // isopack-merge code in tropohouse.\n  self.toolsOnDisk = [];\n\n  // A map of package dependencies that can provide a plugin for this isopack.\n  // In practice, it is every direct dependency and implied packages.\n  self.pluginProviderPackageMap = null;\n\n  // A directory on disk that plugins can use for caching. Should be created\n  // by the code that initializes the Isopack. If not provided, plugins don't\n  // get a disk cache.\n  self.pluginCacheDir = null;\n\n  // An in-memory only buildmessage.MessageSet object that is printed by the\n  // build tool when the app is linted. Is also printed when a package\n  // represented by Isopack is published.\n  self.lintingMessages = null;\n};\n\nIsopack.knownFormats = [\"unipackage-pre2\", \"isopack-1\", \"isopack-2\"];\n\n// These functions are designed to convert isopack metadata between\n// versions. They were designed to convert between unipackage-pre2 and\n// isopack-1. The differences between these formats are essentially syntactical,\n// not semantic, and occur entirely in the isopack.json file, not in the\n// individual unibuild json files. These functions are written assuming those\n// constraints, and were not actually useful in the isopack-1/isopack-2\n// transition,where most of the changes are in the unibuild level, and there's\n// actual semantic changes involved. So they are not actually used as much as\n// they were before.\nIsopack.convertOneStepForward = function (data, fromFormat) {\n  var convertedData = _.clone(data);\n  // XXX COMPAT WITH 0.9.3\n  if (fromFormat === \"unipackage-pre2\") {\n    convertedData.builds = convertedData.unibuilds;\n    delete convertedData.unibuilds;\n    return convertedData;\n  }\n  if (fromFormat === \"isopack-1\") {\n    // For now, there's no difference in this direction at the isopack level.\n    return convertedData;\n  }\n};\nIsopack.convertOneStepBackward = function (data, fromFormat) {\n  var convertedData = _.clone(data);\n  if (fromFormat === \"isopack-1\") {\n    convertedData.unibuilds = convertedData.builds;\n    convertedData.format = \"unipackage-pre2\";\n    delete convertedData.builds;\n    return convertedData;\n  }\n  if (fromFormat === \"isopack-2\") {\n    // The conversion from isopack-2 requires converting the nested\n    // unibuild data as well.  This shouldn't happen.\n    throw Error(\"Can't automatically convert backwards from isopack-2\");\n  }\n};\nIsopack.convertIsopackFormat = Profile(\n  \"Isopack.convertIsopackFormat\", function (data, fromFormat, toFormat) {\n  var fromPos = _.indexOf(Isopack.knownFormats, fromFormat);\n  var toPos = _.indexOf(Isopack.knownFormats, toFormat);\n  var step = fromPos < toPos ? 1 : -1;\n\n  if (fromPos === -1) {\n    throw new Error(\"Can't convert from unknown Isopack format: \" + fromFormat);\n  }\n  if (toPos === -1) {\n    throw new Error(\"Can't convert to unknown Isopack format: \" + toFormat);\n  }\n\n  while (fromPos !== toPos) {\n    if (step > 0) {\n      data = Isopack.convertOneStepForward(data, fromFormat);\n    } else {\n      data = Isopack.convertOneStepBackward(data, fromFormat);\n    }\n\n    fromPos += step;\n    fromFormat = Isopack.knownFormats[fromPos];\n  }\n\n  return data;\n});\n\n// Read the correct file from isopackDirectory and convert to current format\n// of the isopack metadata. Returns null if there is no package here.\nIsopack.readMetadataFromDirectory =\n  Profile(\"Isopack.readMetadataFromDirectory\", function (isopackDirectory) {\n  var metadata = null;\n  let originalVersion = null;\n\n  // deal with different versions of \"isopack.json\", backwards compatible\n  var isopackJsonPath = files.pathJoin(isopackDirectory, \"isopack.json\");\n  var unipackageJsonPath = files.pathJoin(isopackDirectory, \"unipackage.json\");\n\n  if (files.exists(isopackJsonPath)) {\n    var isopackJson = JSON.parse(files.readFile(isopackJsonPath));\n\n    if (isopackJson['isopack-2']) {\n      metadata = isopackJson['isopack-2'];\n      originalVersion = 'isopack-2';\n    } else if (isopackJson['isopack-1']) {\n      metadata = Isopack.convertIsopackFormat(\n        isopackJson['isopack-1'], 'isopack-1', 'isopack-2');\n      originalVersion = 'isopack-1';\n    } else {\n      // This file is from the future and no longer supports this version\n      throw new Error(\"Could not find isopack data supported any supported format (isopack-1 or isopack-2).\\n\" +\n        \"This isopack was likely built with a much newer version of Meteor.\");\n    }\n  } else if (files.exists(unipackageJsonPath)) {\n    // super old version with different file name\n    // XXX COMPAT WITH 0.9.3\n    if (files.exists(unipackageJsonPath)) {\n      metadata = JSON.parse(files.readFile(unipackageJsonPath));\n\n      metadata = Isopack.convertIsopackFormat(metadata,\n        \"unipackage-pre2\", \"isopack-2\");\n      originalVersion = 'unipackage-pre2';\n    }\n\n    if (metadata.format !== \"unipackage-pre2\") {\n      // We don't support pre-0.9.0 isopacks, but we do know enough to delete\n      // them if we find them in an isopack cache somehow (rather than crash).\n      if (metadata.format === \"unipackage-pre1\") {\n        throw new exports.OldIsopackFormatError();\n      }\n\n      throw new Error(\"Unsupported isopack format: \" +\n                      JSON.stringify(metadata.format));\n    }\n  }\n\n  return {metadata, originalVersion};\n});\n\n_.extend(Isopack.prototype, {\n  // Make a dummy (empty) package that contains nothing of interest.\n  // XXX used?\n  initEmpty: function (name) {\n    var self = this;\n    self.name = name;\n  },\n\n  // This is primarily intended to be used by the compiler. After\n  // calling this, call addUnibuild to add the unibuilds.\n  initFromOptions: function (options) {\n    var self = this;\n    self.name = options.name;\n    self.metadata = options.metadata;\n    self.version = options.version;\n    self.isTest = options.isTest;\n    self.plugins = options.plugins;\n    self.cordovaDependencies = options.cordovaDependencies;\n    self.pluginWatchSet = options.pluginWatchSet;\n    self.npmDiscards = options.npmDiscards;\n    self.includeTool = options.includeTool;\n    self.debugOnly = options.debugOnly;\n    self.prodOnly = options.prodOnly;\n    self.testOnly = options.testOnly;\n    self.pluginCacheDir = options.pluginCacheDir || null;\n    self.isobuildFeatures = options.isobuildFeatures;\n  },\n\n  // Programmatically add a unibuild to this Isopack. Should only be\n  // called as part of building up a new Isopack using\n  // initFromOptions. 'options' are the options to the Unibuild\n  // constructor.\n  addUnibuild: function (options) {\n    var self = this;\n    self.unibuilds.push(new Unibuild(self, options));\n  },\n\n  setPluginProviderPackageMap: function (pluginProviderPackageMap) {\n    var self = this;\n    self.pluginProviderPackageMap = pluginProviderPackageMap;\n  },\n\n  getSourceFilesUnderSourceRoot: Profile(\n    \"Isopack#getSourceFilesUnderSourceRoot\", function (sourceRoot) {\n    var self = this;\n    var sourceFiles = {};\n    var anySourceFiles = false;\n    var addSourceFilesFromWatchSet = function (watchSet) {\n      _.each(watchSet.files, function (hash, filename) {\n        if (! hash) {\n          // If a file has a falsy hash, that means the file does/should\n          // not exist.\n          return;\n        }\n\n        anySourceFiles = true;\n        var relativePath = files.pathRelative(sourceRoot, filename);\n        // We only want files that are actually under sourceRoot.\n        if (relativePath.substr(0, 3) === '..' + files.pathSep) {\n          return;\n        }\n        sourceFiles[relativePath] = true;\n      });\n    };\n    addSourceFilesFromWatchSet(self.pluginWatchSet);\n    _.each(self.unibuilds, function (u) {\n      addSourceFilesFromWatchSet(u.watchSet);\n    });\n\n    // Were we actually built from source or loaded from an IsopackCache? If so\n    // then there should be at least one source file in some WatchSet. If not,\n    // return null.\n    if (! anySourceFiles) {\n      return null;\n    }\n    return _.keys(sourceFiles);\n  }),\n\n  // An sorted array of all the architectures included in this package.\n  architectures: Profile(\"Isopack#architectures\", function () {\n    var self = this;\n    var archSet = {};\n    _.each(self.unibuilds, function (unibuild) {\n      archSet[unibuild.arch] = true;\n    });\n    _.each(self._toolArchitectures(), function (arch) {\n      archSet[arch] = true;\n    });\n    _.each(self.plugins, function (plugin, name) {\n      _.each(plugin, function (plug, arch) {\n        archSet[arch] = true;\n      });\n    });\n    var arches = _.keys(archSet).sort();\n    // Ensure that our buildArchitectures string does not look like\n    //    web+os+os.osx.x86_64\n    // This would happen if there is an 'os' unibuild but a platform-specific\n    // tool (eg, in meteor-tool).  This would confuse catalog.getBuildsForArches\n    // into thinking that it would work for Linux, since the 'os' means\n    // 'works on any Node server'.\n    if (_.any(arches, function (a) { return a.match(/^os\\./); })) {\n      arches = _.without(arches, 'os');\n    }\n    return arches;\n  }),\n\n  // A sorted plus-separated string of all the architectures included in this\n  // package.\n  buildArchitectures(simplify) {\n    const arches = this.architectures();\n\n    if (simplify) {\n      const simpler = [];\n\n      arches.forEach(arch => {\n        const parts = arch.split(\".\");\n        while (parts.length > 1) {\n          parts.pop();\n          if (arches.indexOf(parts.join(\".\")) >= 0) {\n            // If the arches array contains a strict prefix of this arch,\n            // omit this arch from the result, since it should be covered\n            // by the prefix. For example, if arches contains \"web\" or\n            // \"web.browser\" then it shouldn't need to contain\n            // \"web.browser.legacy\" as well.\n            return;\n          }\n        }\n        simpler.push(arch);\n      });\n\n      return simpler.join(\"+\");\n    }\n\n    return arches.join(\"+\");\n  },\n\n  // Returns true if we think that this isopack is platform specific (contains\n  // binary builds)\n  platformSpecific: function () {\n    var self = this;\n    return _.any(self.architectures(), function (arch) {\n      return arch.match(/^os\\./);\n    });\n  },\n\n  tarballName: function () {\n    var self = this;\n    return colonConverter.convert(self.name) + '-' + self.version;\n  },\n\n  _toolArchitectures: function () {\n    var self = this;\n    var toolArches = _.pluck(self.toolsOnDisk, 'arch');\n    self.includeTool && toolArches.push(archinfo.host());\n    return _.uniq(toolArches).sort();\n  },\n\n  // Return the unibuild of the package to use for a given target architecture\n  // (eg, 'os.linux.x86_64' or 'web'), or throw an exception if that\n  // packages can't be loaded under these circumstances.\n  getUnibuildAtArch: Profile(\"Isopack#getUnibuildAtArch\", function (arch) {\n    var self = this;\n\n    let chosenArch = archinfo.mostSpecificMatch(\n      arch, _.pluck(self.unibuilds, 'arch'));\n    if (! chosenArch && arch.match(/^os\\./)) {\n      // Special-case: we're looking for a specific server platform and\n      // it's not available. (eg, we're deploying from a Mac to Linux and\n      // are processing a local package with binary npm deps).  Search\n      // again for the host version, which might find the Mac version.\n      chosenArch =\n        archinfo.mostSpecificMatch(archinfo.host(), _.pluck(self.unibuilds, 'arch'));\n    }\n    if (! chosenArch) {\n      buildmessage.error(\n        (self.name || \"this app\") +\n          \" is not compatible with architecture '\" + arch + \"'\",\n        { secondary: true });\n      // recover by returning by no unibuilds\n      return null;\n    }\n    return _.findWhere(self.unibuilds, { arch: chosenArch });\n  }),\n\n  _checkPluginsInitialized: function () {\n    var self = this;\n    if (self._pluginsInitialized) {\n      return;\n    }\n    throw Error(\"plugins not yet initialized?\");\n  },\n\n  // If this package has plugins, initialize them (run the startup\n  // code in them so that they register their extensions). Idempotent.\n  ensurePluginsInitialized: Profile(\"Isopack#ensurePluginsInitialized\", function () {\n    var self = this;\n\n    buildmessage.assertInJob();\n\n    if (self._pluginsInitialized) {\n      return;\n    }\n\n    self.sourceProcessors.compiler = new buildPluginModule.SourceProcessorSet(\n      self.displayName(), { hardcodeJs: true, singlePackage: true });\n    self.sourceProcessors.linter = new buildPluginModule.SourceProcessorSet(\n      self.displayName(), { singlePackage: true, allowConflicts: true });\n    self.sourceProcessors.minifier = new buildPluginModule.SourceProcessorSet(\n      self.displayName(), { singlePackage: true });\n\n    _.each(self.plugins, function (pluginsByArch, name) {\n      var arch = archinfo.mostSpecificMatch(\n        archinfo.host(), _.keys(pluginsByArch));\n      if (! arch) {\n        buildmessage.error(\"package `\" + name + \"` is built for incompatible \" +\n                           \"architecture\");\n        // Recover by ignoring plugin\n        // XXX does this recovery work?\n        return;\n      }\n\n      var plugin = pluginsByArch[arch];\n      buildmessage.enterJob({\n        title: \"loading plugin `\" + name +\n          \"` from package `\" + self.name + \"`\"\n        // don't necessarily have rootPath anymore\n        // (XXX we do, if the isopack was locally built, which is\n        // the important case for debugging. it'd be nice to get this\n        // case right.)\n      }, function () {\n        // Make a new Plugin API object for this plugin.\n        var Plugin = self._makePluginApi(name);\n        plugin.load({ Plugin: Plugin, Profile: Profile });\n      });\n    });\n\n    // Instantiate each of the registered batch plugins.  Note that we don't\n    // do this directly in the registerCompiler (etc) call, because we want\n    // to allow people to do something like:\n    //   Plugin.registerCompiler({...}, function () { return new C; });\n    //   var C = function () {...}\n    // and so we want to wait for C to be defined.\n    _.each(self.sourceProcessors, (sourceProcessorSet) => {\n      _.each(sourceProcessorSet.allSourceProcessors, (sourceProcessor) => {\n        sourceProcessor.instantiatePlugin();\n      });\n    });\n\n    self._pluginsInitialized = true;\n  }),\n\n  _makePluginApi: function (pluginName) {\n    var isopack = this;\n\n    /**\n     * @global\n     * @namespace Plugin\n     * @summary The namespace that is exposed inside build plugin files.\n     */\n    var Plugin = {\n      name: pluginName,\n\n      // 'extension' is a file extension without the separation dot\n      // (eg 'js', 'coffee', 'coffee.md')\n      //\n      // 'options' can be omitted. The only known option is 'isTemplate', which\n      // is a bit of a hack meaning \"in an app, these files should be loaded\n      // before non-templates\".\n      //\n      // 'handler' is a function that takes a single argument, a\n      // CompileStep (#CompileStep)\n\n      /**\n       * @summary Inside a build plugin source file specified in\n       * [Package.registerBuildPlugin](#Package-registerBuildPlugin),\n       * add a handler to compile files with a certain file extension.\n       * @param  {String} fileExtension The file extension that this plugin\n       * should handle, without the first dot.\n       * Examples: `\"coffee\"`, `\"coffee.md\"`.\n       * @param  {Function} handler  A function that takes one argument,\n       * a CompileStep object.\n       *\n       * Documentation for CompileStep is available [on the GitHub Wiki](https://github.com/meteor/meteor/wiki/CompileStep-API-for-Build-Plugin-Source-Handlers).\n       * @memberOf Plugin\n       * @locus Build Plugin\n       * @deprecated since 1.2\n       * XXX COMPAT WITH 1.1\n       */\n      registerSourceHandler: function (extension, options, handler) {\n        if (!handler) {\n          handler = options;\n          options = {};\n        }\n\n        // The popular package mquandalle:bower has a call to\n        // `registerSourceHandler('json', null)` for some reason, to\n        // work around some behavior of Meteor believed to be a bug. We\n        // think that new features of registerCompiler like being able\n        // to register for filenames will allow them to drop that line,\n        // but in the meantime we might as well not choke on it. (The\n        // old implementation coincidentally didn't choke.)\n        if (!handler) {\n          handler = function () {};\n        }\n\n        isopack.sourceProcessors.compiler.addLegacyHandler({\n          extension,\n          handler,\n          packageDisplayName: isopack.displayName(),\n          isTemplate: !!options.isTemplate,\n          archMatching: options.archMatching\n        });\n      },\n\n      _registerSourceProcessor: function (\n        {extensions, filenames, archMatching, isTemplate},\n        factory,\n        {sourceProcessorSet, methodName, featurePackage}) {\n        if (!isopack.featureEnabled(featurePackage)) {\n          // This error is OK because we only define 1.0.0 for each of these\n          // feature packages (in compiler.KNOWN_ISOBUILD_FEATURE_PACKAGES).\n          buildmessage.error(\n            `your package must \\`api.use('${ featurePackage }@1.0.0')\\` in ` +\n              `order for its plugins to call Plugin.${ methodName }`);\n          return;\n        }\n\n        const hasExtensions = (extensions &&\n                               extensions instanceof Array &&\n                               extensions.length > 0);\n        const hasFilenames = (filenames &&\n                              filenames instanceof Array &&\n                              filenames.length > 0);\n        if (! (hasExtensions || hasFilenames)) {\n          buildmessage.error(\"Plugin.\" + methodName + \" must specify a \" +\n                             \"non-empty array of extensions or filenames\",\n                             { useMyCaller: 3 });\n          // recover by ignoring\n          return;\n        }\n\n        // Don't let extensions or filenames try to look for directories (in the\n        // way that WatchSet expresses them).\n        if (extensions && extensions.some(e => e.endsWith('/'))) {\n          buildmessage.error(\n            `Plugin.${methodName}: extensions may not end in /`);\n          // recover by ignoring\n          return;\n        }\n        if (filenames && filenames.some(f => f.endsWith('/'))) {\n          buildmessage.error(\n            `Plugin.${methodName}: filenames may not end in /`);\n          // recover by ignoring\n          return;\n        }\n\n        if (typeof factory !== 'function') {\n          buildmessage.error(methodName + \" call must \"\n                             + \"specify a factory function\",\n                             { useMyCaller: 3 });\n          // recover by ignoring\n          return;\n        }\n\n        const sp = new buildPluginModule.SourceProcessor({\n          isopack: isopack,\n          extensions: extensions,\n          filenames: filenames,\n          archMatching: archMatching,\n          isTemplate: isTemplate,\n          factoryFunction: factory,\n          methodName: methodName\n        });\n        // This logs a buildmessage on conflicts.\n        sourceProcessorSet.addSourceProcessor(sp);\n      },\n\n      // Compilers are part of the Batch Plugins API.\n      //\n      // A compiler plugin is provided by packages to participate in\n      // the build process. A compiler can register file extensions and\n      // filenames it handles and the build tool will call the compiler's\n      // `processFilesForTarget` method once for each target (eg, the server\n      // or client program) with all of the files in the target.\n      //\n      // Compilers are run on application bundling (in bundle.js).\n      // This is different from the legacy registerSourceHandler API,\n      // which runs on a single file at a time when a *package* is built.\n      // Published Isopack packages contain the original sources of\n      // files handled by registerCompiler, not the generated output,\n      // so compilers can be involved in the very end, when the app is bundled\n      // (not in package publish time).  (Note that this requires a new\n      // Isopack format, 'isopack-2'; versions of packages published with new\n      // compilers cannot be used with previous releases of Meteor, but\n      // Version Solver knows this and will select an older compatible\n      // version if possible.\n      //\n      // Unlike the legacy API called \"source handlers\" (deprecated in\n      // Meteor 1.2), compiler plugins can handle all files for the target,\n      // making independent decisions about caching and dependencies resolution.\n      //\n      // The factory function must return an instance of a compiler.\n      //\n      // Note: It's important to ensure that all plugins that want to call\n      // plugin compiler use the isobuild:compiler-plugin fake package, so that\n      // Version Solver will not let you use registerCompiler plugins with old\n      // versions of the tool.\n\n      /**\n       * @summary Inside a build plugin source file specified in\n       * [Package.registerBuildPlugin](#Package-registerBuildPlugin),\n       * add a compiler that will handle files with certain extensions or\n       * filenames.\n       * @param {Object} options\n       * @param {String[]} options.extensions The file extensions that this\n       * plugin should handle, without the first dot.\n       * Examples: `[\"coffee\", \"coffee.md\"]`.\n       * @param {String[]} options.filenames The list of filenames\n       * that this plugin should handle. Examples: `[\"config.json\"]`.\n       * @param {Function} factory A function that returns an instance\n       * of a compiler class.\n       *\n       * More detailed documentation for build plugins is available [on the GitHub Wiki](https://docs.meteor.com/api/packagejs.html#build-plugin-api).\n       * @memberOf Plugin\n       * @locus Build Plugin\n       */\n      registerCompiler: function (options, factory) {\n        Plugin._registerSourceProcessor(options || {}, factory, {\n          sourceProcessorSet: isopack.sourceProcessors.compiler,\n          methodName: \"registerCompiler\",\n          featurePackage: \"isobuild:compiler-plugin\"\n        });\n      },\n\n      // Linters are part of the Batch Plugin API.\n      //\n      // A linter plugin provides a Linter instance. The linter is\n      // given a batch of source files for the target according to\n      // linter's declared file extensions and filenames (e.g.: '*.js',\n      // '.jshintrc').\n      //\n      // Linters don't output any files. They can only raise an error\n      // message on one of the source files to force the build tool to\n      // print a linting message.\n      //\n      // The factory function must return an instance of the linter.\n      // The linter must have the `processFilesForPackage` method that\n      // has two arguments:\n      // - inputFiles - LinterFile - sources instances\n      // - options - Object\n      //   - globals - a list of strings - global variables that can be\n      //     used in the target's scope as they are dependencies of the\n      //     package or the app. e.g.: \"Minimongo\" or \"Webapp\".\n      //\n      // Unlike compilers and minifiers, linters run on one package\n      // at a time.  Linters are run by `meteor run`, `meteor publish`,\n      // and `meteor lint`.\n\n      /**\n       * @summary Inside a build plugin source file specified in\n       * [Package.registerBuildPlugin](#Package-registerBuildPlugin),\n       * add a linter that will handle files with certain extensions or\n       * filenames.\n       * @param {Object} options\n       * @param {String[]} options.extensions The file extensions that this\n       * plugin should handle, without the first dot.\n       * Examples: `[\"js\", \"es6\", \"jsx\"]`.\n       * @param {Function} factory A function that returns an instance\n       * of a linter class.\n       *\n       * More detailed documentation for build plugins is available [on the GitHub Wiki](https://docs.meteor.com/api/packagejs.html#build-plugin-api).\n       * @memberOf Plugin\n       * @locus Build Plugin\n       */\n      registerLinter: function (options, factory) {\n        Plugin._registerSourceProcessor(options || {}, factory, {\n          sourceProcessorSet: isopack.sourceProcessors.linter,\n          methodName: \"registerLinter\",\n          featurePackage: \"isobuild:linter-plugin\"\n        });\n      },\n\n      // Minifiers are part of the Batch Plugin API.\n      //\n      // The minifiers are applied in the very end of the bundling\n      // process, after the linters and compilers. Unlike linters and\n      // compilers, minifiers are given the output of compilers and not\n      // the source files the application developer supplied.\n      //\n      // The minifier plugins can fill into 2 types of minifiers: CSS or JS.\n      // When the minifier is added to an app, it is used during \"bundling\" to\n      // compress the app code and each package's code separately.\n      // Only minifier packages directly used by an app (or implied by a package\n      // directly used by the app) are active: using a minifer's package in\n      // another package does nothing.\n      //\n      // So far, the minifiers are only run on client targets such as\n      // web.browser and web.cordova.\n      //\n      // The factory function must return an instance of a\n      // minifier. The method `processFilesForBundle` is passed a list of\n      // files, possibly a linked file per target (for JavaScript files).\n      //\n      // - files - processed files to minify\n      // - options - Object\n      //   - minifyMode - string - 'development' or 'production', based\n      //     on the bundling mode\n\n      /**\n       * @summary Inside a build plugin source file specified in\n       * [Package.registerBuildPlugin](#Package-registerBuildPlugin),\n       * add a linter that will handle files with certain extensions or\n       * filenames.\n       * @param {Object} options\n       * @param {String[]} options.extensions The file extensions that this\n       * plugin should handle, without the first dot. Can only be \"js\" or \"css\".\n       * Examples: `[\"js\", \"css\"]`.\n       * @param {String[]} options.filenames The list of filenames\n       * that this plugin should handle. Examples: `[\"config.json\"]`.\n       * @param {Function} factory A function that returns an instance\n       * of a minifier class.\n       *\n       * More detailed documentation for build plugins is available [on the GitHub Wiki](https://docs.meteor.com/api/packagejs.html#build-plugin-api).\n       * @memberOf Plugin\n       * @locus Build Plugin\n       */\n      registerMinifier: function (options, factory) {\n        var badUsedExtension = _.find(options.extensions, function (ext) {\n          return ! _.contains(['js', 'css'], ext);\n        });\n\n        if (badUsedExtension !== undefined) {\n          buildmessage.error(badUsedExtension + ': Minifiers are only allowed to register \"css\" or \"js\" extensions.');\n          return;\n        }\n\n        if (options.filenames) {\n          buildmessage.error(\"Plugin.registerMinifier does not accept `filenames`\");\n          return;\n        }\n\n        Plugin._registerSourceProcessor(options || {}, factory, {\n          sourceProcessorSet: isopack.sourceProcessors.minifier,\n          methodName: \"registerMinifier\",\n          featurePackage: \"isobuild:minifier-plugin\"\n        });\n      },\n\n      nudge: function () {\n        Console.nudge(true);\n      },\n\n      convertToOSPath: files.convertToOSPath,\n      convertToStandardPath: files.convertToStandardPath,\n      path: {\n        join: files.pathJoin,\n        normalize: files.pathNormalize,\n        relative: files.pathRelative,\n        resolve: files.pathResolve,\n        dirname: files.pathDirname,\n        basename: files.pathBasename,\n        extname: files.pathExtname,\n        sep: files.pathSep\n      },\n      fs: fsFixPath,\n    };\n    return Plugin;\n  },\n\n  // Load a Isopack on disk.\n  //\n  // options:\n  // - isopackBuildInfoJson: parsed isopack-buildinfo.json object,\n  //   if loading from an IsopackCache.\n  initFromPath: Profile(\n    \"Isopack#initFromPath\", function (name, dir, options) {\n    var self = this;\n    options = _.clone(options || {});\n    options.firstIsopack = true;\n\n    if (options.pluginCacheDir) {\n      self.pluginCacheDir = options.pluginCacheDir;\n    }\n\n    return self._loadUnibuildsFromPath(name, dir, options);\n  }),\n\n  _loadUnibuildsFromPath: function (name, dir, options) {\n    var self = this;\n    options = options || {};\n\n    // In the tropohouse, isopack paths are symlinks (which can be updated if\n    // more unibuilds are merged in). For any given call to\n    // _loadUnibuildsFromPath, let's ensure we see a consistent isopack by\n    // realpath'ing dir.\n    dir = files.realpath(dir);\n\n    var {metadata: mainJson} = Isopack.readMetadataFromDirectory(dir);\n    if (! mainJson) {\n      throw new Error(\"No metadata files found for isopack at: \" + dir);\n    }\n\n    // isopacks didn't used to know their name, but they should.\n    if (_.has(mainJson, 'name') && name !== mainJson.name) {\n      throw new Error(\"isopack \" + name + \" thinks its name is \" +\n                      mainJson.name);\n    }\n\n    // If we're loading from an IsopackCache, we need to load the WatchSets\n    // which will be used by the bundler.  (builtBy is only used by\n    // IsopackCache._checkUpToDate. pluginProviderPackageMap will actually be\n    // set by IsopackCache afterwards, because it has access to an appropriate\n    // PackageMap which can be subset to create a new PackageMap object.)\n    var unibuildWatchSets = {};\n    if (options.isopackBuildInfoJson) {\n      if (! options.firstIsopack) {\n        throw Error(\"can't merge isopacks with buildinfo\");\n      }\n\n      // XXX should comprehensively sanitize (eg, typecheck) everything\n      // read from json files\n\n      // Read the watch sets for each unibuild\n      _.each(\n        options.isopackBuildInfoJson.unibuildDependencies,\n        function (watchSetJSON, unibuildTag) {\n          unibuildWatchSets[unibuildTag] =\n            watch.WatchSet.fromJSON(watchSetJSON);\n        });\n\n      // Read pluginWatchSet. (In the multi-sub-isopack case, these are\n      // guaranteed to be trivial (since we check that there's no\n      // isopackBuildInfoJson), so no need to merge.)\n      self.pluginWatchSet = watch.WatchSet.fromJSON(\n        options.isopackBuildInfoJson.pluginDependencies);\n    }\n\n    // If we are loading multiple isopacks, only take this stuff from the\n    // first one.\n    if (options.firstIsopack) {\n      self.name = name;\n      self.metadata = {\n        summary: mainJson.summary\n      };\n      self.version = mainJson.version;\n      self.isTest = mainJson.isTest;\n      self.debugOnly = !!mainJson.debugOnly;\n      self.prodOnly = !!mainJson.prodOnly;\n      self.testOnly = !!mainJson.testOnly;\n    }\n    _.each(mainJson.plugins, function (pluginMeta) {\n      rejectBadPath(pluginMeta.path);\n\n      var plugin = bundler.readJsImage(files.pathJoin(dir, pluginMeta.path));\n\n      if (!_.has(self.plugins, pluginMeta.name)) {\n        self.plugins[pluginMeta.name] = {};\n      }\n      // If we already loaded a plugin of this name/arch, just ignore this one.\n      if (!_.has(self.plugins[pluginMeta.name], plugin.arch)) {\n        self.plugins[pluginMeta.name][plugin.arch] = plugin;\n      }\n    });\n    self.pluginsBuilt = true;\n    _.each(mainJson.builds, function (unibuildMeta) {\n      // aggressively sanitize path (don't let it escape to parent\n      // directory)\n      rejectBadPath(unibuildMeta.path);\n\n      // Skip unibuilds we already have.\n      var alreadyHaveUnibuild = _.find(self.unibuilds, function (unibuild) {\n        return unibuild.arch === unibuildMeta.arch;\n      });\n      if (alreadyHaveUnibuild) {\n        return;\n      }\n\n      const unibuild = Unibuild.fromJSON(JSON.parse(\n        files.readFile(files.pathJoin(dir, unibuildMeta.path))\n      ), {\n        isopack: self,\n        kind: unibuildMeta.kind,\n        arch: unibuildMeta.arch,\n        unibuildBasePath: files.pathDirname(\n          files.pathJoin(dir, unibuildMeta.path)),\n        watchSet: unibuildWatchSets[unibuildMeta.path],\n      });\n\n      if (unibuild.uses) {\n        unibuild.uses.forEach(use => {\n          if (! use.weak &&\n              compiler.isIsobuildFeaturePackage(use.package) &&\n              self.isobuildFeatures.indexOf(use.package) === -1) {\n            self.isobuildFeatures.push(use.package);\n          }\n        });\n      }\n\n      self.unibuilds.push(unibuild);\n    });\n\n    self.cordovaDependencies = mainJson.cordovaDependencies || null;\n\n    _.each(mainJson.tools, function (toolMeta) {\n      toolMeta.rootDir = dir;\n      // XXX check for overlap\n      self.toolsOnDisk.push(toolMeta);\n    });\n\n    return true;\n  },\n\n  hasCordovaUnibuild: function () {\n    var self = this;\n    return _.any(self.unibuilds, function (unibuild) {\n      return unibuild.arch === 'web.cordova';\n    });\n  },\n\n  canWriteLegacyBuilds() {\n    function isResourceSafeForLegacyBuilds(resource) {\n      // The only new kind of resource is \"source\"; other resources are\n      // unchanged from legacy builds.\n      if (resource.type !== \"source\") {\n        return true;\n      }\n\n      // CSS is safe for legacy builds. (We assume everyone is using the\n      // SourceProcessor from the 'meteor' package.)\n      if (resource.extension === \"css\") {\n        return true;\n      }\n\n      // If this JS resource uses hard-coded support for plain old ES5, then it\n      // is safe to write as part of a legacy Isopack.\n      if (resource.extension === \"js\" && resource.usesDefaultSourceProcessor) {\n        return true;\n      }\n\n      // Nope, this package cannot be represented as an isopack-1 Isopack\n      // because it uses a file implemented by registerCompiler other than the\n      // very basic JS and CSS types.\n      return false;\n    }\n\n    return this.unibuilds.every(\n      unibuild => unibuild.resources.every(isResourceSafeForLegacyBuilds)\n    );\n  },\n\n  // options:\n  //\n  // - includeIsopackBuildInfo: If set, write an isopack-buildinfo.json file.\n  // - includePreCompilerPluginIsopackVersions: By default, saveToPath only\n  //   creates an isopack of format 'isopack-2', with unibuilds of format\n  //   'isopack-2-unibuild'.  These isopacks may contain \"source\" resources,\n  //   which are processed at *bundle* time by compiler plugins.  They cannot be\n  //   properly processed by older tools.  If this flag is set, saveToPath also\n  //   tries to save data for older formats (isopack-1 and unipackage-pre2),\n  //   converting JS and CSS \"source\" resources into \"prelink\" and \"css\"\n  //   resources.  This is not possible if there are \"source\" resources other\n  //   than JS or CSS; however, such packages must indirectly depend on the\n  //   \"isobuild:compiler-plugin\" pseudo-package which is not compatible with\n  //   older releases.  For packages that can't be converted to the older\n  //   format, this function silently only saves the newer format.  (The point\n  //   of this flag is allow us to optimize cases that never need to write the\n  //   older format, such as the per-app isopack cache.)\n  // - isopackCache: isopack cache in which this isopack is registered\n  saveToPath: Profile(\"Isopack#saveToPath\", function (outputDir, {\n    includePreCompilerPluginIsopackVersions,\n    includeIsopackBuildInfo,\n    isopackCache = null,\n  } = {}) {\n    var self = this;\n    var outputPath = outputDir;\n\n    var builder = new Builder({ outputPath: outputPath });\n    try {\n      var mainJson = {\n        name: self.name,\n        summary: self.metadata.summary,\n        version: self.version,\n        isTest: self.isTest,\n        builds: [],\n        plugins: []\n      };\n\n      if (self.debugOnly) {\n        mainJson.debugOnly = true;\n      }\n      if (self.prodOnly) {\n        mainJson.prodOnly = true;\n      }\n      if (self.testOnly) {\n        mainJson.testOnly = true;\n      }\n      if (! _.isEmpty(self.cordovaDependencies)) {\n        mainJson.cordovaDependencies = self.cordovaDependencies;\n      }\n\n      const writeLegacyBuilds = (\n        includePreCompilerPluginIsopackVersions\n          && self.canWriteLegacyBuilds());\n\n      var isopackBuildInfoJson = null;\n      if (includeIsopackBuildInfo) {\n        isopackBuildInfoJson = {\n          builtBy: compiler.BUILT_BY,\n          unibuildDependencies: {},\n          // pluginDependencies defines a WatchSet that any package that could\n          // use this package as a plugin needs to watch. So it always contains\n          // our package.js (because modifications to package.js could add a new\n          // plugin), as well as any files making up plugins in our package.\n          pluginDependencies: self.pluginWatchSet.toJSON(),\n          pluginProviderPackageMap: self.pluginProviderPackageMap.toJSON(),\n          includeCordovaUnibuild: self.hasCordovaUnibuild()\n        };\n      }\n\n      // XXX COMPAT WITH 0.9.3\n      builder.reserve(\"unipackage.json\");\n\n      builder.reserve(\"isopack.json\");\n      // Reserve this even if includeIsopackBuildInfo is not set, to ensure\n      // nothing else writes it somehow.\n      builder.reserve(\"isopack-buildinfo.json\");\n\n      builder.reserve(\"head\");\n      builder.reserve(\"body\");\n\n      // Map from absolute path to npm directory in the unibuild, to the\n      // generated filename in the isopack we're writing.  Multiple builds\n      // can use the same npm modules (though maybe not any more, since tests\n      // have been separated?), but also there can be different sets of\n      // directories as well (eg, for a isopack merged with from multiple\n      // isopacks with _loadUnibuildsFromPath).\n      const npmDirsToCopy = Object.create(null);\n\n      // Pre-linker versions of Meteor expect all packages in the warehouse to\n      // contain a file called \"package.js\"; they use this as part of deciding\n      // whether or not they need to download a new package. Because packages\n      // are downloaded by the *existing* version of the tools, we need to\n      // include this file until we're comfortable breaking \"meteor update\" from\n      // 0.6.4.  (Specifically, warehouse.packageExistsInWarehouse used to check\n      // to see if package.js exists instead of just looking for the package\n      // directory.)\n      // XXX Remove this once we can.\n      builder.write(\"package.js\", {\n        data: Buffer.from(\n          (\"// This file is included for compatibility with the Meteor \" +\n           \"0.6.4 package downloader.\\n\"),\n          \"utf8\")\n      });\n\n      var unibuildInfos = [];\n\n      // Unibuilds\n      _.each(self.unibuilds, function (unibuild) {\n        // Make up a filename for this unibuild\n        var baseUnibuildName = unibuild.arch;\n        var unibuildDir =\n          builder.generateFilename(baseUnibuildName, { directory: true });\n        var unibuildJsonFile =\n          builder.generateFilename(baseUnibuildName + \".json\");\n        mainJson.builds.push({\n          kind: unibuild.kind,\n          arch: unibuild.arch,\n          path: unibuildJsonFile\n        });\n\n        // Save unibuild dependencies. Keyed by the json path rather than thinking\n        // too hard about how to encode pair (name, arch).\n        if (isopackBuildInfoJson) {\n          isopackBuildInfoJson.unibuildDependencies[unibuildJsonFile] =\n            unibuild.watchSet.toJSON();\n        }\n\n        const usesModules = ! isopackCache ||\n          isopackCache.uses(self, \"modules\", unibuild.arch);\n\n        const unibuildJson = unibuild.toJSON({\n          builder,\n          unibuildDir,\n          usesModules,\n          npmDirsToCopy,\n        });\n\n        // If we're going to write a legacy prelink file later, track the\n        // original form of the resource object (with the source in a\n        // Buffer, etc) instead of the later version.  #HardcodeJs\n        const jsResourcesForLegacyPrelink =\n          writeLegacyBuilds ? unibuild.getLegacyJsResources() : [];\n\n        // Control file for unibuild\n        builder.writeJson(unibuildJsonFile, unibuildJson);\n\n        unibuildInfos.push({\n          unibuild,\n          unibuildJson,\n          jsResourcesForLegacyPrelink,\n        });\n      });\n\n      // If unibuilds included node_modules, copy them in.\n      _.each(npmDirsToCopy, (bundlePath, sourcePath) => {\n        builder.copyNodeModulesDirectory({\n          from: sourcePath,\n          to: bundlePath,\n          npmDiscards: self.npmDiscards,\n          symlink: false\n        });\n      });\n\n      // Plugins\n      _.each(self.plugins, function (pluginsByArch, name) {\n        _.each(pluginsByArch, function (plugin) {\n          // XXX the name of the plugin doesn't typically contain a colon, but\n          // escape it just in case.\n          var pluginDir = builder.generateFilename(\n            'plugin.' + colonConverter.convert(name) + '.' + plugin.arch,\n            { directory: true });\n          var pluginBuild = plugin.write(builder.enter(pluginDir));\n          var pluginEntry = {\n            name: name,\n            arch: plugin.arch,\n            path: files.pathJoin(pluginDir, pluginBuild.controlFile)\n          };\n          mainJson.plugins.push(pluginEntry);\n        });\n      });\n\n      // Tools\n      // First, are we supposed to include our own source as a tool?\n      if (self.includeTool) {\n        var toolsJson = self._writeTool(builder);\n        mainJson.tools = toolsJson;\n      }\n      // Next, what about other tools we may be merging from other isopacks?\n      // XXX check for overlap\n      _.each(self.toolsOnDisk, function (toolMeta) {\n        toolMeta = _.clone(toolMeta);\n        var rootDir = toolMeta.rootDir;\n        delete toolMeta.rootDir;\n        builder.copyDirectory({\n          from: files.pathJoin(rootDir, toolMeta.path),\n          to: toolMeta.path,\n          symlink: false\n        });\n        if (!mainJson.tools) {\n          mainJson.tools = [];\n        }\n        mainJson.tools.push(toolMeta);\n      });\n\n      var mainLegacyJson = null;\n      if (writeLegacyBuilds) {\n        mainLegacyJson = _.clone(mainJson);\n        mainLegacyJson.builds = [];\n\n        _.each(unibuildInfos, function (unibuildInfo) {\n          var unibuild = unibuildInfo.unibuild;\n          var unibuildJson = unibuildInfo.unibuildJson;\n          var jsResourcesForLegacyPrelink =\n                unibuildInfo.jsResourcesForLegacyPrelink;\n          var legacyFilename = builder.generateFilename(\n            unibuild.arch + '-legacy.json');\n          var legacyDir = unibuild.arch + '-legacy';\n          mainLegacyJson.builds.push({\n            kind: unibuild.kind,\n            arch: unibuild.arch,\n            path: legacyFilename\n          });\n\n          unibuildJson.format = 'unipackage-unibuild-pre1';\n          var newResources = [];\n          _.each(unibuildJson.resources, function (resource) {\n            if (resource.type !== 'source') {\n              newResources.push(resource);\n            } else if (resource.extension === 'css') {\n              // Convert this resource from a new-style \"source\" to an\n              // old-style \"css\".\n              newResources.push({\n                type: 'css',\n                file: resource.file,\n                length: resource.length,\n                offset: resource.offset,\n                servePath: self._getServePath(resource.path)\n              });\n            } else if (resource.extension === 'js') {\n              // Skip; we saved this in jsResourcesForLegacyPrelink above\n              // already, in the format that linker.prelink understands.\n            } else {\n              throw Error(\n                \"shouldn't write legacy builds for non-JS/CSS source \"\n                  + JSON.stringify(resource));\n            }\n          });\n\n          var prelinkFile, prelinkData, packageVariables;\n          if (jsResourcesForLegacyPrelink.length === 1 &&\n              jsResourcesForLegacyPrelink[0].legacyPrelink) {\n            // Aha!  This isopack was actually a legacy isopack in the first\n            // place! So this source file is already the output of prelink,\n            // and we don't need to reprocess it.\n            prelinkFile = jsResourcesForLegacyPrelink[0];\n            // XXX It's weird that the type of object going in and out of\n            // linker.prelink is different (so that this prelinkData\n            // assignment differs from that below), ah well.\n            prelinkData = prelinkFile.data;\n            packageVariables =\n              jsResourcesForLegacyPrelink[0].legacyPrelink.packageVariables;\n          } else {\n            // Determine captured variables, legacy way. First, start with the\n            // exports. We'll add the package variables after running prelink.\n            packageVariables = [];\n            var packageVariableNames = {};\n            _.each(unibuild.declaredExports, function (symbol) {\n              if (_.has(packageVariableNames, symbol.name)) {\n                return;\n              }\n              packageVariables.push({\n                name: symbol.name,\n                export: symbol.testOnly? \"tests\" : true\n              });\n              packageVariableNames[symbol.name] = true;\n            });\n\n            if (jsResourcesForLegacyPrelink.length) {\n              // Not originally legacy; let's run prelink to make it legacy.\n              var results = linker.prelink({\n                inputFiles: jsResourcesForLegacyPrelink,\n                // I was confused about this, so I am leaving a comment -- the\n                // combinedServePath is either [pkgname].js or [pluginName]:plugin.js.\n                // XXX: If we change this, we can get rid of source arch names!\n                combinedServePath: (\n                  \"/packages/\" + colonConverter.convert(\n                    unibuild.pkg.name +\n                      (unibuild.kind === \"main\" ? \"\" : (\":\" + unibuild.kind)) +\n                      \".js\")),\n                name: unibuild.pkg.name\n              });\n              if (results.files.length !== 1) {\n                throw Error(\"prelink should return 1 file, not \" +\n                            results.files.length);\n              }\n              prelinkFile = results.files[0];\n              prelinkData = Buffer.from(prelinkFile.source, 'utf8');\n\n              _.each(results.assignedVariables, function (name) {\n                if (_.has(packageVariableNames, name)) {\n                  return;\n                }\n                packageVariables.push({\n                  name: name\n                });\n                packageVariableNames[name] = true;\n              });\n            }\n          }\n\n          if (prelinkFile && prelinkData) {\n            var prelinkResource = {\n              type: 'prelink',\n              file: builder.writeToGeneratedFilename(\n                files.pathJoin(legacyDir, prelinkFile.servePath),\n                { data: prelinkData }),\n              length: prelinkData.length,\n              offset: 0,\n              servePath: prelinkFile.servePath || undefined\n            };\n            if (prelinkFile.sourceMap) {\n              // It appears in node v0.10.x, `new Buffer({someobject: 1})`\n              // would be silently swallowed. (leaving an empty buffer)\n              // In node v4+ this same code throws an error.\n              // XX - Not 100% sure what prelinkFile.sourceMap _can_ be,\n              //      so here's some exhaustive checking of things buffer\n              //      _will_ accept.\n              var acceptedByBuffer = _.isString(prelinkFile.sourceMap)\n                    || _.isNumber(prelinkFile.sourceMap)\n                    || _.isArray(prelinkFile.sourceMap)\n                    || (prelinkFile.sourceMap instanceof Buffer);\n              if (!acceptedByBuffer) {\n                prelinkFile.sourceMap = JSON.stringify(prelinkFile.sourceMap);\n              }\n              // Write the source map.\n\n              if (typeof prelinkFile.sourceMap !== \"string\") {\n                prelinkFile.sourceMap = JSON.stringify(prelinkFile.sourceMap);\n              }\n\n              prelinkResource.sourceMap = builder.writeToGeneratedFilename(\n                files.pathJoin(legacyDir, prelinkFile.servePath + '.map'),\n                { data: Buffer.from(prelinkFile.sourceMap, 'utf8') }\n              );\n            }\n            newResources.push(prelinkResource);\n          }\n\n          if (packageVariables.length) {\n            unibuildJson.packageVariables = packageVariables;\n          }\n\n          unibuildJson.resources = newResources;\n          delete unibuildJson.declaredExports;\n          builder.writeJson(legacyFilename, unibuildJson);\n        });\n\n        // old unipackage.json format/filename.  no point to save this if\n        // we can't even support isopack-1.\n        // XXX COMPAT WITH 0.9.3\n        builder.writeJson(\n          \"unipackage.json\",\n          Isopack.convertIsopackFormat(\n            // Note that mainLegacyJson is isopack-1 (has no \"source\" resources)\n            // rather than isopack-2.\n            mainLegacyJson, \"isopack-1\", \"unipackage-pre2\"));\n      }\n\n      var isopackJson = {};\n      isopackJson['isopack-2'] = mainJson;\n      if (writeLegacyBuilds) {\n        isopackJson['isopack-1'] = mainLegacyJson;\n      }\n\n      // writes one file with all of the new formats, so that it is possible\n      // to invent a new format and have old versions of meteor still read the\n      // old format\n      //\n      // This looks something like:\n      // {\n      //   isopack-1: {... data ...},\n      //   isopack-2: {... data ...}\n      // }\n      builder.writeJson(\"isopack.json\", isopackJson);\n\n      if (isopackBuildInfoJson) {\n        builder.writeJson(\"isopack-buildinfo.json\", isopackBuildInfoJson);\n      }\n      builder.complete();\n    } catch (e) {\n      builder.abort();\n      throw e;\n    }\n  }),\n\n  _writeTool: Profile(\"Isopack#_writeTool\", function (builder) {\n    var self = this;\n\n    var pathsToCopy = utils.runGitInCheckout(\n      'ls-tree',\n      '-r',\n      '--name-only',\n      '--full-tree',\n      'HEAD',\n      // The actual trees to copy!\n      'tools', 'examples', 'LICENSE.txt', 'LICENSES',\n      'meteor', 'meteor.bat', 'scripts/admin/launch-meteor',\n      'packages/package-version-parser/package-version-parser.js',\n      'packages/meteor/define-package.js',\n      'packages/meteor/flush-buffers-on-exit-in-windows.js',\n    );\n\n    // Trim blank line and unnecessary examples.\n    pathsToCopy = _.filter(pathsToCopy.split('\\n'), function (f) {\n      return f && !f.match(/^examples\\/other/) &&\n        !f.match(/^examples\\/unfinished/);\n    });\n\n    function shouldTranspile(path) {\n      const parts = path.split(\"/\");\n      if (parts[0] === \"tools\" &&\n          (path.endsWith(\".js\") || path.endsWith(\".ts\"))) {\n        if (path.endsWith(\".d.ts\")) {\n          // The official TypeScript compiler's transpileModule function fails\n          // for .d.ts declaration files with the cryptic error \"Error: Debug\n          // Failure. Output generation failed\".\n          return false;\n        }\n        if (parts[1] === \"static-assets\") {\n          return parts[2] === \"server\";\n        }\n        if (parts[1] !== \"node_modules\" &&\n            parts[1] !== \"tests\") {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // Split pathsToCopy into two arrays - one of files that should be copied\n    // directly, and one of files that should be transpiled with Babel\n    var pathsToTranspile = [];\n    var pathsToCopyStraight = [];\n    pathsToCopy.forEach(path => {\n      if (shouldTranspile(path)) {\n        pathsToTranspile.push(path);\n      } else {\n        pathsToCopyStraight.push(path);\n      }\n    });\n\n    // Set up builder to write to the correct directory\n    var toolPath = 'mt-' + archinfo.host();\n    builder = builder.enter(toolPath);\n\n    const sourceRootDir = files.getCurrentToolsDir();\n    builder.copyTranspiledModules(pathsToTranspile, {\n      sourceRootDir,\n      needToTranspile: true,\n    });\n\n    var gitSha = utils.runGitInCheckout('rev-parse', 'HEAD');\n    builder.reserve('isopackets', {directory: true});\n    builder.write('.git_version.txt', {data: Buffer.from(gitSha, 'utf8')});\n\n    builder.copyDirectory({\n      from: files.getCurrentToolsDir(),\n      to: '',\n      specificFiles: pathsToCopyStraight,\n      symlink: false\n    });\n\n    // Include the dev bundle, but drop a few things that are only used by\n    // self-test (which isn't supported from release).\n    var devBundleIgnore = _.clone(bundler.ignoreFiles);\n    devBundleIgnore.push(/BrowserStackLocal/, /browserstack-webdriver/);\n    builder.copyDirectory({\n      from: files.pathJoin(files.getDevBundle()),\n      to: 'dev_bundle',\n      ignore: devBundleIgnore,\n      symlink: false\n    });\n\n    requestGarbageCollection();\n\n    // Build all of the isopackets now, so that no build step is required when\n    // you're actually running meteor from a release in order to load packages.\n    var isopacketBuildContext = makeIsopacketBuildContext();\n\n    var messages = buildmessage.capture(function () {\n      // We rebuild them in the order listed in ISOPACKETS. This is not strictly\n      // necessary here, since any isopackets loaded as part of the build\n      // process are going to be the current tool's isopackets, not the\n      // isopackets that we're writing out.\n      _.each(ISOPACKETS, function (packages, isopacketName) {\n        requestGarbageCollection();\n\n        buildmessage.enterJob({\n          title: \"compiling \" + isopacketName + \" packages for the tool\"\n        }, function () {\n          isopacketBuildContext.isopackCache.buildLocalPackages(packages);\n          if (buildmessage.jobHasMessages()) {\n            return;\n          }\n\n          var image = bundler.buildJsImage({\n            name: \"isopacket-\" + isopacketName,\n            packageMap: isopacketBuildContext.packageMap,\n            isopackCache: isopacketBuildContext.isopackCache,\n            use: packages\n          }).image;\n          if (buildmessage.jobHasMessages()) {\n            return;\n          }\n\n          requestGarbageCollection();\n\n          image.write(\n            builder.enter(files.pathJoin('isopackets', isopacketName)));\n        });\n      });\n    });\n    // This is a build step ... but it's one that only happens in development,\n    // and similar to a isopacket load failure, it can just crash the app\n    // instead of being handled nicely.\n    if (messages.hasMessages()) {\n      Console.error(\"Errors prevented tool build:\");\n      Console.error(messages.formatMessages());\n      throw new Error(\"tool build failed?\");\n    }\n\n    return [{\n      name: 'meteor',\n      arch: archinfo.host(),\n      path: toolPath\n    }];\n  }),\n\n  getMergedWatchSet: Profile(\"Isopack#getMergedWatchSet\", function () {\n    var self = this;\n    var watchSet = self.pluginWatchSet.clone();\n    _.each(self.unibuilds, function (unibuild) {\n      watchSet.merge(unibuild.watchSet);\n    });\n    return watchSet;\n  }),\n\n  getClientWatchSet: Profile(\"Isopack#getClientWatchSet\", function () {\n    var watchSet = this.pluginWatchSet.clone();\n    _.each(this.unibuilds, function (unibuild) {\n      if (/^web\\./.test(unibuild.arch)) {\n        watchSet.merge(unibuild.watchSet);\n      }\n    });\n    return watchSet;\n  }),\n\n  getServerWatchSet: Profile(\"Isopack#getServerWatchSet\", function () {\n    var watchSet = this.pluginWatchSet.clone();\n    _.each(this.unibuilds, function (unibuild) {\n      if (! /^web\\./.test(unibuild.arch)) {\n        watchSet.merge(unibuild.watchSet);\n      }\n    });\n    return watchSet;\n  }),\n\n  // Similar to PackageSource.getPackagesToLoadFirst, but doesn't include\n  // packages used by plugins, because plugin dependencies are already\n  // statically included in this built Isopack. Used by\n  // IsopackCache._ensurePackageLoaded.\n  //\n  // Like getPackagesToLoadFirst, it filters out isobuild:* pseudo-packages and\n  // should not be used to create input to Version Solver.\n  getStrongOrderedUsedAndImpliedPackages: Profile(\n    \"Isopack#getStrongOrderedUsedAndImpliedPackages\", function () {\n    var self = this;\n    var packages = {};\n    var processUse = function (use) {\n      if (use.weak || use.unordered) {\n        return;\n      }\n      // Only include real packages, not isobuild:* pseudo-packages.\n      if (compiler.isIsobuildFeaturePackage(use.package)) {\n        return;\n      }\n      packages[use.package] = true;\n    };\n\n    _.each(self.unibuilds, function (unibuild) {\n      _.each(unibuild.uses, processUse);\n      _.each(unibuild.implies, processUse);\n    });\n    return _.keys(packages);\n  }),\n\n  featureEnabled(featurePackageName) {\n    return this.isobuildFeatures.indexOf(featurePackageName) !== -1;\n  },\n\n  _getServePath: function (pathInPackage) {\n    var self = this;\n    var serveRoot;\n    if (self.name) {\n      serveRoot = files.pathJoin('/packages/', self.name);\n    } else {\n      serveRoot = '/';\n    }\n\n    return colonConverter.convert(\n      files.pathJoin(\n        serveRoot,\n        // XXX or should everything in this API use slash already?\n        files.convertToStandardPath(pathInPackage, true)));\n  },\n\n  displayName() {\n    return this.name === null ? 'the app' : this.name;\n  }\n});\n\nexports.Isopack = Isopack;\n\nexports.OldIsopackFormatError = function () {\n  // This should always be caught anywhere where it can appear (ie, anywhere\n  // that isn't definitely loading something from the tropohouse).\n  this.toString = function () { return \"old isopack format!\" };\n};\n"],"file":"tools/isobuild/isopack.js.map"}