{"version":3,"sources":["meteor://ðŸ’»app/packages/socket-stream-client/server.js","meteor://ðŸ’»app/packages/socket-stream-client/node.js","meteor://ðŸ’»app/packages/socket-stream-client/common.js","meteor://ðŸ’»app/packages/socket-stream-client/urls.js"],"names":["setMinimumBrowserVersions","module1","link","v","chrome","edge","firefox","ie","mobileSafari","phantomjs","safari","electron","module","id","export","ClientStream","Meteor","toWebsocketUrl","StreamClientCommon","constructor","endpoint","options","client","headers","Object","create","npmFayeOptions","_initCommon","_launchConnection","send","data","currentStatus","connected","_changeUrl","url","_onConnect","Error","_forcedToDisconnect","close","_clearConnectionTimer","status","retryCount","statusChanged","forEachCallback","callback","_cleanup","maybeError","connectionTimer","clearTimeout","_getProxyUrl","targetUrl","proxy","process","env","HTTP_PROXY","http_proxy","match","HTTPS_PROXY","https_proxy","FayeWebSocket","Npm","require","deflate","fayeOptions","extensions","assign","proxyUrl","origin","subprotocols","Client","setTimeout","_lostConnection","ConnectionError","CONNECT_TIMEOUT","on","bindEnvironment","clientOnIfCurrent","event","description","error","_dontPrintErrors","_debug","message","_objectSpread","default","Retry","forcedReconnectError","retry","name","eventCallbacks","push","cb","length","forEach","connectTimeoutMs","Package","tracker","statusListeners","Tracker","Dependency","changed","_retry","reconnect","_sockjsOptions","_force","clear","_retryNow","disconnect","_permanent","_error","reason","_retryLater","_online","timeout","retryLater","bind","retryTime","Date","getTime","depend","toSockjsUrl","translateUrl","newSchemeBase","subPath","startsWith","absoluteUrl","substr","ddpUrlMatch","httpUrlMatch","newScheme","urlAfterDDP","slashPos","indexOf","host","rest","replace","Math","floor","random","urlAfterHttp","_relativeToSiteRootUrl","endsWith"],"mappings":"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","file":"/packages/socket-stream-client.js","sourcesContent":["import {\n  setMinimumBrowserVersions,\n} from \"meteor/modern-browsers\";\n\nsetMinimumBrowserVersions({\n  chrome: 16,\n  edge: 12,\n  firefox: 11,\n  ie: 10,\n  mobileSafari: [6, 1],\n  phantomjs: 2,\n  safari: 7,\n  electron: [0, 20],\n}, module.id);\n","import { Meteor } from \"meteor/meteor\";\nimport { toWebsocketUrl } from \"./urls.js\";\nimport { StreamClientCommon } from \"./common.js\";\n\n// @param endpoint {String} URL to Meteor app\n//   \"http://subdomain.meteor.com/\" or \"/\" or\n//   \"ddp+sockjs://foo-**.meteor.com/sockjs\"\n//\n// We do some rewriting of the URL to eventually make it \"ws://\" or \"wss://\",\n// whatever was passed in.  At the very least, what Meteor.absoluteUrl() returns\n// us should work.\n//\n// We don't do any heartbeating. (The logic that did this in sockjs was removed,\n// because it used a built-in sockjs mechanism. We could do it with WebSocket\n// ping frames or with DDP-level messages.)\nexport class ClientStream extends StreamClientCommon {\n  constructor(endpoint, options) {\n    super(options);\n\n    this.client = null; // created in _launchConnection\n    this.endpoint = endpoint;\n\n    this.headers = this.options.headers || Object.create(null);\n    this.npmFayeOptions = this.options.npmFayeOptions || Object.create(null);\n\n    this._initCommon(this.options);\n\n    //// Kickoff!\n    this._launchConnection();\n  }\n\n  // data is a utf8 string. Data sent while not connected is dropped on\n  // the floor, and it is up the user of this API to retransmit lost\n  // messages on 'reset'\n  send(data) {\n    if (this.currentStatus.connected) {\n      this.client.send(data);\n    }\n  }\n\n  // Changes where this connection points\n  _changeUrl(url) {\n    this.endpoint = url;\n  }\n\n  _onConnect(client) {\n    if (client !== this.client) {\n      // This connection is not from the last call to _launchConnection.\n      // But _launchConnection calls _cleanup which closes previous connections.\n      // It's our belief that this stifles future 'open' events, but maybe\n      // we are wrong?\n      throw new Error('Got open from inactive client ' + !!this.client);\n    }\n\n    if (this._forcedToDisconnect) {\n      // We were asked to disconnect between trying to open the connection and\n      // actually opening it. Let's just pretend this never happened.\n      this.client.close();\n      this.client = null;\n      return;\n    }\n\n    if (this.currentStatus.connected) {\n      // We already have a connection. It must have been the case that we\n      // started two parallel connection attempts (because we wanted to\n      // 'reconnect now' on a hanging connection and we had no way to cancel the\n      // connection attempt.) But this shouldn't happen (similarly to the client\n      // !== this.client check above).\n      throw new Error('Two parallel connections?');\n    }\n\n    this._clearConnectionTimer();\n\n    // update status\n    this.currentStatus.status = 'connected';\n    this.currentStatus.connected = true;\n    this.currentStatus.retryCount = 0;\n    this.statusChanged();\n\n    // fire resets. This must come after status change so that clients\n    // can call send from within a reset callback.\n    this.forEachCallback('reset', callback => {\n      callback();\n    });\n  }\n\n  _cleanup(maybeError) {\n    this._clearConnectionTimer();\n    if (this.client) {\n      var client = this.client;\n      this.client = null;\n      client.close();\n\n      this.forEachCallback('disconnect', callback => {\n        callback(maybeError);\n      });\n    }\n  }\n\n  _clearConnectionTimer() {\n    if (this.connectionTimer) {\n      clearTimeout(this.connectionTimer);\n      this.connectionTimer = null;\n    }\n  }\n\n  _getProxyUrl(targetUrl) {\n    // Similar to code in tools/http-helpers.js.\n    var proxy = process.env.HTTP_PROXY || process.env.http_proxy || null;\n    // if we're going to a secure url, try the https_proxy env variable first.\n    if (targetUrl.match(/^wss:/)) {\n      proxy = process.env.HTTPS_PROXY || process.env.https_proxy || proxy;\n    }\n    return proxy;\n  }\n\n  _launchConnection() {\n    this._cleanup(); // cleanup the old socket, if there was one.\n\n    // Since server-to-server DDP is still an experimental feature, we only\n    // require the module if we actually create a server-to-server\n    // connection.\n    var FayeWebSocket = Npm.require('faye-websocket');\n    var deflate = Npm.require('permessage-deflate');\n\n    var targetUrl = toWebsocketUrl(this.endpoint);\n    var fayeOptions = {\n      headers: this.headers,\n      extensions: [deflate]\n    };\n    fayeOptions = Object.assign(fayeOptions, this.npmFayeOptions);\n    var proxyUrl = this._getProxyUrl(targetUrl);\n    if (proxyUrl) {\n      fayeOptions.proxy = { origin: proxyUrl };\n    }\n\n    // We would like to specify 'ddp' as the subprotocol here. The npm module we\n    // used to use as a client would fail the handshake if we ask for a\n    // subprotocol and the server doesn't send one back (and sockjs doesn't).\n    // Faye doesn't have that behavior; it's unclear from reading RFC 6455 if\n    // Faye is erroneous or not.  So for now, we don't specify protocols.\n    var subprotocols = [];\n\n    var client = (this.client = new FayeWebSocket.Client(\n      targetUrl,\n      subprotocols,\n      fayeOptions\n    ));\n\n    this._clearConnectionTimer();\n    this.connectionTimer = Meteor.setTimeout(() => {\n      this._lostConnection(new this.ConnectionError('DDP connection timed out'));\n    }, this.CONNECT_TIMEOUT);\n\n    this.client.on(\n      'open',\n      Meteor.bindEnvironment(() => {\n        return this._onConnect(client);\n      }, 'stream connect callback')\n    );\n\n    var clientOnIfCurrent = (event, description, callback) => {\n      this.client.on(\n        event,\n        Meteor.bindEnvironment((...args) => {\n          // Ignore events from any connection we've already cleaned up.\n          if (client !== this.client) return;\n          callback(...args);\n        }, description)\n      );\n    };\n\n    clientOnIfCurrent('error', 'stream error callback', error => {\n      if (!this.options._dontPrintErrors)\n        Meteor._debug('stream error', error.message);\n\n      // Faye's 'error' object is not a JS error (and among other things,\n      // doesn't stringify well). Convert it to one.\n      this._lostConnection(new this.ConnectionError(error.message));\n    });\n\n    clientOnIfCurrent('close', 'stream close callback', () => {\n      this._lostConnection();\n    });\n\n    clientOnIfCurrent('message', 'stream message callback', message => {\n      // Ignore binary frames, where message.data is a Buffer\n      if (typeof message.data !== 'string') return;\n\n      this.forEachCallback('message', callback => {\n        callback(message.data);\n      });\n    });\n  }\n}\n","import { Retry } from 'meteor/retry';\n\nconst forcedReconnectError = new Error(\"forced reconnect\");\n\nexport class StreamClientCommon {\n  constructor(options) {\n    this.options = {\n      retry: true,\n      ...(options || null),\n    };\n\n    this.ConnectionError =\n      options && options.ConnectionError || Error;\n  }\n\n  // Register for callbacks.\n  on(name, callback) {\n    if (name !== 'message' && name !== 'reset' && name !== 'disconnect')\n      throw new Error('unknown event type: ' + name);\n\n    if (!this.eventCallbacks[name]) this.eventCallbacks[name] = [];\n    this.eventCallbacks[name].push(callback);\n  }\n\n  forEachCallback(name, cb) {\n    if (!this.eventCallbacks[name] || !this.eventCallbacks[name].length) {\n      return;\n    }\n\n    this.eventCallbacks[name].forEach(cb);\n  }\n\n  _initCommon(options) {\n    options = options || Object.create(null);\n\n    //// Constants\n\n    // how long to wait until we declare the connection attempt\n    // failed.\n    this.CONNECT_TIMEOUT = options.connectTimeoutMs || 10000;\n\n    this.eventCallbacks = Object.create(null); // name -> [callback]\n\n    this._forcedToDisconnect = false;\n\n    //// Reactive status\n    this.currentStatus = {\n      status: 'connecting',\n      connected: false,\n      retryCount: 0\n    };\n\n    if (Package.tracker) {\n      this.statusListeners = new Package.tracker.Tracker.Dependency();\n    }\n\n    this.statusChanged = () => {\n      if (this.statusListeners) {\n        this.statusListeners.changed();\n      }\n    };\n\n    //// Retry logic\n    this._retry = new Retry();\n    this.connectionTimer = null;\n  }\n\n  // Trigger a reconnect.\n  reconnect(options) {\n    options = options || Object.create(null);\n\n    if (options.url) {\n      this._changeUrl(options.url);\n    }\n\n    if (options._sockjsOptions) {\n      this.options._sockjsOptions = options._sockjsOptions;\n    }\n\n    if (this.currentStatus.connected) {\n      if (options._force || options.url) {\n        this._lostConnection(forcedReconnectError);\n      }\n      return;\n    }\n\n    // if we're mid-connection, stop it.\n    if (this.currentStatus.status === 'connecting') {\n      // Pretend it's a clean close.\n      this._lostConnection();\n    }\n\n    this._retry.clear();\n    this.currentStatus.retryCount -= 1; // don't count manual retries\n    this._retryNow();\n  }\n\n  disconnect(options) {\n    options = options || Object.create(null);\n\n    // Failed is permanent. If we're failed, don't let people go back\n    // online by calling 'disconnect' then 'reconnect'.\n    if (this._forcedToDisconnect) return;\n\n    // If _permanent is set, permanently disconnect a stream. Once a stream\n    // is forced to disconnect, it can never reconnect. This is for\n    // error cases such as ddp version mismatch, where trying again\n    // won't fix the problem.\n    if (options._permanent) {\n      this._forcedToDisconnect = true;\n    }\n\n    this._cleanup();\n    this._retry.clear();\n\n    this.currentStatus = {\n      status: options._permanent ? 'failed' : 'offline',\n      connected: false,\n      retryCount: 0\n    };\n\n    if (options._permanent && options._error)\n      this.currentStatus.reason = options._error;\n\n    this.statusChanged();\n  }\n\n  // maybeError is set unless it's a clean protocol-level close.\n  _lostConnection(maybeError) {\n    this._cleanup(maybeError);\n    this._retryLater(maybeError); // sets status. no need to do it here.\n  }\n\n  // fired when we detect that we've gone online. try to reconnect\n  // immediately.\n  _online() {\n    // if we've requested to be offline by disconnecting, don't reconnect.\n    if (this.currentStatus.status != 'offline') this.reconnect();\n  }\n\n  _retryLater(maybeError) {\n    var timeout = 0;\n    if (this.options.retry ||\n        maybeError === forcedReconnectError) {\n      timeout = this._retry.retryLater(\n        this.currentStatus.retryCount,\n        this._retryNow.bind(this)\n      );\n      this.currentStatus.status = 'waiting';\n      this.currentStatus.retryTime = new Date().getTime() + timeout;\n    } else {\n      this.currentStatus.status = 'failed';\n      delete this.currentStatus.retryTime;\n    }\n\n    this.currentStatus.connected = false;\n    this.statusChanged();\n  }\n\n  _retryNow() {\n    if (this._forcedToDisconnect) return;\n\n    this.currentStatus.retryCount += 1;\n    this.currentStatus.status = 'connecting';\n    this.currentStatus.connected = false;\n    delete this.currentStatus.retryTime;\n    this.statusChanged();\n\n    this._launchConnection();\n  }\n\n  // Get current status. Reactive.\n  status() {\n    if (this.statusListeners) {\n      this.statusListeners.depend();\n    }\n    return this.currentStatus;\n  }\n}\n","// @param url {String} URL to Meteor app, eg:\n//   \"/\" or \"madewith.meteor.com\" or \"https://foo.meteor.com\"\n//   or \"ddp+sockjs://ddp--****-foo.meteor.com/sockjs\"\n// @returns {String} URL to the endpoint with the specific scheme and subPath, e.g.\n// for scheme \"http\" and subPath \"sockjs\"\n//   \"http://subdomain.meteor.com/sockjs\" or \"/sockjs\"\n//   or \"https://ddp--1234-foo.meteor.com/sockjs\"\nfunction translateUrl(url, newSchemeBase, subPath) {\n  if (!newSchemeBase) {\n    newSchemeBase = 'http';\n  }\n\n  if (subPath !== \"sockjs\" && url.startsWith(\"/\")) {\n    url = Meteor.absoluteUrl(url.substr(1));\n  }\n\n  var ddpUrlMatch = url.match(/^ddp(i?)\\+sockjs:\\/\\//);\n  var httpUrlMatch = url.match(/^http(s?):\\/\\//);\n  var newScheme;\n  if (ddpUrlMatch) {\n    // Remove scheme and split off the host.\n    var urlAfterDDP = url.substr(ddpUrlMatch[0].length);\n    newScheme = ddpUrlMatch[1] === 'i' ? newSchemeBase : newSchemeBase + 's';\n    var slashPos = urlAfterDDP.indexOf('/');\n    var host = slashPos === -1 ? urlAfterDDP : urlAfterDDP.substr(0, slashPos);\n    var rest = slashPos === -1 ? '' : urlAfterDDP.substr(slashPos);\n\n    // In the host (ONLY!), change '*' characters into random digits. This\n    // allows different stream connections to connect to different hostnames\n    // and avoid browser per-hostname connection limits.\n    host = host.replace(/\\*/g, () => Math.floor(Math.random() * 10));\n\n    return newScheme + '://' + host + rest;\n  } else if (httpUrlMatch) {\n    newScheme = !httpUrlMatch[1] ? newSchemeBase : newSchemeBase + 's';\n    var urlAfterHttp = url.substr(httpUrlMatch[0].length);\n    url = newScheme + '://' + urlAfterHttp;\n  }\n\n  // Prefix FQDNs but not relative URLs\n  if (url.indexOf('://') === -1 && !url.startsWith('/')) {\n    url = newSchemeBase + '://' + url;\n  }\n\n  // XXX This is not what we should be doing: if I have a site\n  // deployed at \"/foo\", then DDP.connect(\"/\") should actually connect\n  // to \"/\", not to \"/foo\". \"/\" is an absolute path. (Contrast: if\n  // deployed at \"/foo\", it would be reasonable for DDP.connect(\"bar\")\n  // to connect to \"/foo/bar\").\n  //\n  // We should make this properly honor absolute paths rather than\n  // forcing the path to be relative to the site root. Simultaneously,\n  // we should set DDP_DEFAULT_CONNECTION_URL to include the site\n  // root. See also client_convenience.js #RationalizingRelativeDDPURLs\n  url = Meteor._relativeToSiteRootUrl(url);\n\n  if (url.endsWith('/')) return url + subPath;\n  else return url + '/' + subPath;\n}\n\nexport function toSockjsUrl(url) {\n  return translateUrl(url, 'http', 'sockjs');\n}\n\nexport function toWebsocketUrl(url) {\n  return translateUrl(url, 'ws', 'websocket');\n}\n"]}