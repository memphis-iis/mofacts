{"version":3,"sources":["/tools/cordova/builder.js"],"names":["module","export","CordovaBuilder","_","link","default","v","util","path","Console","buildmessage","files","optimisticReadJsonOrNull","bundler","archinfo","release","loadIsopackage","utils","CORDOVA_ARCH","iconsIosSizes","iconsAndroidSizes","launchIosSizes","launchAndroidSizes","constructor","projectContext","projectRoot","options","resourcesPath","pathJoin","initalizeDefaults","cordovaServerPort","appIdAsNumber","parseInt","appIdentifier","metadata","id","version","buildNumber","undefined","name","pathBasename","projectDir","description","author","email","website","contentUrl","additionalConfiguration","global","platform","ios","android","custom","resourceFiles","packageMap","getInfo","AutoHideSplashScreen","SplashScreen","SplashScreenDelay","FadeSplashScreenDuration","ShowSplashScreenSpinner","StatusBarOverlaysWebView","StatusBarStyle","accessRules","type","mobileServerUrl","serverDomain","parseUrl","hostname","isIPv4Address","imagePaths","icon","splash","assetsPath","__dirname","iconsPath","launchScreensPath","setDefaultIcon","size","imageFile","exists","setDefaultLaunchScreen","each","pluginsConfiguration","processControlFile","controlFilePath","debug","enterJob","title","code","readFile","runJavaScript","filename","symbols","App","createAppConfiguration","error","exception","writeConfigXmlAndCopyResources","shouldCopyResources","XmlBuilder","config","create","xmlns","value","key","att","element","txt","href","toString","elementSet","tag","raw","src","pattern","omit","extend","origin","platformElement","prefs","rm_recursive","mkdir_p","configureAndCopyImages","configureAndCopyResourceFiles","configXmlPath","formattedXmlConfig","end","pretty","writeFile","sizes","xmlElement","imageAttributes","width","height","androidMatch","exec","attributes","density","substr","split","suppliedPath","suppliedFilename","last","pathSep","extension","match","copyFile","pathResolve","iosElement","androidElement","resourceFile","parse","base","target","copyWWW","bundlePath","wwwPath","applicationPath","programPath","cp_r","programJsonPath","convertToOSPath","program","JSON","settingsFile","settings","publicSettings","appendVersion","stringify","bootstrapPage","generateBootstrapPage","await","configDummy","PUBLIC_SETTINGS","WebAppHashing","AUTOUPDATE_VERSION","process","env","calculateClientHash","manifest","versionRefreshable","versionNonRefreshable","meteorRelease","current","isCheckout","runtimeConfig","gitCommitHash","METEOR_GIT_COMMIT_HASH","findGitCommitHash","ROOT_URL","ROOT_URL_PATH_PREFIX","DDP_DEFAULT_CONNECTION_URL","autoupdate","versions","appId","meteorEnv","NODE_ENV","TEST_METADATA","Boilerplate","boilerplate","urlMapper","identity","pathMapper","baseDataExtension","meteorRuntimeConfig","encodeURIComponent","toHTMLAsync","copyBuildOverride","buildOverridePath","stat","isDirectory","builder","Error","info","has","setPreference","contains","configurePlugin","icons","validDevices","keys","concat","include","labelWarn","launchScreens","accessRule","launchExternal","appendToConfig","xml","push","addResourceFile"],"mappings":"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","sourcesContent":["import _ from 'underscore';\nimport util from 'util';\nimport path from 'path';\nimport { Console } from '../console/console.js';\nimport buildmessage from '../utils/buildmessage.js';\nimport files from '../fs/files';\nimport { optimisticReadJsonOrNull } from \"../fs/optimistic\";\nimport bundler from '../isobuild/bundler.js';\nimport archinfo from '../utils/archinfo';\nimport release from '../packaging/release.js';\nimport { loadIsopackage } from '../tool-env/isopackets.js';\nimport utils from '../utils/utils.js';\n\nimport { CORDOVA_ARCH } from './index.js';\n\n// Hard-coded size constants\n\nconst iconsIosSizes = {\n  'app_store': '1024x1024',\n  'iphone_2x': '120x120',\n  'iphone_3x': '180x180',\n  'ipad_2x': '152x152',\n  'ipad_pro': '167x167',\n  'ios_settings_2x': '58x58',\n  'ios_settings_3x': '87x87',\n  'ios_spotlight_2x': '80x80',\n  'ios_spotlight_3x': '120x120',\n  'ios_notification_2x': '40x40',\n  'ios_notification_3x': '60x60',\n  // Legacy\n  'ipad': '76x76',\n  'ios_settings': '29x29',\n  'ios_spotlight': '40x40',\n  'ios_notification': '20x20',\n  'iphone_legacy': '57x57',\n  'iphone_legacy_2x': '114x114',\n  'ipad_spotlight_legacy': '50x50',\n  'ipad_spotlight_legacy_2x': '100x100',\n  'ipad_app_legacy': '72x72',\n  'ipad_app_legacy_2x': '144x144'\n};\n\nconst iconsAndroidSizes = {\n  'android_mdpi': '48x48',\n  'android_hdpi': '72x72',\n  'android_xhdpi': '96x96',\n  'android_xxhdpi': '144x144',\n  'android_xxxhdpi': '192x192'\n};\n\nconst launchIosSizes = {\n  'iphone5': '640x1136',\n  'iphone6': '750x1334',\n  'iphone6p_portrait': '1242x2208',\n  'iphone6p_landscape': '2208x1242',\n  'iphoneX_portrait': '1125x2436',\n  'iphoneX_landscape': '2436x1125',\n  'ipad_portrait_2x': '1536x2048',\n  'ipad_landscape_2x': '2048x1536',\n  // Legacy\n  'iphone': '320x480',\n  'iphone_2x': '640x960',\n  'ipad_portrait': '768x1024',\n  'ipad_landscape': '1024x768'\n};\n\nconst launchAndroidSizes = {\n  'android_mdpi_portrait': '320x480',\n  'android_mdpi_landscape': '480x320',\n  'android_hdpi_portrait': '480x800',\n  'android_hdpi_landscape': '800x480',\n  'android_xhdpi_portrait': '720x1280',\n  'android_xhdpi_landscape': '1280x720',\n  'android_xxhdpi_portrait': '960x1600',\n  'android_xxhdpi_landscape': '1600x960',\n  'android_xxxhdpi_portrait': '1280x1920',\n  'android_xxxhdpi_landscape': '1920x1280'\n};\n\nexport class CordovaBuilder {\n  constructor(projectContext, projectRoot, options) {\n    this.projectContext = projectContext;\n    this.projectRoot = projectRoot;\n    this.options = options;\n\n    this.resourcesPath = files.pathJoin(\n      this.projectRoot,\n      'resources');\n\n    this.initalizeDefaults();\n  }\n\n  initalizeDefaults() {\n    let { cordovaServerPort } = this.options;\n    // if --cordova-server-port is not present on run command\n    if (!cordovaServerPort) {\n      // Convert the appId (a base 36 string) to a number\n      const appIdAsNumber = parseInt(this.projectContext.appIdentifier, 36);\n      // We use the appId to choose a local server port between 12000-13000.\n      // This range should be large enough to avoid collisions with other\n      // Meteor apps, and has also been chosen to avoid collisions\n      // with other apps or services on the device (although this can never be\n      // guaranteed).\n      cordovaServerPort = 12000 + (appIdAsNumber % 1000);\n    }\n\n    this.metadata = {\n      id: 'com.id' + this.projectContext.appIdentifier,\n      version: '0.0.1',\n      buildNumber: undefined,\n      name: files.pathBasename(this.projectContext.projectDir),\n      description: 'New Meteor Mobile App',\n      author: 'A Meteor Developer',\n      email: 'n/a',\n      website: 'n/a',\n      contentUrl: `http://localhost:${cordovaServerPort}/`\n    };\n\n    // Set some defaults different from the Cordova defaults\n    this.additionalConfiguration = {\n      global: {\n        'webviewbounce': false,\n        'DisallowOverscroll': true\n      },\n      platform: {\n          ios: {},\n          android: {}\n      }\n    };\n\n    // Custom elements that will be appended into config.xml's widgets\n    this.custom = [];\n\n    // Resource files that will be appended to platform bundle and config.xml\n    this.resourceFiles = [];\n\n    const packageMap = this.projectContext.packageMap;\n\n    if (packageMap && packageMap.getInfo('launch-screen')) {\n      this.additionalConfiguration.global.AutoHideSplashScreen = false;\n      this.additionalConfiguration.global.SplashScreen = 'screen';\n      this.additionalConfiguration.global.SplashScreenDelay = 5000;\n      this.additionalConfiguration.global.FadeSplashScreenDuration = 250;\n      this.additionalConfiguration.global.ShowSplashScreenSpinner = false;\n    }\n\n    if (packageMap && packageMap.getInfo('mobile-status-bar')) {\n      this.additionalConfiguration.global.StatusBarOverlaysWebView = false;\n      this.additionalConfiguration.global.StatusBarStyle = 'default';\n    }\n\n    // Default access rules.\n    // Rules can be extended with App.accesRule() in mobile-config.js.\n    this.accessRules = {\n      // Allow the app to ask the system to open these types of URLs.\n      // (e.g. in the phone app or an email client)\n      'tel:*': { type: 'intent' },\n      'geo:*': { type: 'intent' },\n      'mailto:*': { type: 'intent' },\n      'sms:*': { type: 'intent' },\n      'market:*': { type: 'intent' },\n      'itms:*': { type: 'intent' },\n      'itms-apps:*': { type: 'intent' },\n\n      // Allow navigation to localhost, which is needed for the local server\n      'http://localhost': { type: 'navigation' }\n    };\n\n    const mobileServerUrl = this.options.mobileServerUrl;\n    const serverDomain = mobileServerUrl ?\n      utils.parseUrl(mobileServerUrl).hostname : null;\n\n    // If the remote server domain is known, allow access to it for XHR and DDP\n    // connections.\n    if (serverDomain) {\n      // Application Transport Security (new in iOS 9) doesn't allow you\n      // to give access to IP addresses (just domains). So we allow access to\n      // everything if we don't have a domain, which sets NSAllowsArbitraryLoads.\n      if (utils.isIPv4Address(serverDomain)) {\n        this.accessRules['*'] = { type: 'network' };\n      } else {\n        this.accessRules['*://' + serverDomain] = { type: 'network' };\n\n        // Android talks to localhost over 10.0.2.2. This config file is used for\n        // multiple platforms, so any time that we say the server is on localhost we\n        // should also say it is on 10.0.2.2.\n        if (serverDomain === 'localhost') {\n          this.accessRules['*://10.0.2.2'] = { type: 'network' };\n        }\n      }\n    }\n\n    this.imagePaths = {\n      icon: {},\n      splash: {}\n    };\n\n    // Defaults are Meteor meatball images located in tools/cordova/assets directory\n    const assetsPath = files.pathJoin(__dirname, 'assets');\n    const iconsPath = files.pathJoin(assetsPath, 'icons');\n    const launchScreensPath = files.pathJoin(assetsPath, 'launchscreens');\n\n    const setDefaultIcon = (size, name) => {\n      const imageFile = files.pathJoin(iconsPath, size + '.png');\n      if (files.exists(imageFile)) {\n        this.imagePaths.icon[name] = imageFile;\n      }\n    };\n\n    const setDefaultLaunchScreen = (size, name) => {\n      const imageFile = files.pathJoin(launchScreensPath, `${size}.png`);\n      if (files.exists(imageFile)) {\n        this.imagePaths.splash[name] = imageFile;\n      }\n    };\n\n    _.each(iconsIosSizes, setDefaultIcon);\n    _.each(iconsAndroidSizes, setDefaultIcon);\n    _.each(launchIosSizes, setDefaultLaunchScreen);\n    _.each(launchAndroidSizes, setDefaultLaunchScreen);\n\n    this.pluginsConfiguration = {};\n  }\n\n  processControlFile() {\n    const controlFilePath =\n      files.pathJoin(this.projectContext.projectDir, 'mobile-config.js');\n\n\n    if (files.exists(controlFilePath)) {\n      Console.debug('Processing mobile-config.js');\n\n      buildmessage.enterJob({ title: `processing mobile-config.js` }, () => {\n        const code = files.readFile(controlFilePath, 'utf8');\n\n        try {\n          files.runJavaScript(code, {\n            filename: 'mobile-config.js',\n            symbols: { App: createAppConfiguration(this) }\n          });\n        } catch (error) {\n          buildmessage.exception(error);\n        }\n      });\n    }\n  }\n\n  writeConfigXmlAndCopyResources(shouldCopyResources = true) {\n    const { XmlBuilder } = loadIsopackage('xmlbuilder');\n\n    let config = XmlBuilder.create('widget');\n\n    // Set the root attributes\n    _.each({\n      id: this.metadata.id,\n      version: this.metadata.version,\n      'android-versionCode': this.metadata.buildNumber,\n      'ios-CFBundleVersion': this.metadata.buildNumber,\n      xmlns: 'http://www.w3.org/ns/widgets',\n      'xmlns:cdv': 'http://cordova.apache.org/ns/1.0'\n    }, (value, key) => {\n      if (value) {\n        config.att(key, value);\n      }\n    });\n\n    // Set the metadata\n    config.element('name').txt(this.metadata.name);\n    config.element('description').txt(this.metadata.description);\n    config.element('author', {\n      href: this.metadata.website,\n      email: this.metadata.email\n    }).txt(this.metadata.author);\n\n    // Set the additional global configuration preferences\n    _.each(this.additionalConfiguration.global, (value, key) => {\n      config.element('preference', {\n        name: key,\n        value: value.toString()\n      });\n    });\n\n    // Set custom tags into widget element\n    _.each(this.custom, elementSet => {\n      const tag = config.raw(elementSet);\n    });\n\n    config.element('content', { src: this.metadata.contentUrl });\n\n    // Copy all the access rules\n    _.each(this.accessRules, (options, pattern) => {\n      const type = options.type;\n      options = _.omit(options, 'type');\n\n      if (type === 'intent') {\n        config.element('allow-intent', { href: pattern });\n      } else if (type === 'navigation') {\n        config.element('allow-navigation', _.extend({ href: pattern }, options));\n      } else {\n        config.element('access', _.extend({ origin: pattern }, options));\n      }\n    });\n\n    const platformElement = {\n      ios: config.element('platform', {name: 'ios'}),\n      android: config.element('platform', {name: 'android'})\n    }\n\n    // Set the additional platform-specific configuration preferences\n    _.each(this.additionalConfiguration.platform, (prefs, platform) => {\n      _.each(prefs, (value, key) => {\n        platformElement[platform].element('preference', {\n          name: key,\n          value: value.toString()\n        });\n      });\n    });\n\n    if (shouldCopyResources) {\n      // Prepare the resources folder\n      files.rm_recursive(this.resourcesPath);\n      files.mkdir_p(this.resourcesPath);\n\n      Console.debug('Copying resources for mobile apps');\n\n      this.configureAndCopyImages(iconsIosSizes, platformElement.ios, 'icon');\n      this.configureAndCopyImages(iconsAndroidSizes, platformElement.android, 'icon');\n      this.configureAndCopyImages(launchIosSizes, platformElement.ios, 'splash');\n      this.configureAndCopyImages(launchAndroidSizes, platformElement.android, 'splash');\n    }\n\n    this.configureAndCopyResourceFiles(\n      this.resourceFiles,\n      platformElement.ios,\n      platformElement.android\n    );\n\n    Console.debug('Writing new config.xml');\n\n    const configXmlPath = files.pathJoin(this.projectRoot, 'config.xml');\n    const formattedXmlConfig = config.end({ pretty: true });\n    files.writeFile(configXmlPath, formattedXmlConfig, 'utf8');\n  }\n\n  configureAndCopyImages(sizes, xmlElement, tag) {\n    const imageAttributes = (name, width, height, src) => {\n      const androidMatch = /android_(.?.dpi)_(landscape|portrait)/g.exec(name);\n\n      let attributes = {\n        src: src,\n        width: width,\n        height: height\n      };\n\n      // XXX special case for Android\n      if (androidMatch) {\n        attributes.density =\n          androidMatch[2].substr(0, 4) + '-' + androidMatch[1];\n      }\n\n      return attributes;\n    };\n\n    _.each(sizes, (size, name) => {\n      const [width, height] = size.split('x');\n\n      const suppliedPath = this.imagePaths[tag][name];\n      if (!suppliedPath) {\n        return;\n      }\n\n      const suppliedFilename = _.last(suppliedPath.split(files.pathSep));\n      let extension = _.last(suppliedFilename.split('.'));\n\n      // XXX special case for 9-patch png's\n      if (suppliedFilename.match(/\\.9\\.png$/)) {\n        extension = '9.png';\n      }\n\n      const filename = name + '.' + tag + '.' + extension;\n      const src = files.pathJoin('resources', filename);\n\n      // Copy the file to the build folder with a standardized name\n      files.copyFile(\n        files.pathResolve(this.projectContext.projectDir, suppliedPath),\n        files.pathJoin(this.resourcesPath, filename));\n\n      // Set it to the xml tree\n      xmlElement.element(tag, imageAttributes(name, width, height, src));\n    });\n  }\n\n  configureAndCopyResourceFiles(resourceFiles, iosElement, androidElement) {\n    _.each(resourceFiles, resourceFile => {\n      // Copy file in cordova project root directory\n      var filename = path.parse(resourceFile.src).base;\n      files.copyFile(\n        files.pathResolve(this.projectContext.projectDir, resourceFile.src),\n        files.pathJoin(this.projectRoot, filename));\n      // And entry in config.xml\n      if (!resourceFile.platform ||\n          (resourceFile.platform && resourceFile.platform === \"android\")) {\n        androidElement.element('resource-file', {\n          src: resourceFile.src,\n          target: resourceFile.target\n        });\n      }\n      if (!resourceFile.platform ||\n          (resourceFile.platform && resourceFile.platform === \"ios\")) {\n        iosElement.element('resource-file', {\n          src: resourceFile.src,\n          target: resourceFile.target\n        });\n      }\n    });\n  }\n\n  copyWWW(bundlePath) {\n    const wwwPath = files.pathJoin(this.projectRoot, 'www');\n\n    // Remove existing www\n    files.rm_recursive(wwwPath);\n\n    // Create www and www/application directories\n    const applicationPath = files.pathJoin(wwwPath, 'application');\n    files.mkdir_p(applicationPath);\n\n    // Copy Cordova arch program from bundle to www/application\n    const programPath = files.pathJoin(bundlePath, 'programs', CORDOVA_ARCH);\n    files.cp_r(programPath, applicationPath);\n\n    // Load program.json\n    const programJsonPath = files.convertToOSPath(\n      files.pathJoin(applicationPath, 'program.json'));\n    const program = JSON.parse(files.readFile(programJsonPath, 'utf8'));\n\n    // Load settings\n    const settingsFile = this.options.settingsFile;\n    const settings = settingsFile ?\n      JSON.parse(files.readFile(settingsFile, 'utf8')) : {};\n    const publicSettings = settings['public'];\n\n    // Calculate client hash and append to program\n    this.appendVersion(program, publicSettings);\n\n    // Write program.json\n    files.writeFile(programJsonPath, JSON.stringify(program), 'utf8');\n\n    const bootstrapPage = this.generateBootstrapPage(\n      applicationPath, program, publicSettings\n    ).await();\n\n    files.writeFile(files.pathJoin(applicationPath, 'index.html'),\n      bootstrapPage, 'utf8');\n  }\n\n  appendVersion(program, publicSettings) {\n    // Note: these version calculations must be kept in agreement with\n    // generateClientProgram in packages/webapp/webapp_server.js, or hot\n    // code push will reload the app unnecessarily.\n\n    let configDummy = {};\n    configDummy.PUBLIC_SETTINGS = publicSettings || {};\n\n    const { WebAppHashing } = loadIsopackage('webapp-hashing');\n    const { AUTOUPDATE_VERSION } = process.env;\n\n    program.version = AUTOUPDATE_VERSION ||\n      WebAppHashing.calculateClientHash(\n        program.manifest, null, configDummy);\n\n    program.versionRefreshable = AUTOUPDATE_VERSION ||\n      WebAppHashing.calculateClientHash(\n        program.manifest, type => type === \"css\", configDummy);\n\n    program.versionNonRefreshable = AUTOUPDATE_VERSION ||\n      WebAppHashing.calculateClientHash(\n        program.manifest, type => type !== \"css\", configDummy);\n  }\n\n  generateBootstrapPage(applicationPath, program, publicSettings) {\n    const meteorRelease =\n      release.current.isCheckout() ? \"none\" : release.current.name;\n\n    const manifest = program.manifest;\n\n    const mobileServerUrl = this.options.mobileServerUrl;\n\n    const runtimeConfig = {\n      meteorRelease: meteorRelease,\n      gitCommitHash: process.env.METEOR_GIT_COMMIT_HASH || files.findGitCommitHash(applicationPath),\n      ROOT_URL: mobileServerUrl,\n      // XXX propagate it from this.options?\n      ROOT_URL_PATH_PREFIX: '',\n      DDP_DEFAULT_CONNECTION_URL: mobileServerUrl,\n      autoupdate: {\n        versions: {\n          \"web.cordova\": {\n            version: program.version,\n            versionRefreshable: program.versionRefreshable,\n            versionNonRefreshable: program.versionNonRefreshable\n          }\n        }\n      },\n      appId: this.projectContext.appIdentifier,\n      meteorEnv: {\n        NODE_ENV: process.env.NODE_ENV || \"production\",\n        TEST_METADATA: process.env.TEST_METADATA || \"{}\"\n      }\n    };\n\n    if (publicSettings) {\n      runtimeConfig.PUBLIC_SETTINGS = publicSettings;\n    }\n\n    const { Boilerplate } = loadIsopackage('boilerplate-generator');\n\n    const boilerplate = new Boilerplate(CORDOVA_ARCH, manifest, {\n      urlMapper: _.identity,\n      pathMapper: (path) => files.convertToOSPath(\n        files.pathJoin(applicationPath, path)),\n      baseDataExtension: {\n        meteorRuntimeConfig: JSON.stringify(\n          encodeURIComponent(JSON.stringify(runtimeConfig)))\n      }\n    });\n\n    return boilerplate.toHTMLAsync();\n  }\n\n  copyBuildOverride() {\n    const buildOverridePath =\n      files.pathJoin(this.projectContext.projectDir, 'cordova-build-override');\n\n    if (files.exists(buildOverridePath) &&\n      files.stat(buildOverridePath).isDirectory()) {\n      Console.debug('Copying over the cordova-build-override directory');\n      files.cp_r(buildOverridePath, this.projectRoot);\n    }\n  }\n}\n\nfunction createAppConfiguration(builder) {\n  const { settingsFile } = builder.options;\n  let settings = null;\n  if (settingsFile) {\n    settings = optimisticReadJsonOrNull(settingsFile);\n    if (! settings) {\n      throw new Error(\"Unreadable --settings file: \" + settingsFile);\n    }\n  }\n\n  /**\n   * @namespace App\n   * @global\n   * @summary The App configuration object in mobile-config.js\n   */\n  return {\n    /**\n     * @summary Set your mobile app's core configuration information.\n     * @param {Object} options\n     * @param {String} [options.id,version,name,description,author,email,website]\n     * Each of the options correspond to a key in the app's core configuration\n     * as described in the [Cordova documentation](http://cordova.apache.org/docs/en/5.1.1/config_ref_index.md.html#The%20config.xml%20File_core_configuration_elements).\n     * @memberOf App\n     */\n    info: function (options) {\n      // check that every key is meaningful\n      _.each(options, function (value, key) {\n        if (!_.has(builder.metadata, key)) {\n          throw new Error(\"Unknown key in App.info configuration: \" + key);\n        }\n      });\n\n      _.extend(builder.metadata, options);\n    },\n    /**\n     * @summary Add a preference for your build as described in the\n     * [Cordova documentation](http://cordova.apache.org/docs/en/5.1.1/config_ref_index.md.html#The%20config.xml%20File_global_preferences).\n     * @param {String} name A preference name supported by Cordova's\n     * `config.xml`.\n     * @param {String} value The value for that preference.\n     * @param {String} [platform] Optional. A platform name (either `ios` or `android`) to add a platform-specific preference.\n     * @memberOf App\n     */\n    setPreference: function (key, value, platform) {\n      if (platform) {\n        if (!_.contains(['ios', 'android'], platform)) {\n          throw new Error(`Unknown platform in App.setPreference: ${platform}. \\\nValid platforms are: ios, android.`);\n        }\n\n        builder.additionalConfiguration.platform[platform][key] = value;\n      } else {\n        builder.additionalConfiguration.global[key] = value;\n      }\n    },\n\n    /**\n     * @summary Like `Meteor.settings`, contains data read from a JSON\n     *          file provided via the `--settings` command-line option at\n     *          build time, or null if no settings were provided.\n     * @memberOf App\n     * @type {Object}\n     */\n    settings,\n\n    /**\n     * @summary Set the build-time configuration for a Cordova plugin.\n     * @param {String} id The identifier of the plugin you want to\n     * configure.\n     * @param {Object} config A set of key-value pairs which will be passed\n     * at build-time to configure the specified plugin.\n     * @memberOf App\n     */\n    configurePlugin: function (id, config) {\n      builder.pluginsConfiguration[id] = config;\n    },\n\n    /**\n     * @summary Set the icons for your mobile app.\n     * @param {Object} icons An Object where the keys are different\n     * devices and screen sizes, and values are image paths\n     * relative to the project root directory.\n     *\n     * Valid key values:\n     * - `app_store` (1024x1024) // Apple App Store\n     * - `iphone_2x` (120x120) // iPhone 5, SE, 6, 6s, 7, 8\n     * - `iphone_3x` (180x180) // iPhone 6 Plus, 6s Plus, 7 Plus, 8 Plus, X\n     * - `ipad_2x` (152x152) // iPad, iPad mini\n     * - `ipad_pro` (167x167) // iPad Pro\n     * - `ios_settings_2x` (58x58) // iPhone 5, SE, 6, 6s, 7, 8, iPad, mini, Pro\n     * - `ios_settings_3x` (87x87) // iPhone 6 Plus, 6s Plus, 7 Plus, 8 Plus, X\n     * - `ios_spotlight_2x` (80x80) // iPhone 5, SE, 6, 6s, 7, 8, iPad, mini, Pro\n     * - `ios_spotlight_3x` (120x120) // iPhone 6 Plus, 6s Plus, 7 Plus, 8 Plus, X\n     * - `ios_notification_2x` (40x40) // iPhone 5, SE, 6, 6s, 7, 8, iPad, mini, Pro\n     * - `ios_notification_3x` (60x60 // iPhone 6 Plus, 6s Plus, 7 Plus, 8 Plus, X\n     * - `ipad` (76x76) // Legacy\n     * - `ios_settings` (29x29) // Legacy\n     * - `ios_spotlight` (40x40) // Legacy\n     * - `ios_notification` (20x20) // Legacy\n     * - `iphone_legacy` (57x57) // Legacy\n     * - `iphone_legacy_2x` (114x114) // Legacy\n     * - `ipad_spotlight_legacy` (50x50) // Legacy\n     * - `ipad_spotlight_legacy_2x` (100x100) // Legacy\n     * - `ipad_app_legacy` (72x72) // Legacy\n     * - `ipad_app_legacy_2x` (144x144) // Legacy\n     * - `android_mdpi` (48x48)\n     * - `android_hdpi` (72x72)\n     * - `android_xhdpi` (96x96)\n     * - `android_xxhdpi` (144x144)\n     * - `android_xxxhdpi` (192x192)\n     * @memberOf App\n     */\n    icons: function (icons) {\n      var validDevices =\n        _.keys(iconsIosSizes).concat(_.keys(iconsAndroidSizes));\n      _.each(icons, function (value, key) {\n        if (!_.include(validDevices, key)) {\n          Console.labelWarn(`${key}: unknown key in App.icons \\\nconfiguration. The key may be deprecated.`);\n        }\n      });\n      _.extend(builder.imagePaths.icon, icons);\n    },\n\n    /**\n     * @summary Set the launch screen images for your mobile app.\n     * @param {Object} launchScreens A dictionary where keys are different\n     * devices, screen sizes, and orientations, and the values are image paths\n     * relative to the project root directory.\n     *\n     * For Android, launch screen images should\n     * be special \"Nine-patch\" image files that specify how they should be\n     * stretched. See the [Android docs](https://developer.android.com/guide/topics/graphics/2d-graphics.html#nine-patch).\n     *\n     * Valid key values:\n     * - `iphone5` (640x1136) // iPhone 5, SE\n     * - `iphone6` (750x1334) // iPhone 6, 6s, 7, 8\n     * - `iphone6p_portrait` (1242x2208) // iPhone 6 Plus, 6s Plus, 7 Plus, 8 Plus\n     * - `iphone6p_landscape` (2208x1242) // iPhone 6 Plus, 6s Plus, 7 Plus, 8 Plus\n     * - `iphoneX_portrait` (1125x2436) // iPhone X\n     * - `iphoneX_landscape` (2436x1125) // iPhone X\n     * - `ipad_portrait_2x` (1536x2048) // iPad, iPad mini\n     * - `ipad_landscape_2x` (2048x1536) // iPad, iPad mini\n     * - `iphone` (320x480) // Legacy\n     * - `iphone_2x` (640x960) // Legacy\n     * - `ipad_portrait` (768x1024) // Legacy\n     * - `ipad_landscape` (1024x768) // Legacy\n     * - `android_mdpi_portrait` (320x480)\n     * - `android_mdpi_landscape` (480x320)\n     * - `android_hdpi_portrait` (480x800)\n     * - `android_hdpi_landscape` (800x480)\n     * - `android_xhdpi_portrait` (720x1280)\n     * - `android_xhdpi_landscape` (1280x720)\n     * - `android_xxhdpi_portrait` (960x1600)\n     * - `android_xxhdpi_landscape` (1600x960)\n     * - `android_xxxhdpi_portrait` (1280x1920)\n     * - `android_xxxhdpi_landscape` (1920x1280)\n     *\n     * @memberOf App\n     */\n    launchScreens: function (launchScreens) {\n      var validDevices =\n        _.keys(launchIosSizes).concat(_.keys(launchAndroidSizes));\n\n      _.each(launchScreens, function (value, key) {\n        if (!_.include(validDevices, key)) {\n          Console.labelWarn(`${key}: unknown key in App.launchScreens \\\nconfiguration. The key may be deprecated.`);\n        }\n      });\n      _.extend(builder.imagePaths.splash, launchScreens);\n    },\n\n    /**\n     * @summary Set a new access rule based on origin domain for your app.\n     * By default your application has a limited list of servers it can contact.\n     * Use this method to extend this list.\n     *\n     * Default access rules:\n     *\n     * - `tel:*`, `geo:*`, `mailto:*`, `sms:*`, `market:*` are allowed and\n     *   are handled by the system (e.g. opened in the phone app or an email client)\n     * - `http://localhost:*` is used to serve the app's assets from.\n     * - The domain or address of the Meteor server to connect to for DDP and\n     *   hot code push of new versions.\n     *\n     * Read more about domain patterns in [Cordova\n     * docs](http://cordova.apache.org/docs/en/6.0.0/guide_appdev_whitelist_index.md.html).\n     *\n     * Starting with Meteor 1.0.4 access rule for all domains and protocols\n     * (`<access origin=\"*\"/>`) is no longer set by default due to\n     * [certain kind of possible\n     * attacks](http://cordova.apache.org/announcements/2014/08/04/android-351.html).\n     *\n     * @param {String} pattern The pattern defining affected domains or URLs.\n     * @param {Object} [options]\n     * @param {String} options.type Possible values:\n     * - **`'intent'`**: Controls which URLs the app is allowed to ask the system to open.\n     *  (e.g. in the phone app or an email client).\n     * - **`'navigation'`**: Controls which URLs the WebView itself can be navigated to\n     *  (can also needed for iframes).\n     * - **`'network'` or undefined**: Controls which network requests (images, XHRs, etc) are allowed to be made.\n     * @param {Boolean} options.launchExternal (Deprecated, use `type: 'intent'` instead.)\n     * @memberOf App\n     */\n    accessRule: function (pattern, options) {\n      options = options || {};\n\n      if (options.launchExternal) {\n        options.type = 'intent';\n      }\n\n      builder.accessRules[pattern] = options;\n    },\n\n    /**\n     * @summary Append custom tags into config's widget element.\n     *\n     * `App.appendToConfig('<any-xml-content/>');`\n     *\n     * @param  {String} element The XML you want to include\n     * @memberOf App\n     */\n    appendToConfig: function (xml) {\n      builder.custom.push(xml);\n    },\n\n    /**\n     * @summary Add a resource file for your build as described in the\n     * [Cordova documentation](http://cordova.apache.org/docs/en/7.x/config_ref/index.html#resource-file).\n     * @param {String} src The project resource path.\n     * @param {String} target Resource destination in build.\n     * @param {String} [platform] Optional. A platform name (either `ios` or `android`, both if ommited) to add a resource-file entry.\n     * @memberOf App\n     */\n    addResourceFile: function (src, target, platform) {\n      builder.resourceFiles.push({\n        src: src,\n        target: target,\n        platform: platform\n      });\n    }\n  };\n}\n"],"file":"tools/cordova/builder.js.map"}