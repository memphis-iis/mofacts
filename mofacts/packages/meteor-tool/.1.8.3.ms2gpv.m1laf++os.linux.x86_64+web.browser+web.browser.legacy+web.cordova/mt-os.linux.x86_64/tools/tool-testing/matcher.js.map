{"version":3,"sources":["/tools/tool-testing/matcher.js"],"names":["module","export","default","Matcher","makeFulfillablePromise","link","v","TestFailure","Console","markThrowingMethods","constructor","run","buf","fullBuffer","ended","resetMatch","endPromise","Promise","resolve","resolveEndPromise","write","data","_tryMatch","mp","matchPromise","matchPattern","matchStrict","matchFullBuffer","rejectMatch","error","reject","resolveMatch","value","match","pattern","timeout","strict","matchAsync","await","Error","timer","failure","setTimeout","then","result","clearTimeout","matchBeforeEnd","_beforeEnd","promiseCallback","end","endAsync","matchEmpty","length","info","ret","RegExp","indexOf","m","index","substr","slice","i","prototype"],"mappings":"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","sourcesContent":["// Handles the job of waiting until text is seen that matches a\n// regular expression.\nimport { makeFulfillablePromise } from '../utils/fiber-helpers.js';\nimport TestFailure from './test-failure.js';\nimport { Console } from '../console/console.js';\n\nexport default class Matcher {\n  constructor(run) {\n    this.buf = \"\";\n    this.fullBuffer = \"\";\n    this.ended = false;\n    this.resetMatch();\n    this.run = run; // used only to set a field on exceptions\n    this.endPromise = new Promise((resolve) => {\n      this.resolveEndPromise = resolve;\n    });\n  }\n\n  write(data) {\n    this.buf += data;\n    this.fullBuffer += data;\n    this._tryMatch();\n  }\n\n  resetMatch() {\n    const mp = this.matchPromise;\n\n    this.matchPattern = null;\n    this.matchPromise = null;\n    this.matchStrict = null;\n    this.matchFullBuffer = false;\n\n    return mp;\n  }\n\n  rejectMatch(error) {\n    const mp = this.resetMatch();\n    if (mp) {\n      mp.reject(error);\n    } else {\n      // If this.matchPromise was not defined, we should not swallow this\n      // error, so we must throw it instead.\n      throw error;\n    }\n  }\n\n  resolveMatch(value) {\n    const mp = this.resetMatch();\n    if (mp) {\n      mp.resolve(value);\n    }\n  }\n\n  match(pattern, timeout, strict) {\n    return this.matchAsync(pattern, { timeout, strict }).await();\n  }\n\n  // Like match, but returns a Promise without calling .await().\n  matchAsync(pattern, {\n    timeout = null,\n    strict = false,\n    matchFullBuffer = false,\n  }) {\n    if (this.matchPromise) {\n      return Promise.reject(new Error(\"already have a match pending?\"));\n    }\n    this.matchPattern = pattern;\n    this.matchStrict = strict;\n    this.matchFullBuffer = matchFullBuffer;\n    const mp = this.matchPromise = makeFulfillablePromise();\n    this._tryMatch(); // could clear this.matchPromise\n\n    let timer = null;\n    if (timeout) {\n      const failure = new TestFailure('match-timeout', {\n        run: this.run,\n        pattern: this.matchPattern,\n      });\n\n      timer = setTimeout(() => {\n        this.rejectMatch(failure);\n      }, timeout * 1000);\n    } else {\n      return mp;\n    }\n\n    return mp.then((result) => {\n      clearTimeout(timer);\n      return result;\n    }, (error) => {\n      clearTimeout(timer);\n      throw error;\n    });\n  }\n\n  matchBeforeEnd(pattern, timeout) {\n    return this._beforeEnd(() => this.matchAsync(pattern, {\n      timeout: timeout || 15,\n      matchFullBuffer: true,\n    }));\n  }\n\n  _beforeEnd(promiseCallback) {\n    this.endPromise = this.endPromise.then(promiseCallback);\n    return this.endPromise;\n  }\n\n  end() {\n    return this.endAsync().await();\n  }\n\n  endAsync() {\n    this.resolveEndPromise();\n    return this._beforeEnd(() => {\n      this.ended = true;\n      this._tryMatch();\n      return this.matchPromise;\n    });\n  }\n\n  matchEmpty() {\n    if (this.buf.length > 0) {\n      Console.info(\"Extra junk is :\", this.buf);\n      throw new TestFailure('junk-at-end', { run: this.run });\n    }\n  }\n\n  _tryMatch() {\n    const mp = this.matchPromise;\n    if (! mp) {\n      return;\n    }\n\n    let ret = null;\n\n    if (this.matchFullBuffer) {\n      // Note: this.matchStrict is ignored if this.matchFullBuffer truthy.\n      if (this.matchPattern instanceof RegExp) {\n        ret = this.fullBuffer.match(this.matchPattern);\n      } else if (this.fullBuffer.indexOf(this.matchPattern) >= 0) {\n        ret = this.matchPattern;\n      }\n    } else if (this.matchPattern instanceof RegExp) {\n      const m = this.buf.match(this.matchPattern);\n      if (m) {\n        if (this.matchStrict && m.index !== 0) {\n          Console.info(\"Extra junk is: \", this.buf.substr(0, m.index));\n          this.rejectMatch(new TestFailure('junk-before', {\n            run: this.run,\n            pattern: this.matchPattern,\n          }));\n          return;\n        }\n        ret = m;\n        this.buf = this.buf.slice(m.index + m[0].length);\n      }\n    } else {\n      const i = this.buf.indexOf(this.matchPattern);\n      if (i !== -1) {\n        if (this.matchStrict && i !== 0) {\n          Console.info(\"Extra junk is: \", this.buf.substr(0, i));\n          this.rejectMatch(new TestFailure('junk-before', {\n            run: this.run,\n            pattern: this.matchPattern,\n          }));\n          return;\n        }\n        ret = this.matchPattern;\n        this.buf = this.buf.slice(i + this.matchPattern.length);\n      }\n    }\n\n    if (ret !== null) {\n      this.resolveMatch(ret);\n      return;\n    }\n\n    if (this.ended) {\n      this.rejectMatch(new TestFailure('no-match', {\n        run: this.run,\n        pattern: this.matchPattern,\n      }));\n      return;\n    }\n  }\n}\n\nimport { markThrowingMethods } from \"./test-utils.js\";\nmarkThrowingMethods(Matcher.prototype);\n"],"file":"tools/tool-testing/matcher.js.map"}