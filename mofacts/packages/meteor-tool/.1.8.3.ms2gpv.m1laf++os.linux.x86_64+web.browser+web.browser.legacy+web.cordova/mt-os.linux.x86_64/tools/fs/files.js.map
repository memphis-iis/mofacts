{"version":3,"sources":["tools/fs/files.ts"],"names":[],"mappings":"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","sourcesContent":["///\n/// utility functions for files and directories. includes both generic\n/// helper functions (such as rm_recursive), and meteor-specific ones\n/// (such as testing whether an directory is a meteor app)\n///\n\nimport assert from \"assert\";\nimport fs, { PathLike, Stats } from \"fs\";\nimport path from \"path\";\nimport os from \"os\";\nimport { spawn, execFile } from \"child_process\";\nimport { EventEmitter } from \"events\";\nimport { Slot } from \"@wry/context\";\nimport { dep } from \"optimism\";\n\nconst _ = require('underscore');\nconst Fiber = require(\"fibers\");\n\nconst rimraf = require('rimraf');\nconst sourcemap = require('source-map');\nconst sourceMapRetrieverStack = require('../tool-env/source-map-retriever-stack.js');\n\nconst utils = require('../utils/utils.js');\nconst cleanup = require('../tool-env/cleanup.js');\nconst buildmessage = require('../utils/buildmessage.js');\nconst fiberHelpers = require('../utils/fiber-helpers.js');\nconst colonConverter = require('../utils/colon-converter.js');\n\nconst Profile = require('../tool-env/profile').Profile;\n\nexport * from '../static-assets/server/mini-files';\nimport {\n  convertToOSPath,\n  convertToPosixPath,\n  convertToStandardLineEndings,\n  convertToStandardPath,\n  convertToWindowsPath,\n  isWindowsLikeFilesystem,\n  pathBasename,\n  pathDirname,\n  pathJoin,\n  pathNormalize,\n  pathOsDelimiter,\n  pathRelative,\n  pathResolve,\n  pathSep,\n} from \"../static-assets/server/mini-files\";\n\nconst { hasOwnProperty } = Object.prototype;\n\nconst parsedSourceMaps: Record<string, any> = {};\nlet nextStackFilenameCounter = 1;\n\n// Use the source maps specified to runJavaScript\nfunction useParsedSourceMap(pathForSourceMap: string) {\n  // Check our fancy source map data structure, used for isopacks\n  if (hasOwnProperty.call(parsedSourceMaps, pathForSourceMap)) {\n    return {map: parsedSourceMaps[pathForSourceMap]};\n  }\n\n  return null;\n}\n\n// Try this source map first\nsourceMapRetrieverStack.push(useParsedSourceMap);\n\nfunction canYield() {\n  return Fiber.current &&\n    Fiber.yield &&\n    ! Fiber.yield.disallowed;\n}\n\n// given a predicate function and a starting path, traverse upwards\n// from the path until we find a path that satisfies the predicate.\n//\n// returns either the path to the lowest level directory that passed\n// the test or null for none found. if starting path isn't given, use\n// cwd.\nfunction findUpwards(\n  predicate: (path: string) => boolean,\n  startPath: string = cwd(),\n): string | null {\n  let testDir: string | null = startPath;\n  while (testDir) {\n    if (predicate(testDir)) {\n      break;\n    }\n    var newDir: string = pathDirname(testDir);\n    if (newDir === testDir) {\n      testDir = null;\n    } else {\n      testDir = newDir;\n    }\n  }\n  return testDir || null;\n}\n\nexport function cwd() {\n  return convertToStandardPath(process.cwd());\n}\n\n// Determine if 'filepath' (a path, or omit for cwd) is within an app\n// directory. If so, return the top-level app directory.\nexport function findAppDir(filepath: string) {\n  return findUpwards(function isAppDir(filepath) {\n    // XXX once we are done with the transition to engine, this should\n    // change to: `return exists(path.join(filepath, '.meteor',\n    // 'release'))`\n\n    // .meteor/packages can be a directory, if .meteor is a warehouse\n    // directory.  since installing meteor initializes a warehouse at\n    // $HOME/.meteor, we want to make sure your home directory (and all\n    // subdirectories therein) don't count as being within a meteor app.\n    try { // use try/catch to avoid the additional syscall to exists\n      return stat(\n        pathJoin(filepath, '.meteor', 'packages')).isFile();\n    } catch (e) {\n      return false;\n    }\n  }, filepath);\n}\n\nexport function findPackageDir(filepath: string) {\n  return findUpwards(function isPackageDir(filepath) {\n    try {\n      return stat(pathJoin(filepath, 'package.js')).isFile();\n    } catch (e) {\n      return false;\n    }\n  }, filepath);\n}\n\n// Returns the hash of the current Git HEAD revision of the application,\n// if possible. Always resolves rather than rejecting (unless something\n// truly unexpected happens). The result value is a string when a Git\n// revision was successfully resolved, or undefined otherwise.\nexport function findGitCommitHash(path: string) {\n  return new Promise(resolve => {\n    const appDir = findAppDir(path);\n    if (appDir) {\n      execFile(\"git\", [\"rev-parse\", \"HEAD\"], {\n        cwd: convertToOSPath(appDir),\n      }, (error: any, stdout: string) => {\n        if (! error && typeof stdout === \"string\") {\n          resolve(stdout.trim());\n        } else {\n          resolve();\n        }\n      });\n    } else {\n      resolve();\n    }\n  }).await();\n}\n\n// create a .gitignore file in dirPath if one doesn't exist. add\n// 'entry' to the .gitignore on its own line at the bottom of the\n// file, if the exact line does not already exist in the file.\nexport function addToGitignore(dirPath: string, entry: string) {\n  const filePath = pathJoin(dirPath, \".gitignore\");\n  if (exists(filePath)) {\n    let data = readFile(filePath, 'utf8') as string;\n    const lines = data.split(/\\n/);\n    if (lines.some(line => line === entry)) {\n      // already there do nothing\n    } else {\n      // rewrite file w/ new entry.\n      if (data.substr(-1) !== \"\\n\") {\n        data = data + \"\\n\";\n      }\n      data = data + entry + \"\\n\";\n      writeFile(filePath, data, 'utf8');\n    }\n  } else {\n    // doesn't exist, just write it.\n    writeFile(filePath, entry + \"\\n\", 'utf8');\n  }\n}\n\n// Are we running Meteor from a git checkout?\nexport const inCheckout = _.once(function () {\n  try {\n    if (exists(pathJoin(getCurrentToolsDir(), '.git'))) {\n      return true;\n    }\n  } catch (e) { console.log(e); }\n\n  return false;\n});\n\n// True if we are using a warehouse: either installed Meteor, or if\n// $METEOR_WAREHOUSE_DIR is set. Otherwise false (we're in a git checkout and\n// just using packages from the checkout).\nexport function usesWarehouse() {\n  // Test hook: act like we're \"installed\" using a non-homedir warehouse\n  // directory.\n  if (process.env.METEOR_WAREHOUSE_DIR) {\n    return true;\n  } else {\n    return ! inCheckout();\n  }\n}\n\n// Read the '.tools_version.txt' file. If in a checkout, throw an error.\nexport function getToolsVersion() {\n  if (! inCheckout()) {\n    const isopackJsonPath = pathJoin(getCurrentToolsDir(),\n      '..',  // get out of tool, back to package\n      'isopack.json');\n\n    let parsed;\n\n    if (exists(isopackJsonPath)) {\n      // XXX \"isopack-1\" is duplicate of isopack.currentFormat\n      parsed = JSON.parse(readFile(isopackJsonPath))[\"isopack-1\"];\n      return parsed.name + '@' + parsed.version;\n    }\n\n    // XXX COMPAT WITH 0.9.3\n    const unipackageJsonPath = pathJoin(\n      getCurrentToolsDir(),\n      '..',  // get out of tool, back to package\n      'unipackage.json'\n    );\n    parsed = JSON.parse(readFile(unipackageJsonPath));\n    return parsed.name + '@' + parsed.version;\n\n  } else {\n    throw new Error(\"Unexpected. Git checkouts don't have tools versions.\");\n  }\n}\n\n// Return the root of dev_bundle (probably /usr/local/meteor in an\n// install, or (checkout root)/dev_bundle in a checkout.).\nexport function getDevBundle() {\n  return pathJoin(getCurrentToolsDir(), 'dev_bundle');\n}\n\nexport function getCurrentNodeBinDir() {\n  return pathJoin(getDevBundle(), \"bin\");\n}\n\n// Return the top-level directory for this meteor install or checkout\nexport function getCurrentToolsDir() {\n  return pathDirname(pathDirname(convertToStandardPath(__dirname)));\n}\n\n// Read a settings file and sanity-check it. Returns a string on\n// success or null on failure (in which case buildmessages will be\n// emitted).\nexport function getSettings(\n  filename: string,\n  watchSet: import(\"./watch\").WatchSet,\n) {\n  buildmessage.assertInCapture();\n  const absPath = pathResolve(filename);\n  const buffer = require(\"./watch\").readAndWatchFile(watchSet, absPath);\n  if (buffer === null) {\n    buildmessage.error(\"file not found (settings file)\",\n                       { file: filename });\n    return null;\n  }\n\n  if (buffer.length > 0x10000) {\n    buildmessage.error(\"settings file is too large (must be less than 64k)\",\n                       { file: filename });\n    return null;\n  }\n\n  let str = buffer.toString('utf8');\n\n  // The use of a byte order mark crashes JSON parsing. Since a BOM is not\n  // required (or recommended) when using UTF-8, let's remove it if it exists.\n  str = str.charCodeAt(0) === 0xFEFF ? str.slice(1) : str;\n\n  // Ensure that the string is parseable in JSON, but there's no reason to use\n  // the object value of it yet.\n  if (str.match(/\\S/)) {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      buildmessage.error(\"parse error reading settings file\",\n                         { file: filename });\n    }\n  }\n\n  return str;\n}\n\n// Try to find the prettiest way to present a path to the\n// user. Presently, the main thing it does is replace $HOME with ~.\nexport function prettyPath(p: string) {\n  p = realpath(p);\n  const home = getHomeDir();\n  if (! home) {\n    return p;\n  }\n  const relativeToHome = pathRelative(home, p);\n  if (relativeToHome.substr(0, 3) === ('..' + pathSep)) {\n    return p;\n  }\n  return pathJoin('~', relativeToHome);\n}\n\n// Like statSync, but null if file not found\nexport function statOrNull(path: string) {\n  return statOrNullHelper(path, false);\n}\n\nfunction statOrNullHelper(path: string, preserveSymlinks = false) {\n  try {\n    return preserveSymlinks\n      ? lstat(path)\n      : stat(path);\n  } catch (e) {\n    if (e.code === \"ENOENT\") {\n      return null;\n    }\n    throw e;\n  }\n}\n\nexport function realpathOrNull(path: string) {\n  try {\n    return realpath(path);\n  } catch (e) {\n    if (e.code !== \"ENOENT\") throw e;\n    return null;\n  }\n}\n\nexport function rm_recursive_async(path: string) {\n  return new Promise((resolve, reject) => {\n    rimraf(convertToOSPath(path), (err: Error) => err\n      ? reject(err)\n      : resolve());\n  });\n}\n\n// Like rm -r.\nexport const rm_recursive = Profile(\"files.rm_recursive\", (path: string) => {\n  try {\n    rimraf.sync(convertToOSPath(path));\n  } catch (e) {\n    if ((e.code === \"ENOTEMPTY\" ||\n         e.code === \"EPERM\") &&\n        canYield()) {\n      rm_recursive_async(path).await();\n      return;\n    }\n    throw e;\n  }\n});\n\n// Returns the base64 SHA256 of the given file.\nexport function fileHash(filename: string) {\n  const crypto = require('crypto');\n  const hash = crypto.createHash('sha256');\n  hash.setEncoding('base64');\n  const rs = createReadStream(filename);\n  return new Promise(function (resolve) {\n    rs.on('end', function () {\n      rs.close();\n      resolve(hash.digest('base64'));\n    });\n    rs.pipe(hash, { end: false });\n  }).await();\n}\n\n// This is the result of running fileHash on a blank file.\nexport const blankHash = \"47DEQpj8HBSa+/TImW+5JCeuQeRkm5NMpJWZG3hSuFU=\";\n\n// Returns a base64 SHA256 hash representing a tree on disk. It is not sensitive\n// to modtime, uid/gid, or any permissions bits other than the current-user-exec\n// bit on normal files.\nexport function treeHash(root: string, options: {\n  ignore: (path: string) => boolean;\n}) {\n  options = {\n    ignore() { return false; },\n    ...options,\n  };\n\n  const hash = require('crypto').createHash('sha256');\n\n  function traverse(relativePath: string) {\n    if (options.ignore(relativePath)) {\n      return;\n    }\n\n    var absPath = pathJoin(root, relativePath);\n    var stat = lstat(absPath);\n\n    if (stat.isDirectory()) {\n      if (relativePath) {\n        hash.update('dir ' + JSON.stringify(relativePath) + '\\n');\n      }\n      readdir(absPath).forEach(entry => {\n        traverse(pathJoin(relativePath, entry));\n      });\n    } else if (stat.isFile()) {\n      if (!relativePath) {\n        throw Error(\"must call files.treeHash on a directory\");\n      }\n      hash.update('file ' + JSON.stringify(relativePath) + ' ' +\n                  stat.size + ' ' + fileHash(absPath) + '\\n');\n      if (stat.mode & 0o100) {\n        hash.update('exec\\n');\n      }\n    } else if (stat.isSymbolicLink()) {\n      if (!relativePath) {\n        throw Error(\"must call files.treeHash on a directory\");\n      }\n      hash.update('symlink ' + JSON.stringify(relativePath) + ' ' +\n                  JSON.stringify(readlink(absPath)) + '\\n');\n    }\n    // ignore anything weirder\n  };\n\n  traverse('');\n\n  return hash.digest('base64');\n}\n\n// like mkdir -p. if it returns true, the item is a directory (even if\n// it was already created). if it returns false, the item is not a\n// directory and we couldn't make it one.\nexport function mkdir_p(dir: string, mode: number | null = null) {\n  const p = pathResolve(dir);\n  const ps = pathNormalize(p).split(pathSep);\n\n  const stat = statOrNull(p);\n  if (stat) {\n    return stat.isDirectory();\n  }\n\n  // doesn't exist. recurse to build parent.\n  // Don't use pathJoin here because it can strip off the leading slash\n  // accidentally.\n  const parentPath = ps.slice(0, -1).join(pathSep);\n  const success = mkdir_p(parentPath, mode);\n  // parent is not a directory.\n  if (! success) { return false; }\n\n  try {\n    mkdir(p, mode);\n  } catch (err) {\n    if (err.code === \"EEXIST\") {\n      if (pathIsDirectory(p)) {\n        // all good, someone else created this directory for us while we were\n        // yielding\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      throw err;\n    }\n  }\n\n  // double check we exist now\n  return pathIsDirectory(p);\n}\n\nfunction pathIsDirectory(path: string) {\n  const stat = statOrNull(path);\n  return stat && stat.isDirectory();\n}\n\n// Roughly like cp -R.\n//\n// The output files will be readable and writable by everyone that the umask\n// allows, and executable by everyone (modulo umask) if the original file was\n// owner-executable. Symlinks are treated transparently (ie the contents behind\n// them are copied, and it's an error if that points nowhere).\n//\n// If options.transform{Filename, Contents} is present, it should\n// be a function, and the contents (as a buffer) or filename will be\n// passed through the function. Use this to, eg, fill templates.\n//\n// If options.ignore is present, it should be a list of regexps. Any\n// file whose basename matches one of the regexps, before\n// transformation, will be skipped.\nexport function cp_r(from: string, to: string, options: {\n  preserveSymlinks?: boolean;\n  ignore?: RegExp[];\n  transformFilename?: (f: string) => string;\n  transformContents?: (\n    contents: ReturnType<typeof readFile>,\n    file: string,\n  ) => typeof contents;\n} = {}) {\n  from = pathResolve(from);\n\n  const stat = statOrNullHelper(from, options.preserveSymlinks);\n  if (! stat) {\n    return;\n  }\n\n  if (stat.isDirectory()) {\n    mkdir_p(to, 0o755);\n\n    readdir(from).forEach(f => {\n      if (options.ignore &&\n          options.ignore.some(pattern => f.match(pattern))) {\n        return;\n      }\n\n      const fullFrom = pathJoin(from, f);\n\n      if (options.transformFilename) {\n        f = options.transformFilename(f);\n      }\n\n      cp_r(\n        fullFrom,\n        pathJoin(to, f),\n        options\n      );\n    })\n\n    return;\n  }\n\n  mkdir_p(pathDirname(to));\n\n  if (stat.isSymbolicLink()) {\n    symlinkWithOverwrite(readlink(from), to);\n\n  } else if (options.transformContents) {\n    writeFile(to, options.transformContents(\n      readFile(from),\n      pathBasename(from)\n    ), {\n      // Create the file as readable and writable by everyone, and\n      // executable by everyone if the original file is executable by\n      // owner. (This mode will be modified by umask.) We don't copy the\n      // mode *directly* because this function is used by 'meteor create'\n      // which is copying from the read-only tools tree into a writable app.\n      mode: (stat.mode & 0o100) ? 0o777 : 0o666,\n    });\n\n  } else {\n    // Note: files.copyFile applies the same stat.mode logic as above.\n    copyFile(from, to);\n  }\n}\n\n// create a symlink, overwriting the target link, file, or directory\n// if it exists\nexport const symlinkWithOverwrite =\nProfile(\"files.symlinkWithOverwrite\", function symlinkWithOverwrite(\n  source: string,\n  target: string,\n) {\n  const args: [string, string, \"junction\"?] = [source, target];\n\n  if (process.platform === \"win32\") {\n    const absoluteSource = pathResolve(target, source);\n\n    if (stat(absoluteSource).isDirectory()) {\n      args[2] = \"junction\";\n    }\n  }\n\n  try {\n    symlink(...args);\n  } catch (e) {\n    if (e.code === \"EEXIST\") {\n      function normalizePath(path: string) {\n        return convertToOSPath(path).replace(/[\\/\\\\]$/, \"\")\n      }\n\n      if (lstat(target).isSymbolicLink() &&\n          normalizePath(readlink(target)) === normalizePath(source)) {\n        // If the target already points to the desired source, we don't\n        // need to do anything.\n        return;\n      }\n      // overwrite existing link, file, or directory\n      rm_recursive(target);\n      symlink(...args);\n    } else {\n      throw e;\n    }\n  }\n})\n\n/**\n * Get every path in a directory recursively, treating symlinks as files\n * @param  {String} dir     The directory to walk, either relative to options.cwd or completely absolute\n * @param  {Object} options Some options\n * @param {String} options.cwd The directory that paths should be relative to\n * @param {String[]} options.output An array to push results to\n * @return {String[]}         All of the paths in the directory recursively\n */\nexport function getPathsInDir(dir: string, options: {\n  cwd?: string;\n  output?: string[];\n}) {\n  // Don't let this function yield so that the file system doesn't get changed\n  // underneath us\n  return fiberHelpers.noYieldsAllowed(function () {\n    var cwd = options.cwd || convertToStandardPath(process.cwd());\n\n    if (! exists(cwd)) {\n      throw new Error(\"Specified current working directory doesn't exist: \" +\n        cwd);\n    }\n\n    const absoluteDir = pathResolve(cwd, dir);\n\n    if (! exists(absoluteDir)) {\n      // There are no paths in this dir, so don't do anything\n      return;\n    }\n\n    const output = options.output || [];\n\n    function pathIsDirectory(path: string) {\n      var stat = lstat(path);\n      return stat.isDirectory();\n    }\n\n    readdir(absoluteDir).forEach(entry => {\n      const newPath = pathJoin(dir, entry);\n      const newAbsPath = pathJoin(absoluteDir, entry);\n\n      output.push(newPath);\n\n      if (pathIsDirectory(newAbsPath)) {\n        getPathsInDir(newPath, {\n          cwd: cwd,\n          output: output\n        });\n      }\n    });\n\n    return output;\n  });\n}\n\nexport function findPathsWithRegex(\n  dir: string,\n  regex: RegExp,\n  options: {\n    cwd: string;\n  },\n) {\n  return getPathsInDir(dir, {\n    cwd: options.cwd\n  }).filter(function (path: string) {\n    return path.match(regex);\n  });\n}\n\n// Make a temporary directory. Returns the path to the newly created\n// directory. Only the current user is allowed to read or write the\n// files in the directory (or add files to it). The directory will\n// be cleaned up on exit.\nconst tempDirs = Object.create(null);\nexport function mkdtemp(prefix: string): string {\n  function make(): string {\n    prefix = prefix || 'mt-';\n    // find /tmp\n    let tmpDir: string | undefined;\n    ['TMPDIR', 'TMP', 'TEMP'].some(t => {\n      const value = process.env[t];\n      if (value) {\n        tmpDir = value;\n        return true;\n      }\n    });\n\n    if (! tmpDir && process.platform !== 'win32') {\n      tmpDir = '/tmp';\n    }\n\n    if (! tmpDir) {\n      throw new Error(\"Couldn't create a temporary directory.\");\n    }\n\n    tmpDir = realpath(tmpDir);\n\n    // make the directory. give it 3 tries in case of collisions from\n    // crappy random.\n    var tries = 3;\n    while (tries > 0) {\n      const dirPath = pathJoin(\n        tmpDir,\n        prefix + (Math.random() * 0x100000000 + 1).toString(36),\n      );\n      try {\n        mkdir(dirPath, 0o700);\n        return dirPath;\n      } catch (err) {\n        tries--;\n      }\n    }\n    throw new Error(\"failed to make temporary directory in \" + tmpDir);\n  };\n  const dir = make();\n  tempDirs[dir] = true;\n  return dir;\n}\n\n// Call this if you're done using a temporary directory. It will asynchronously\n// be deleted.\nexport function freeTempDir(dir: string) {\n  if (! tempDirs[dir]) {\n    throw Error(\"not a tracked temp dir: \" + dir);\n  }\n\n  if (process.env.METEOR_SAVE_TMPDIRS) {\n    return;\n  }\n\n  return rm_recursive_async(dir).then(() => {\n    // Delete tempDirs[dir] only when the removal finishes, so that the\n    // cleanup.onExit handler can attempt the removal synchronously if it\n    // fires in the meantime.\n    delete tempDirs[dir];\n  }, error => {\n    // Leave tempDirs[dir] in place so the cleanup.onExit handler can try\n    // to delete it again when the process exits.\n    console.log(error);\n  });\n}\n\nif (! process.env.METEOR_SAVE_TMPDIRS) {\n  cleanup.onExit(function () {\n    Object.keys(tempDirs).forEach(dir => {\n      delete tempDirs[dir];\n      try {\n        rm_recursive(dir);\n      } catch (err) {\n        // Don't crash and print a stack trace because we failed to delete\n        // a temp directory. This happens sometimes on Windows and seems\n        // to be unavoidable.\n      }\n    });\n  });\n}\n\ntype TarOptions = {\n  verbose?: boolean;\n  forceConvert?: boolean;\n}\n\n// Takes a buffer containing `.tar.gz` data and extracts the archive\n// into a destination directory. destPath should not exist yet, and\n// the archive should contain a single top-level directory, which will\n// be renamed atomically to destPath.\nexport function extractTarGz(\n  buffer: Buffer,\n  destPath: string,\n  options: TarOptions = {},\n) {\n  const parentDir = pathDirname(destPath);\n  const tempDir = pathJoin(parentDir, '.tmp' + utils.randomToken());\n  mkdir_p(tempDir);\n\n  if (! hasOwnProperty.call(options, \"verbose\")) {\n    options.verbose = require(\"../console/console.js\").Console.verbose;\n  }\n\n  const startTime = +new Date;\n\n  let promise = process.platform === \"win32\"\n    ? tryExtractWithNative7z(buffer, tempDir, options)\n    : tryExtractWithNativeTar(buffer, tempDir, options)\n\n  promise = promise.catch(\n    () => tryExtractWithNpmTar(buffer, tempDir, options)\n  );\n\n  promise.await();\n\n  // succeed!\n  const topLevelOfArchive = readdir(tempDir)\n    // On Windows, the 7z.exe tool sometimes creates an auxiliary\n    // PaxHeader directory.\n    .filter(file => ! file.startsWith(\"PaxHeader\"));\n\n  if (topLevelOfArchive.length !== 1) {\n    throw new Error(\n      \"Extracted archive '\" + tempDir + \"' should only contain one entry\");\n  }\n\n  const extractDir = pathJoin(tempDir, topLevelOfArchive[0]);\n  rename(extractDir, destPath);\n  rm_recursive(tempDir);\n\n  if (options.verbose) {\n    console.log(\"Finished extracting in\", Date.now() - startTime, \"ms\");\n  }\n}\n\nfunction ensureDirectoryEmpty(dir: string) {\n  readdir(dir).forEach(file => {\n    rm_recursive(pathJoin(dir, file));\n  });\n}\n\nfunction tryExtractWithNativeTar(\n  buffer: Buffer,\n  tempDir: string,\n  options: TarOptions = {},\n) {\n  ensureDirectoryEmpty(tempDir);\n\n  if (options.forceConvert) {\n    return Promise.reject(new Error(\n      \"Native tar cannot convert colons in package names\"));\n  }\n\n  return new Promise((resolve, reject) => {\n    const flags = options.verbose ? \"-xzvf\" : \"-xzf\";\n    const tarProc = spawn(\"tar\", [flags, \"-\"], {\n      cwd: convertToOSPath(tempDir),\n      stdio: options.verbose ? [\n        \"pipe\", // Always need to write to tarProc.stdin.\n        process.stdout,\n        process.stderr\n      ] : \"pipe\",\n    });\n\n    tarProc.on(\"error\", reject);\n    tarProc.on(\"exit\", resolve);\n\n    if (tarProc.stdin) {\n      tarProc.stdin.write(buffer);\n      tarProc.stdin.end();\n    }\n  });\n}\n\nfunction tryExtractWithNative7z(\n  buffer: Buffer,\n  tempDir: string,\n  options: TarOptions = {},\n) {\n  ensureDirectoryEmpty(tempDir);\n\n  if (options.forceConvert) {\n    return Promise.reject(new Error(\n      \"Native 7z.exe cannot convert colons in package names\"));\n  }\n\n  const exeOSPath = convertToOSPath(pathJoin(getCurrentNodeBinDir(), \"7z.exe\"));\n  const tarGzBasename = \"out.tar.gz\";\n  const spawnOptions = {\n    cwd: convertToOSPath(tempDir),\n    stdio: (options.verbose ? \"inherit\" : \"pipe\") as (\"inherit\" | \"pipe\"),\n  };\n\n  writeFile(pathJoin(tempDir, tarGzBasename), buffer);\n\n  return new Promise((resolve, reject) => {\n    spawn(exeOSPath, [\n      \"x\", \"-y\", tarGzBasename\n    ], spawnOptions)\n      .on(\"error\", reject)\n      .on(\"exit\", resolve);\n\n  }).then(code => {\n    assert.strictEqual(code, 0);\n\n    let tarBasename: string;\n    const foundTar = readdir(tempDir).some(file => {\n      if (file !== tarGzBasename) {\n        tarBasename = file;\n        return true;\n      }\n    });\n\n    assert.ok(foundTar, \"failed to find .tar file\");\n\n    function cleanUp() {\n      unlink(pathJoin(tempDir, tarGzBasename));\n      unlink(pathJoin(tempDir, tarBasename));\n    }\n\n    return new Promise((resolve, reject) => {\n      spawn(exeOSPath, [\n        \"x\", \"-y\", tarBasename\n      ], spawnOptions)\n        .on(\"error\", reject)\n        .on(\"exit\", resolve);\n\n    }).then(code => {\n      cleanUp();\n      return code;\n    }, error => {\n      cleanUp();\n      throw error;\n    });\n  });\n}\n\nfunction tryExtractWithNpmTar(\n  buffer: Buffer,\n  tempDir: string,\n  options: TarOptions = {},\n) {\n  ensureDirectoryEmpty(tempDir);\n\n  const tar = require(\"tar\");\n  const zlib = require(\"zlib\");\n\n  return new Promise((resolve, reject) => {\n    const gunzip = zlib.createGunzip().on('error', reject);\n    const extractor = new tar.Extract({\n      path: convertToOSPath(tempDir)\n    }).on('entry', function (e: any) {\n      if (process.platform === \"win32\" || options.forceConvert) {\n        // On Windows, try to convert old packages that have colons in\n        // paths by blindly replacing all of the paths. Otherwise, we\n        // can't even extract the tarball\n        e.path = colonConverter.convert(e.path);\n      }\n    }).on('error', reject)\n      .on('end', resolve);\n\n    // write the buffer to the (gunzip|untar) pipeline; these calls\n    // cause the tar to be extracted to disk.\n    gunzip.pipe(extractor);\n    gunzip.write(buffer);\n    gunzip.end();\n  });\n}\n\n// In the same fashion as node-pre-gyp does, add the executable\n// bit but only if the read bit was present.  Same as:\n// https://github.com/mapbox/node-pre-gyp/blob/7a28f4b0f562ba4712722fefe4eeffb7b20fbf7a/lib/install.js#L71-L77\n// and others reported in: https://github.com/npm/node-tar/issues/7\nfunction addExecBitWhenReadBitPresent(fileMode: number) {\n  return fileMode |= (fileMode >>> 2) & 0o111;\n}\n\n// Tar-gzips a directory, returning a stream that can then be piped as\n// needed.  The tar archive will contain a top-level directory named\n// after dirPath.\nexport function createTarGzStream(dirPath: string) {\n  const tar = require(\"tar\");\n  const fstream = require('fstream');\n  const zlib = require(\"zlib\");\n\n  // Create a segment of the file path which we will look for to\n  // identify exactly what we think is a \"bin\" file (that is, something\n  // which should be expected to work within the context of an\n  // 'npm run-script').\n  const binPathMatch = [\"\", \"node_modules\", \".bin\", \"\"].join(path.sep);\n\n  // Don't use `{ path: dirPath, type: 'Directory' }` as an argument to\n  // fstream.Reader. This triggers a collection of odd behaviors in fstream\n  // (which might be bugs or might just be weirdnesses).\n  //\n  // First, if we pass an object with `type: 'Directory'` as an argument, then\n  // the resulting tarball has no entry for the top-level directory, because\n  // the reader emits an entry (with just the path, no permissions or other\n  // properties) before the pipe to gzip is even set up, so that entry gets\n  // lost. Even if we pause the streams until all the pipes are set up, we'll\n  // get the entry in the tarball for the top-level directory without\n  // permissions or other properties, which is problematic. Just passing\n  // `dirPath` appears to cause `fstream` to stat the directory before emitting\n  // an entry for it, so the pipes are set up by the time the entry is emitted,\n  // and the entry has all the right permissions, etc. from statting it.\n  //\n  // The second weird behavior is that we need an entry for the top-level\n  // directory in the tarball to untar it with npm `tar`. (GNU tar, in\n  // contrast, appears to have no problems untarring tarballs without entries\n  // for the top-level directory inside them.) The problem is that, without an\n  // entry for the top-level directory, `fstream` will create the directory\n  // with the same permissions as the first file inside it. This manifests as\n  // an EACCESS when untarring if the first file inside the top-level directory\n  // is not writeable.\n  const fileStream = fstream.Reader({\n    path: convertToOSPath(dirPath),\n    filter(entry: any) {\n      if (process.platform !== \"win32\") {\n        return true;\n      }\n\n      // Refuse to create a directory that isn't listable. Tarballs\n      // created on Windows will have non-executable directories (since\n      // executable isn't a thing in Windows directory permissions), and\n      // so the resulting extracted directories will not be listable on\n      // Linux/Mac unless we explicitly make them executable. We think\n      // this should really be an option that you pass to node tar, but\n      // setting it in an 'entry' handler is the same strategy that npm\n      // does, so we do that here too.\n      if (entry.type === \"Directory\") {\n        entry.props.mode = addExecBitWhenReadBitPresent(entry.props.mode);\n      }\n\n      // In a similar way as for directories, but only if is in a path\n      // location that is expected to be executable (npm \"bin\" links)\n      if (entry.type === \"File\" && entry.path.indexOf(binPathMatch) > -1) {\n        entry.props.mode = addExecBitWhenReadBitPresent(entry.props.mode);\n      }\n\n      return true;\n    }\n  });\n\n  return fileStream.pipe(tar.Pack({\n    noProprietary: true,\n  })).pipe(zlib.createGzip());\n}\n\n// Tar-gzips a directory into a tarball on disk, synchronously.\n// The tar archive will contain a top-level directory named after dirPath.\nexport const createTarball = Profile(function (_: string, tarball: string) {\n  return \"files.createTarball \" + pathBasename(tarball);\n}, function (dirPath: string, tarball: string) {\n  const out = createWriteStream(tarball);\n  new Promise(function (resolve, reject) {\n    out.on('error', reject);\n    out.on('close', resolve);\n    createTarGzStream(dirPath).pipe(out);\n  }).await();\n});\n\n// Use this if you'd like to replace a directory with another\n// directory as close to atomically as possible. It's better than\n// recursively deleting the target directory first and then\n// renaming. (Failure modes here include \"there's a brief moment where\n// toDir does not exist\" and \"you can end up with garbage directories\n// sitting around\", but not \"there's any time where toDir exists but\n// is in a state other than initial or final\".)\nexport const renameDirAlmostAtomically =\nProfile(\"files.renameDirAlmostAtomically\", (fromDir: string, toDir: string) => {\n  const garbageDir = pathJoin(\n    pathDirname(toDir),\n    // Begin the base filename with a '.' character so that it can be\n    // ignored by other directory-scanning code.\n    `.${pathBasename(toDir)}-garbage-${utils.randomToken()}`,\n  );\n\n  // Get old dir out of the way, if it exists.\n  let cleanupGarbage = false;\n  let forceCopy = false;\n  try {\n    rename(toDir, garbageDir);\n    cleanupGarbage = true;\n  } catch (e) {\n    if (e.code === 'EXDEV') {\n      // Some (notably Docker) file systems will fail to do a seemingly\n      // harmless operation, such as renaming, on what is apparently the same\n      // file system.  AUFS will do this even if the `fromDir` and `toDir`\n      // are on the same layer, and OverlayFS will fail if the `fromDir` and\n      // `toDir` are on different layers.  In these cases, we will not be\n      // atomic and will need to do a recursive copy.\n      forceCopy = true;\n    } else if (e.code !== 'ENOENT') {\n      // No such file or directory is okay, but anything else is not.\n      throw e;\n    }\n  }\n\n  if (! forceCopy) {\n    try {\n      rename(fromDir, toDir);\n    } catch (e) {\n      // It's possible that there may not have been a `toDir` to have\n      // advanced warning about this, so we're prepared to handle it again.\n      if (e.code === 'EXDEV') {\n        forceCopy = true;\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  // If we've been forced to jeopardize our atomicity due to file-system\n  // limitations, we'll resort to copying.\n  if (forceCopy) {\n    rm_recursive(toDir);\n    cp_r(fromDir, toDir, {\n      preserveSymlinks: true,\n    });\n  }\n\n  // ... and take out the trash.\n  if (cleanupGarbage) {\n    // We don't care about how long this takes, so we'll let it go async.\n    rm_recursive_async(garbageDir);\n  }\n});\n\nexport const writeFileAtomically =\nProfile(\"files.writeFileAtomically\", function (filename: string, contents: string | Buffer) {\n  const parentDir = pathDirname(filename);\n  mkdir_p(parentDir);\n\n  const tmpFile = pathJoin(\n    parentDir,\n    '.' + pathBasename(filename) + '.' + utils.randomToken()\n  );\n\n  writeFile(tmpFile, contents);\n  rename(tmpFile, filename);\n});\n\n// Like fs.symlinkSync, but creates a temporay link and renames it over the\n// file; this means it works even if the file already exists.\n// Do not use this function on Windows, it won't work.\nexport function symlinkOverSync(linkText: string, file: string) {\n  file = pathResolve(file);\n  const tmpSymlink = pathJoin(\n    pathDirname(file),\n    \".\" + pathBasename(file) + \".tmp\" + utils.randomToken());\n  symlink(linkText, tmpSymlink);\n  rename(tmpSymlink, file);\n}\n\n// Return the result of evaluating `code` using\n// `runInThisContext`. `code` will be wrapped in a closure. You can\n// pass additional values to bind in the closure in `options.symbols`,\n// the keys being the symbols to bind and the values being their\n// values. `options.filename` is the filename to use in exceptions\n// that come from inside this code. `options.sourceMap` is an optional\n// source map that represents the file.\n//\n// The really special thing about this function is that if a parse\n// error occurs, we will raise an exception of type\n// files.FancySyntaxError, from which you may read 'message', 'file',\n// 'line', and 'column' attributes ... v8 is normally reluctant to\n// reveal this information but will write it to stderr if you pass it\n// an undocumented flag. Unforunately though node doesn't have dup2 so\n// we can't intercept the write. So instead we use a completely\n// different parser with a better error handling API. Ah well.  The\n// underlying V8 issue is:\n//   https://code.google.com/p/v8/issues/detail?id=1281\nexport function runJavaScript(code: string, {\n  symbols = Object.create(null),\n  filename = \"<anonymous>\",\n  sourceMap,\n  sourceMapRoot,\n}: {\n  symbols: Record<string, any>;\n  filename: string;\n  sourceMap?: object;\n  sourceMapRoot?: string;\n}) {\n  return Profile.time('runJavaScript ' + filename, () => {\n    const keys: string[] = [], values: any[] = [];\n    // don't assume that _.keys and _.values are guaranteed to\n    // enumerate in the same order\n    _.each(symbols, function (value: any, name: string) {\n      keys.push(name);\n      values.push(value);\n    });\n\n    let stackFilename = filename;\n    if (sourceMap) {\n      // We want to generate an arbitrary filename that we use to associate the\n      // file with its source map.\n      stackFilename = \"<runJavaScript-\" + nextStackFilenameCounter++ + \">\";\n    }\n\n    const chunks = [];\n    const header = \"(function(\" + keys.join(',') + \"){\";\n    chunks.push(header);\n    if (sourceMap) {\n      chunks.push(sourcemap.SourceNode.fromStringWithSourceMap(\n        code, new sourcemap.SourceMapConsumer(sourceMap)));\n    } else {\n      chunks.push(code);\n    }\n    // \\n is necessary in case final line is a //-comment\n    chunks.push(\"\\n})\");\n\n    let wrapped;\n    let parsedSourceMap = null;\n    if (sourceMap) {\n      const results = new sourcemap.SourceNode(\n        null, null, null, chunks\n      ).toStringWithSourceMap({\n        file: stackFilename\n      });\n      wrapped = results.code;\n      parsedSourceMap = results.map.toJSON();\n      if (sourceMapRoot) {\n        // Add the specified root to any root that may be in the file.\n        parsedSourceMap.sourceRoot = pathJoin(\n          sourceMapRoot, parsedSourceMap.sourceRoot || '');\n      }\n      // source-map-support doesn't ever look at the sourcesContent field, so\n      // there's no point in keeping it in memory.\n      delete parsedSourceMap.sourcesContent;\n      parsedSourceMaps[stackFilename] = parsedSourceMap;\n    } else {\n      wrapped = chunks.join('');\n    };\n\n    try {\n      // See #runInThisContext\n      //\n      // XXX it'd be nice to runInNewContext so that the code can't mess\n      // with our globals, but objects that come out of runInNewContext\n      // have bizarro antimatter prototype chains and break 'instanceof\n      // Array'. for now, steer clear\n      //\n      // Pass 'true' as third argument if we want the parse error on\n      // stderr (which we don't).\n      var script = require('vm').createScript(wrapped, stackFilename);\n    } catch (nodeParseError) {\n      if (!(nodeParseError instanceof SyntaxError)) {\n        throw nodeParseError;\n      }\n      // Got a parse error. Unfortunately, we can't actually get the\n      // location of the parse error from the SyntaxError; Node has some\n      // hacky support for displaying it over stderr if you pass an\n      // undocumented third argument to stackFilename, but that's not\n      // what we want. See\n      //    https://github.com/joyent/node/issues/3452\n      // for more information. One thing to try (and in fact, what an\n      // early version of this function did) is to actually fork a new\n      // node to run the code and parse its output. We instead run an\n      // entirely different JS parser, from the Babel project, but\n      // which at least has a nice API for reporting errors.\n      const { parse } = require('meteor-babel');\n      try {\n        parse(wrapped, { strictMode: false });\n      } catch (parseError) {\n        if (typeof parseError.loc !== \"object\") {\n          throw parseError;\n        }\n\n        const err = new FancySyntaxError;\n        err.message = parseError.message;\n\n        if (parsedSourceMap) {\n          // XXX this duplicates code in computeGlobalReferences\n          var consumer2 = new sourcemap.SourceMapConsumer(parsedSourceMap);\n          var original = consumer2.originalPositionFor(parseError.loc);\n          if (original.source) {\n            err.file = original.source;\n            err.line = original.line;\n            err.column = original.column;\n            throw err;\n          }\n        }\n\n        err.file = filename;  // *not* stackFilename\n        err.line = parseError.loc.line;\n        err.column = parseError.loc.column;\n\n        // adjust errors on line 1 to account for our header\n        if (err.line === 1 && typeof err.column === \"number\") {\n          err.column -= header.length;\n        }\n\n        throw err;\n      }\n\n      // What? Node thought that this was a parse error and Babel didn't?\n      // Eh, just throw Node's error and don't care too much about the line\n      // numbers being right.\n      throw nodeParseError;\n    }\n\n    return buildmessage.markBoundary(\n      script.runInThisContext()\n    ).apply(null, values);\n  });\n}\n\n// - message: an error message from the parser\n// - file: filename\n// - line: 1-based\n// - column: 1-based\nexport class FancySyntaxError {\n  public file?: string;\n  public line?: number;\n  public column?: number;\n  constructor(public message?: string) {}\n}\n\nexport class OfflineError {\n  constructor(public error: Error) {}\n  toString() {\n    return \"[Offline: \" + this.error.toString() + \"]\";\n  }\n}\n\n// Like files.readdir, but skips entries whose names begin with dots, and\n// converts ENOENT to [].\nexport function readdirNoDots(path: string) {\n  try {\n    var entries = readdir(path);\n  } catch (e) {\n    if (e.code === 'ENOENT') {\n      return [];\n    }\n    throw e;\n  }\n  return entries.filter(entry => {\n    return entry && entry[0] !== '.';\n  });\n}\n\n// Read a file in line by line. Returns an array of lines to be\n// processed individually. Throws if the file doesn't exist or if\n// anything else goes wrong.\nexport function getLines(file: string) {\n  var buffer = readFile(file);\n  var lines = exports.splitBufferToLines(buffer);\n\n  // strip blank lines at the end\n  while (lines.length) {\n    var line = lines[lines.length - 1];\n    if (line.match(/\\S/)) {\n      break;\n    }\n    lines.pop();\n  }\n\n  return lines;\n}\n\nexport function splitBufferToLines(buffer: Buffer) {\n  return buffer.toString('utf8').split(/\\r*\\n\\r*/);\n}\n\n// Same as `getLines`, but returns [] if the file doesn't exist.\nexport function getLinesOrEmpty(file: string) {\n  try {\n    return getLines(file);\n  } catch (e) {\n    if (e && e.code === 'ENOENT') {\n      return [];\n    }\n    throw e;\n  }\n}\n\n// Returns null if the file does not exist, otherwise returns the parsed JSON in\n// the file. Throws on errors other than ENOENT (including JSON parse failure).\nexport function readJSONOrNull(file: string) {\n  try {\n    var raw = readFile(file, 'utf8');\n  } catch (e) {\n    if (e && e.code === 'ENOENT') {\n      return null;\n    }\n    throw e;\n  }\n  return JSON.parse(raw);\n}\n\n// Trims whitespace & other filler characters of a line in a project file.\nexport function trimSpaceAndComments(line: string) {\n  var match = line.match(/^([^#]*)#/);\n  if (match) {\n    line = match[1];\n  }\n  return trimSpace(line);\n}\n\n// Trims leading and trailing whilespace in a project file.\nexport function trimSpace(line: string) {\n  return line.replace(/^\\s+|\\s+$/g, '');\n}\n\nexport class KeyValueFile {\n  constructor(public path: string) {}\n\n  set(k: string, v: any) {\n    const data = (this.readAll() || '').toString(\"utf8\");\n    const lines = data.split(/\\n/);\n\n    let found = false;\n    for (let i = 0; i < lines.length; i++) {\n      const trimmed = lines[i].trim();\n      if (trimmed.indexOf(k + '=') == 0) {\n        lines[i] = k + '=' + v;\n        found = true;\n      }\n    }\n    if (!found) {\n      lines.push(k + \"=\" + v);\n    }\n    const newdata = lines.join('\\n') + '\\n';\n    writeFile(this.path, newdata, 'utf8');\n  }\n\n  private readAll() {\n    if (exists(this.path)) {\n      return readFile(this.path, 'utf8');\n    } else {\n      return null;\n    }\n  }\n}\n\nexport function getHomeDir() {\n  if (process.platform === \"win32\") {\n    const MI = process.env.METEOR_INSTALLATION;\n    if (typeof MI === \"string\") {\n      return pathDirname(convertToStandardPath(MI));\n    }\n  }\n  return process.env.HOME;\n}\n\nexport function currentEnvWithPathsAdded(...paths: string[]) {\n  const env = {...process.env};\n\n  let pathPropertyName;\n  if (process.platform === \"win32\") {\n    // process.env allows for case insensitive access on Windows, but copying it\n    // creates a normal JavaScript object with case sensitive property access.\n    // This leads to problems, because we would be adding a PATH property instead\n    // of setting Path for instance.\n    // We want to make sure we're setting the right property, so we\n    // lookup the property name case insensitively ourselves.\n    pathPropertyName = _.find(Object.keys(env), (key: string) => {\n      return key.toUpperCase() === 'PATH';\n    });\n    if (!pathPropertyName) {\n      pathPropertyName = 'Path';\n    }\n  } else {\n    pathPropertyName = 'PATH';\n  }\n\n  const convertedPaths = paths.map(path => convertToOSPath(path));\n  let pathDecomposed = (env[pathPropertyName] || \"\").split(pathOsDelimiter);\n  pathDecomposed.unshift(...convertedPaths);\n\n  env[pathPropertyName] = pathDecomposed.join(pathOsDelimiter);\n  return env;\n}\n\n// add .bat extension to link file if not present\nfunction ensureBatExtension(p: string) {\n  return p.endsWith(\".bat\") ? p : p + \".bat\";\n}\n\n// Windows-only, generates a bat script that calls the destination bat script\nexport function _generateScriptLinkToMeteorScript(scriptLocation: string) {\n  const scriptLocationIsAbsolutePath = scriptLocation.match(/^\\//);\n  const scriptLocationConverted = scriptLocationIsAbsolutePath\n    ? convertToWindowsPath(scriptLocation)\n    : \"%~dp0\\\\\" + convertToWindowsPath(scriptLocation);\n\n  return [\n    \"@echo off\",\n    \"SETLOCAL\",\n    \"SET METEOR_INSTALLATION=%~dp0%\",\n\n    // always convert to Windows path since this function can also be\n    // called on Linux or Mac when we are building bootstrap tarballs\n    \"\\\"\" + scriptLocationConverted + \"\\\" %*\",\n    \"ENDLOCAL\",\n\n    // always exit with the same exit code as the child script\n    \"EXIT /b %ERRORLEVEL%\",\n\n    // add a comment with the destination of the link, so it can be read later\n    // by files.readLinkToMeteorScript\n    \"rem \" + scriptLocationConverted,\n  ].join(os.EOL);\n}\n\nexport function _getLocationFromScriptLinkToMeteorScript(script: string | Buffer) {\n  const lines = _.compact(script.toString().split('\\n'));\n\n  let scriptLocation = _.last(lines).replace(/^rem /g, '');\n  let isAbsolute = true;\n\n  if (scriptLocation.match(/^%~dp0/)) {\n    isAbsolute = false;\n    scriptLocation = scriptLocation.replace(/^%~dp0\\\\?/g, '');\n  }\n\n  if (! scriptLocation) {\n    throw new Error('Failed to parse script location from meteor.bat');\n  }\n\n  return convertToPosixPath(scriptLocation, ! isAbsolute);\n}\n\nexport function linkToMeteorScript(\n  scriptLocation: string,\n  linkLocation: string,\n  platform: string,\n) {\n  platform = platform || process.platform;\n\n  if (platform === 'win32') {\n    // Make a meteor batch script that points to current tool\n    linkLocation = ensureBatExtension(linkLocation);\n    scriptLocation = ensureBatExtension(scriptLocation);\n    const script = _generateScriptLinkToMeteorScript(scriptLocation);\n    writeFile(linkLocation, script, { encoding: \"ascii\" });\n  } else {\n    // Symlink meteor tool\n    symlinkOverSync(scriptLocation, linkLocation);\n  }\n}\n\nexport function readLinkToMeteorScript(\n  linkLocation: string,\n  platform = process.platform,\n) {\n  if (platform === 'win32') {\n    linkLocation = ensureBatExtension(linkLocation);\n    const script = readFile(linkLocation);\n    return _getLocationFromScriptLinkToMeteorScript(script);\n  } else {\n    return readlink(linkLocation);\n  }\n}\n\n// The fs.exists method is deprecated in Node v4:\n// https://nodejs.org/api/fs.html#fs_fs_exists_path_callback\nexport function exists(path: string) {\n  return !! statOrNull(path);\n}\n\nexport function readBufferWithLengthAndOffset(\n  filename: string,\n  length: number,\n  offset: number,\n) {\n  const data = Buffer.alloc(length);\n  // Read the data from disk, if it is non-empty. Avoid doing IO for empty\n  // files, because (a) unnecessary and (b) fs.readSync with length 0\n  // throws instead of acting like POSIX read:\n  // https://github.com/joyent/node/issues/5685\n  if (length > 0) {\n    const fd = open(filename, \"r\");\n    try {\n      var count = read(fd, data, 0, length, offset);\n    } finally {\n      close(fd);\n    }\n    if (count !== length) {\n      throw new Error(\"couldn't read entire resource\");\n    }\n  }\n  return data;\n}\n\n// Summary of cross platform file system handling strategy\n\n// There are three main pain points for handling files on Windows: slashes in\n// paths, line endings in text files, and colons/invalid characters in paths.\n\n// 1. Slashes in file paths\n\n//   We have decided to store all paths inside the tool as unix-style paths in\n//   the style of CYGWIN. This means that all paths have forward slashes on all\n//   platforms, and C:\\ is converted to /c/ on Windows.\n\n//   All of the methods in files.js know how to convert from these unixy paths\n//   to whatever type of path the underlying system prefers.\n\n//   The reason we chose this strategy because it was easier to make sure to use\n//   files.js everywhere instead of node's fs than to make sure every part of\n//   the tool correctly uses system-specific path separators. In addition, there\n//   are some parts of the tool where it is very hard to tell which strings are\n//   used as URLs and which are used as file paths. In some cases, a string can\n//   be used as both, meaning it has to have forward slashes no matter what.\n\n// 2. Line endings in text files\n\n//   We have decided to convert all files read by the tool to Unix-style line\n//   endings for the same reasons as slashes above. In many parts of the tool,\n//   we assume that '\\n' is the line separator, and it can be hard to find all\n//   of the places and decide whether it is appropriate to use os.EOL. We do not\n//   convert anything on write. We will wait and see if anyone complains.\n\n// 3. Colons and other invalid characters in file paths\n\n//   This is not handled automatically by files.js. You need to be careful to\n//   escape any colons in package names, etc, before using a string as a file\n//   path.\n\n//   A helpful file to import for this purpose is colon-converter.js, which also\n//   knows how to convert various configuration file formats.\n\ntype wrapFsFuncOptions<TArgs extends any[], TResult> = {\n  cached?: boolean;\n  modifyReturnValue?: (result: TResult) => any;\n  dirty?: (...args: TArgs) => any;\n}\n\nfunction wrapFsFunc<TArgs extends any[], TResult>(\n  fnName: string,\n  fn: (...args: TArgs) => TResult,\n  pathArgIndices: number[],\n  options?: wrapFsFuncOptions<TArgs, TResult>,\n): typeof fn {\n  return Profile(\"files.\" + fnName, function (...args: TArgs) {\n    for (let j = pathArgIndices.length - 1; j >= 0; --j) {\n      const i = pathArgIndices[j];\n      args[i] = convertToOSPath(args[i]);\n    }\n\n    let cacheKey: string | null = null;\n    if (options && options.cached) {\n      const cache = withCacheSlot.getValue();\n      if (cache) {\n        const strings = [fnName];\n        const allStrings = args.every(arg => {\n          if (typeof arg === \"string\") {\n            strings.push(arg);\n            return true;\n          }\n          return false;\n        });\n        if (allStrings) {\n          cacheKey = JSON.stringify(strings);\n          if (hasOwnProperty.call(cache, cacheKey)) {\n            return cache[cacheKey];\n          }\n        }\n      }\n    }\n\n    const result = fn.apply(fs, args);\n\n    if (options && options.dirty) {\n      options.dirty(...args);\n    }\n\n    const finalResult = options && options.modifyReturnValue\n      ? options.modifyReturnValue(result)\n      : result;\n\n    if (cacheKey) {\n      withCacheSlot.getValue()![cacheKey] = finalResult;\n    }\n\n    return finalResult;\n  });\n}\n\nconst withCacheSlot = new Slot<Record<string, any>>();\nexport function withCache<R>(fn: () => R): R {\n  const cache = withCacheSlot.getValue();\n  return cache ? fn() : withCacheSlot.withValue(Object.create(null), fn);\n}\n\nexport const dependOnPath = dep<string>();\n\nfunction wrapDestructiveFsFunc<TArgs extends any[], TResult>(\n  fnName: string,\n  fn: (...args: TArgs) => TResult,\n  pathArgIndices: number[] = [0],\n  options?: wrapFsFuncOptions<TArgs, TResult>,\n): typeof fn {\n  return wrapFsFunc<TArgs, TResult>(fnName, fn, pathArgIndices, {\n    ...options,\n    dirty(...args: TArgs) {\n      pathArgIndices.forEach(i => dependOnPath.dirty(args[i]));\n    }\n  });\n}\n\nexport const readFile = wrapFsFunc(\"readFile\", fs.readFileSync, [0], {\n  modifyReturnValue: function (fileData: Buffer | string) {\n    if (typeof fileData === \"string\") {\n      return convertToStandardLineEndings(fileData);\n    }\n    return fileData;\n  }\n});\n\n// Copies a file, which is expected to exist. Parent directories of \"to\" do not\n// have to exist. Treats symbolic links transparently (copies the contents, not\n// the link itself, and it's an error if the link doesn't point to a file).\nconst wrappedCopyFile = wrapDestructiveFsFunc(\"copyFile\", fs.copyFileSync, [0, 1]);\nexport function copyFile(from: string, to: string, flags = 0) {\n  mkdir_p(pathDirname(pathResolve(to)), 0o755);\n  wrappedCopyFile(from, to, flags);\n  const stat = statOrNull(from);\n  if (stat && stat.isFile()) {\n    // Create the file as readable and writable by everyone, and executable by\n    // everyone if the original file is executably by owner. (This mode will be\n    // modified by umask.) We don't copy the mode *directly* because this function\n    // is used by 'meteor create' which is copying from the read-only tools tree\n    // into a writable app.\n    chmod(to, (stat.mode & 0o100) ? 0o777 : 0o666);\n  }\n}\n\nconst wrappedRename = wrapDestructiveFsFunc(\"rename\", fs.renameSync, [0, 1]);\nexport const rename = isWindowsLikeFilesystem() ? function (from: string, to: string) {\n  // Retries are necessary only on Windows, because the rename call can\n  // fail with EBUSY, which means the file is in use.\n  const osTo = convertToOSPath(to);\n  const startTimeMs = Date.now();\n  const intervalMs = 50;\n  const timeLimitMs = 1000;\n\n  return new Promise((resolve, reject) => {\n    function attempt() {\n      try {\n        // Despite previous failures, the top-level destination directory\n        // may have been successfully created, so we must remove it to\n        // avoid moving the source file *into* the destination directory.\n        rimraf.sync(osTo);\n        wrappedRename(from, to);\n        resolve();\n      } catch (err) {\n        if (err.code !== 'EPERM' && err.code !== 'EACCES') {\n          reject(err);\n        } else if (Date.now() - startTimeMs < timeLimitMs) {\n          setTimeout(attempt, intervalMs);\n        } else {\n          reject(err);\n        }\n      }\n    }\n    attempt();\n  }).catch(error => {\n    if (error.code === 'EPERM' ||\n        error.code === 'EACCESS') {\n      cp_r(from, to, { preserveSymlinks: true });\n      rm_recursive(from);\n    } else {\n      throw error;\n    }\n  }).await();\n} : wrappedRename;\n\n// Warning: doesn't convert slashes in the second 'cache' arg\nexport const realpath =\nwrapFsFunc<[string], string>(\"realpath\", fs.realpathSync, [0], {\n  cached: true,\n  modifyReturnValue: convertToStandardPath,\n});\n\nexport const readdir =\nwrapFsFunc<[string], string[]>(\"readdir\", fs.readdirSync, [0], {\n  cached: true,\n  modifyReturnValue(entries: string[]) {\n    return entries.map(entry => convertToStandardPath(entry));\n  },\n});\n\nexport const appendFile = wrapDestructiveFsFunc(\"appendFile\", fs.appendFileSync);\nexport const chmod = wrapDestructiveFsFunc(\"chmod\", fs.chmodSync);\nexport const close = wrapFsFunc(\"close\", fs.closeSync, []);\nexport const createReadStream = wrapFsFunc(\"createReadStream\", fs.createReadStream, [0]);\nexport const createWriteStream = wrapFsFunc(\"createWriteStream\", fs.createWriteStream, [0]);\nexport const lstat = wrapFsFunc(\"lstat\", fs.lstatSync, [0], { cached: true });\nexport const mkdir = wrapDestructiveFsFunc(\"mkdir\", fs.mkdirSync);\nexport const open = wrapFsFunc(\"open\", fs.openSync, [0]);\nexport const read = wrapFsFunc(\"read\", fs.readSync, []);\nexport const readlink = wrapFsFunc<[string], string>(\"readlink\", fs.readlinkSync, [0]);\nexport const rmdir = wrapDestructiveFsFunc(\"rmdir\", fs.rmdirSync);\nexport const stat = wrapFsFunc(\"stat\", fs.statSync as (path: PathLike) => Stats, [0], { cached: true });\nexport const symlink = wrapFsFunc(\"symlink\", fs.symlinkSync, [0, 1]);\nexport const unlink = wrapDestructiveFsFunc(\"unlink\", fs.unlinkSync);\nexport const write = wrapFsFunc(\"write\", fs.writeSync, []);\nexport const writeFile = wrapDestructiveFsFunc(\"writeFile\", fs.writeFileSync);\n\ntype StatListener = (\n  current: Stats,\n  previous: Stats,\n) => void;\n\ntype StatWatcherOptions = {\n  persistent?: boolean;\n  interval?: number;\n};\n\ninterface StatWatcher extends EventEmitter {\n  stop: () => void;\n  start: (\n    filename: string,\n    options: StatWatcherOptions,\n    listener: StatListener,\n  ) => void;\n}\n\nexport const watchFile = wrapFsFunc(\"watchFile\", (\n  filename: string,\n  options: StatWatcherOptions,\n  listener: StatListener,\n) => {\n  return fs.watchFile(\n    filename,\n    options,\n    listener,\n  ) as any as StatWatcher;\n}, [0]);\n\nexport const unwatchFile = wrapFsFunc(\"unwatchFile\", (\n  filename: string,\n  listener: StatListener,\n) => {\n  return fs.unwatchFile(filename, listener);\n}, [0]);\n"],"sourceRoot":"","file":"tools/fs/files.js.map"}