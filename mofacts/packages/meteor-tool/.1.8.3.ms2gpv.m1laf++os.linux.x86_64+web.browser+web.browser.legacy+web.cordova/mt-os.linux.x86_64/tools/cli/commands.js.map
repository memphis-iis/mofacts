{"version":3,"sources":["/tools/cli/commands.js"],"names":["_objectSpread","module","link","default","v","export","parseServerOptionsForRunCommand","parseRunTargets","ensureDevBundleDependencies","CordovaRunner","iOSRunTarget","AndroidRunTarget","EXAMPLE_REPOSITORIES","main","require","_","files","deploy","buildmessage","auth","authClient","config","runLog","utils","httpHelpers","archinfo","catalog","stats","Console","projectContextModule","release","Profile","DEPLOY_ARCH","DEFAULT_PORT","__dirnameConverted","convertToStandardPath","__dirname","qualifySitename","site","indexOf","length","substring","showInvalidArchMsg","arch","info","each","keys","VALID_ARCHITECTURES","va","command","options","indent","runTargets","parsedServerUrl","parsePortOption","port","mobileServerOption","parsedMobileServerUrl","parseMobileServerOption","isRunOnDeviceRequested","any","runTarget","isDevice","detectMobileServerUrl","parsedCordovaServerPort","parseCordovaServerPortOption","portOption","parseUrl","error","ExitWithCode","optionName","protocol","hostname","cordovaServerPortOption","parseInt","myIp","ipAddress","message","targets","map","target","targetParts","split","platform","registerCommand","name","requiresRelease","pretty","catalogRefresh","Refresh","Never","rawInfo","host","current","appDir","Error","isCheckout","gitLog","runGitInCheckout","trim","getDisplayName","inCheckout","getToolsVersion","inspectOptions","type","String","implicitValue","normalizeInspectOptions","result","Object","create","has","console","log","inspect","runCommandOptions","requiresApp","maxArgs","Infinity","short","Boolean","production","settings","verbose","once","extend","doRunCommand","setVerbose","args","includePackages","projectContext","ProjectContext","projectDir","allowIncompatibleUpdate","lintAppAndLocalPackages","captureAndExit","readProjectMetadata","explicit","releaseFile","fullReleaseName","displayReleaseName","appHost","appPort","appPortMatch","match","warn","setRawLogs","webArchs","platformList","getWebArchs","isEmpty","push","cordovaRunner","prepareCordovaProject","CordovaProject","cordovaProject","settingsFile","mobileServerUrl","formatUrl","cordovaServerPort","jobHasMessages","checkPlatformsForRunTargets","runAll","run","proxyPort","proxyHost","buildOptions","minifyMode","buildMode","rootUrl","process","env","ROOT_URL","mongoUrl","MONGO_URL","oplogUrl","MONGO_OPLOG_URL","noReleaseCheck","METEOR_NO_RELEASE_CHECK","connect","convertToOSPath","getMeteorShellDirectory","WaitForExit","list","example","package","bare","minimal","full","react","typescript","packageName","ShowUsage","validatePackageNameOrExit","detailedColonExplanation","fsName","packageDir","pathResolve","inYourApp","exists","transform","x","xn","replace","relString","rel","official","getDefaultReleaseVersion","version","noPrefix","cp_r","pathJoin","transformFilename","f","transformContents","contents","test","Buffer","from","toString","ignore","preserveSymlinks","err","displayPackageDir","pathRelative","cwd","path","forced","latestKnown","SpringboardToLatestRelease","repoInfo","branchInfo","branch","repo","branchOption","appPathAsEntered","appPath","findAppDir","appName","pathBasename","nonCodeFileExts","destinationHasCodeFiles","readdir","thisPathCountsAsAFile","filePath","isHidden","stat","isDirectory","ext","pathExtname","contains","toIgnore","skelName","alwaysWritePackageMap","write","projectConstraintsFile","updateReleaseConstraints","_manifest","upgraders","finishedUpgraders","appendUpgraders","allUpgraders","prepareProjectForBuild","install","includeDevDependencies","appNameToDisplay","cmd","text","appPathWithQuotesIfSpaces","url","join","buildCommands","minArgs","debug","directory","architecture","server","headless","Promise","await","buildCommand","hidden","_bundleOnly","setHeadless","bundleArch","serverArchitectures","uniq","packageMapDelta","displayOnConsole","serverOnly","cordovaPlatforms","getCordovaPlatforms","without","buildDir","getProjectLocalDirectory","outputPath","relative","substr","labelWarn","bundlePath","recordPackages","what","bundler","bundleResult","bundle","serverArch","errors","formatMessages","mkdir_p","outputTar","createTarball","exception","rm_recursive","pluginVersionsFromStarManifest","displayNameForPlatform","enterJob","title","pluginVersions","starManifest","prepareFromAppBundle","buildPath","platformOutputPath","prepareForPlatform","buildForPlatform","writeFile","apkPath","copyFile","requiresAppOrPackage","tempProjectDir","mkdtemp","explicitlyAddedLocalPackageDirs","packageMapFilename","forceIncludeCordovaUnibuild","lintPackageWithSourceRoot","initializeCatalog","versionRecord","localCatalog","getVersionBySourceRoot","constraint","parsePackageConstraint","removeAllPackages","addConstraints","displayName","warnings","usedMeteorAccount","findMongoPort","mongoPort","temporaryMongoUrl","maybePrintRegistrationLink","stdin","pause","runMongo","runMongoShell","isRunning","rm_recursive_async","then","password","Number","allowUnrecognizedOptions","delete","deployCommand","rawOptions","deleteApp","loggedIn","isLoggedIn","registerOrLogIn","buildArch","deployPollingTimeoutMs","waitForDeploy","deployResult","bundleAndDeploy","leadingNewline","firstTime","add","transfer","remove","pick","pollForRegistrationCompletion","changeAuthorized","listAuthorized","testCommandOptions","ios","android","doTestCommand","global","testCommandMetadata","intersection","testRunnerAppDir","testAppPath","absTestAppPath","driverPackage","projectContextOptions","projectDirForLocalPackages","code","packagesByPath","filter","p","packagesToAdd","getTestPackageNames","excludedPackages","exclude","some","excluded","unshift","constraintsToAdd","writeIfModified","isAppTest","isTest","projectLocalDir","copyDirIntoTestRunnerApp","allowSymlink","parts","appDirPath","testDirPath","pathDirname","symlink","platformsForRunTargets","runTestAppForPackages","packageNames","packageNamesSpecifiedExplicitly","getAllPackageNames","testPackages","getLatestVersion","testName","recordPackageUsage","disableOplog","testMetadata","banner","selenium","seleniumBrowser","omitPackageMapDeltaDisplayOnFirstRun","forceRebuildPackages","email","loginCommand","overwriteExistingToken","logoutCommand","whoAmICommand","loggedInAccountsConnectionOrPrompt","action","token","getSessionToken","getAccountsDomain","doUsernamePasswordLogin","retry","conn","loggedInAccountsConnection","getAccountsApiUrl","request","method","useSessionHeader","useAuthHeader","body","JSON","parse","response","statusCode","organizations","pluck","username","call","reason","members","changed","slow","galaxy","browserstack","phantom","history","file","junit","retries","selftest","offline","getUrl","e","OfflineError","compileRegexp","str","RegExp","SyntaxError","testRegexp","undefined","fileRegexp","excludeRegexp","listTests","onlyChanged","includeSlowTests","galaxyOnly","clients","puppeteer","runTests","historyLines","listSites","json","minutes","secs","spinner","progress","getCurrentProgressTracker","totalProgress","end","done","i","n","resolve","updateProgress","reportProgress","setTimeout","ething","required","key","stringify"],"mappings":"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","sourcesContent":["var main = require('./main.js');\nvar _ = require('underscore');\nvar files = require('../fs/files');\nvar deploy = require('../meteor-services/deploy.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar auth = require('../meteor-services/auth.js');\nvar authClient = require('../meteor-services/auth-client.js');\nvar config = require('../meteor-services/config.js');\nvar runLog = require('../runners/run-log.js');\nvar utils = require('../utils/utils.js');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar archinfo = require('../utils/archinfo');\nvar catalog = require('../packaging/catalog/catalog.js');\nvar stats = require('../meteor-services/stats.js');\nvar Console = require('../console/console.js').Console;\nvar projectContextModule = require('../project-context.js');\nvar release = require('../packaging/release.js');\n\nconst { Profile } = require(\"../tool-env/profile\");\n\nimport { ensureDevBundleDependencies } from '../cordova/index.js';\nimport { CordovaRunner } from '../cordova/runner.js';\nimport { iOSRunTarget, AndroidRunTarget } from '../cordova/run-targets.js';\n\nimport { EXAMPLE_REPOSITORIES } from './example-repositories.js';\n\n// The architecture used by Meteor Software's hosted servers; it's the\n// architecture used by 'meteor deploy'.\nvar DEPLOY_ARCH = 'os.linux.x86_64';\n\n// The default port that the development server listens on.\nvar DEFAULT_PORT = '3000';\n\n// __dirname - the location of the current executing file\nvar __dirnameConverted = files.convertToStandardPath(__dirname);\n\n// Given a site name passed on the command line (eg, 'mysite'), return\n// a fully-qualified hostname ('mysite.meteor.com').\n//\n// This is fairly simple for now. It appends 'meteor.com' if the name\n// doesn't contain a dot, and it deletes any trailing dots (the\n// technically legal hostname 'mysite.com.' is canonicalized to\n// 'mysite.com').\n//\n// In the future, you should be able to make this default to some\n// other domain you control, rather than 'meteor.com'.\nvar qualifySitename = function (site) {\n  if (site.indexOf(\".\") === -1) {\n    site = site + \".meteor.com\";\n  }\n  while (site.length && site[site.length - 1] === \".\") {\n    site = site.substring(0, site.length - 1);\n  }\n  return site;\n};\n\n// Display a message showing valid Meteor architectures.\nvar showInvalidArchMsg = function (arch) {\n  Console.info(\"Invalid architecture: \" + arch);\n  Console.info(\"The following are valid Meteor architectures:\");\n  _.each(_.keys(archinfo.VALID_ARCHITECTURES), function (va) {\n    Console.info(\n      Console.command(va),\n      Console.options({ indent: 2 }));\n  });\n};\n\n// Utility functions to parse options in run/build/test-packages commands\n\nexport function parseServerOptionsForRunCommand(options, runTargets) {\n  const parsedServerUrl = parsePortOption(options.port);\n\n  // XXX COMPAT WITH 0.9.2.2 -- the 'mobile-port' option is deprecated\n  const mobileServerOption = options['mobile-server'] || options['mobile-port'];\n  let parsedMobileServerUrl;\n  if (mobileServerOption) {\n    parsedMobileServerUrl = parseMobileServerOption(mobileServerOption);\n  } else {\n    const isRunOnDeviceRequested = _.any(runTargets,\n      runTarget => runTarget.isDevice);\n    parsedMobileServerUrl = detectMobileServerUrl(parsedServerUrl,\n      isRunOnDeviceRequested);\n  }\n\n  const parsedCordovaServerPort = parseCordovaServerPortOption(options);\n\n  return { parsedServerUrl, parsedMobileServerUrl, parsedCordovaServerPort };\n}\n\nfunction parsePortOption(portOption) {\n  let parsedServerUrl = utils.parseUrl(portOption);\n\n  if (!parsedServerUrl.port) {\n    Console.error(\"--port must include a port.\");\n    throw new main.ExitWithCode(1);\n  }\n\n  return parsedServerUrl;\n}\n\nfunction parseMobileServerOption(mobileServerOption,\n  optionName = 'mobile-server') {\n  let parsedMobileServerUrl = utils.parseUrl(\n    mobileServerOption,\n    { protocol: 'http' });\n\n  if (!parsedMobileServerUrl.hostname) {\n    Console.error(`--${optionName} must include a hostname.`);\n    throw new main.ExitWithCode(1);\n  }\n\n  return parsedMobileServerUrl;\n}\n\nfunction parseCordovaServerPortOption(options = {}) {\n  const cordovaServerPortOption = options['cordova-server-port'];\n  return cordovaServerPortOption ? parseInt(cordovaServerPortOption, 10) : null;\n}\n\nfunction detectMobileServerUrl(parsedServerUrl, isRunOnDeviceRequested) {\n  // Always try to use an auto-detected IP first\n  try {\n    const myIp = utils.ipAddress();\n    return {\n      protocol: 'http',\n      hostname: myIp,\n      port: parsedServerUrl.port\n    };\n  } catch (error) {\n    // Unless we are being asked to run on a device, use localhost as fallback\n    if (isRunOnDeviceRequested) {\n      Console.error(\n`Error detecting IP address for mobile app to connect to:\n${error.message}\nPlease specify the address that the mobile app should connect\nto with --mobile-server.`);\n      throw new main.ExitWithCode(1);\n    } else {\n      return {\n        protocol: 'http',\n        hostname: 'localhost',\n        port: parsedServerUrl.port\n      };\n    }\n  }\n}\n\nexport function parseRunTargets(targets) {\n  return targets.map((target) => {\n    const targetParts = target.split('-');\n    const platform = targetParts[0];\n    const isDevice = targetParts[1] === 'device';\n\n    if (platform == 'ios') {\n      return new iOSRunTarget(isDevice);\n    } else if (platform == 'android') {\n      return new AndroidRunTarget(isDevice);\n    } else {\n      Console.error(`Unknown run target: ${target}`);\n      throw new main.ExitWithCode(1);\n    }\n  });\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// options that act like commands\n///////////////////////////////////////////////////////////////////////////////\n\n// Prints the Meteor architecture name of this host\nmain.registerCommand({\n  name: '--arch',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  Console.rawInfo(archinfo.host() + \"\\n\");\n});\n\n// Prints the current release in use. Note that if there is not\n// actually a specific release, we print to stderr and exit non-zero,\n// while if there is a release we print to stdout and exit zero\n// (making this useful to scripts).\n// XXX: What does this mean in our new release-free world?\nmain.registerCommand({\n  name: '--version',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (release.current === null) {\n    if (! options.appDir) {\n      throw new Error(\"missing release, but not in an app?\");\n    }\n    Console.error(\n      \"This project was created with a checkout of Meteor, rather than an \" +\n      \"official release, and doesn't have a release number associated with \" +\n      \"it. You can set its release with \" +\n      Console.command(\"'meteor update'\") + \".\");\n    return 1;\n  }\n\n  if (release.current.isCheckout()) {\n    var gitLog = utils.runGitInCheckout(\n      'log',\n      '--format=%h%d', '-n 1').trim();\n    Console.error(\"Unreleased, running from a checkout at \" + gitLog);\n    return 1;\n  }\n\n  Console.info(release.current.getDisplayName());\n});\n\n// Internal use only. For automated testing.\nmain.registerCommand({\n  name: '--long-version',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (files.inCheckout()) {\n    Console.error(\"checkout\");\n    return 1;\n  } else if (release.current === null) {\n    // .meteor/release says \"none\" but not in a checkout.\n    Console.error(\"none\");\n    return 1;\n  } else {\n    Console.rawInfo(release.current.name + \"\\n\");\n    Console.rawInfo(files.getToolsVersion() + \"\\n\");\n    return 0;\n  }\n});\n\n// Internal use only. For automated testing.\nmain.registerCommand({\n  name: '--requires-release',\n  requiresRelease: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// run\n///////////////////////////////////////////////////////////////////////////////\n\nconst inspectOptions = {\n  \"inspect\": { type: String, implicitValue: \"9229\" },\n  \"inspect-brk\": { type: String, implicitValue: \"9229\" },\n};\n\nfunction normalizeInspectOptions(options) {\n  const result = Object.create(null);\n\n  if (_.has(options, \"debug-port\")) {\n    console.log(\n      \"The --debug-port option is deprecated; \" +\n        \"please use --inspect-brk=<port> instead.\"\n    );\n\n    if (! _.has(options, \"inspect-brk\")) {\n      options[\"inspect-brk\"] = options[\"debug-port\"];\n    }\n\n    delete options[\"debug-port\"];\n  }\n\n  if (_.has(options, \"inspect-brk\")) {\n    result.inspect = {\n      port: options[\"inspect-brk\"],\n      \"break\": true,\n    };\n\n    if (_.has(options, \"inspect\")) {\n      console.log(\n        \"Both --inspect and --inspect-brk provided; \" +\n          \"ignoring --inspect.\"\n      );\n\n      delete options.inspect;\n    }\n\n  } else if (_.has(options, \"inspect\")) {\n    result.inspect = {\n      port: options.inspect,\n      \"break\": false,\n    };\n  }\n\n  return result;\n}\n\nvar runCommandOptions = {\n  requiresApp: true,\n  maxArgs: Infinity,\n  options: {\n    port: { type: String, short: \"p\", default: DEFAULT_PORT },\n    'mobile-server': { type: String },\n    'cordova-server-port': { type: String },\n    // XXX COMPAT WITH 0.9.2.2\n    'mobile-port': { type: String },\n    'app-port': { type: String },\n    'debug-port': { type: String },\n    ...inspectOptions,\n    'no-release-check': { type: Boolean },\n    production: { type: Boolean },\n    'raw-logs': { type: Boolean },\n    settings: { type: String, short: \"s\" },\n    verbose: { type: Boolean, short: \"v\" },\n    // With --once, meteor does not re-run the project if it crashes\n    // and does not monitor for file changes. Intentionally\n    // undocumented: intended for automated testing (eg, cli-test.sh),\n    // not end-user use. #Once\n    once: { type: Boolean },\n    // Don't run linter on rebuilds\n    'no-lint': { type: Boolean },\n    // Allow the version solver to make breaking changes to the versions\n    // of top-level dependencies.\n    'allow-incompatible-update': { type: Boolean },\n    'extra-packages': { type: String }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n};\n\nmain.registerCommand(_.extend(\n  { name: 'run' },\n  runCommandOptions\n), doRunCommand);\n\nfunction doRunCommand(options) {\n  Console.setVerbose(!!options.verbose);\n\n  // Additional args are interpreted as run targets\n  const runTargets = parseRunTargets(options.args);\n\n  const { parsedServerUrl, parsedMobileServerUrl, parsedCordovaServerPort } =\n    parseServerOptionsForRunCommand(options, runTargets);\n\n  var includePackages = [];\n  if (options['extra-packages']) {\n    includePackages = options['extra-packages'].trim().split(/\\s*,\\s*/);\n  }\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    allowIncompatibleUpdate: options['allow-incompatible-update'],\n    lintAppAndLocalPackages: !options['no-lint'],\n    includePackages: includePackages,\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    // We're just reading metadata here --- we'll wait to do the full build\n    // preparation until after we've started listening on the proxy, etc.\n    projectContext.readProjectMetadata();\n  });\n\n  if (release.explicit) {\n    if (release.current.name !== projectContext.releaseFile.fullReleaseName) {\n      console.log(\"=> Using %s as requested (overriding %s)\",\n                  release.current.getDisplayName(),\n                  projectContext.releaseFile.displayReleaseName);\n      console.log();\n    }\n  }\n\n  let appHost, appPort;\n  if (options['app-port']) {\n    var appPortMatch = options['app-port'].match(/^(?:(.+):)?([0-9]+)?$/);\n    if (!appPortMatch) {\n      Console.error(\n        \"run: --app-port must be a number or be of the form 'host:port' \",\n        \"where port is a number. Try\",\n        Console.command(\"'meteor help run'\") + \" for help.\");\n      return 1;\n    }\n    appHost = appPortMatch[1] || null;\n    // It's legit to specify `--app-port host:` and still let the port be\n    // randomized.\n    appPort = appPortMatch[2] ? parseInt(appPortMatch[2]) : null;\n  }\n\n  if (options.production) {\n    Console.warn(\n      \"Warning: The --production flag should only be used to simulate production \" +\n      \"bundling for testing purposes. Use meteor build to create a bundle for \" +\n      \"production deployment. See: https://guide.meteor.com/deployment.html\"\n    );\n  }\n\n  if (options['raw-logs']) {\n    runLog.setRawLogs(true);\n  }\n\n  let webArchs = projectContext.platformList.getWebArchs();\n  if (! _.isEmpty(runTargets) ||\n      options['mobile-server']) {\n    if (webArchs.indexOf(\"web.cordova\") < 0) {\n      webArchs.push(\"web.cordova\");\n    }\n  }\n\n  let cordovaRunner;\n  if (!_.isEmpty(runTargets)) {\n\n    function prepareCordovaProject() {\n      import { CordovaProject } from '../cordova/project.js';\n\n      main.captureAndExit('', 'preparing Cordova project', () => {\n        const cordovaProject = new CordovaProject(projectContext, {\n          settingsFile: options.settings,\n          mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n          cordovaServerPort: parsedCordovaServerPort });\n        if (buildmessage.jobHasMessages()) return;\n\n        cordovaRunner = new CordovaRunner(cordovaProject, runTargets);\n        cordovaRunner.checkPlatformsForRunTargets();\n      });\n    }\n\n    ensureDevBundleDependencies();\n    prepareCordovaProject();\n  }\n\n  var runAll = require('../runners/run-all.js');\n  return runAll.run({\n    projectContext: projectContext,\n    proxyPort: parsedServerUrl.port,\n    proxyHost: parsedServerUrl.hostname,\n    appPort: appPort,\n    appHost: appHost,\n    ...normalizeInspectOptions(options),\n    settingsFile: options.settings,\n    buildOptions: {\n      minifyMode: options.production ? 'production' : 'development',\n      buildMode: options.production ? 'production' : 'development',\n      webArchs: webArchs\n    },\n    rootUrl: process.env.ROOT_URL,\n    mongoUrl: process.env.MONGO_URL,\n    oplogUrl: process.env.MONGO_OPLOG_URL,\n    mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n    cordovaServerPort: parsedCordovaServerPort,\n    once: options.once,\n    noReleaseCheck: options['no-release-check'] || process.env.METEOR_NO_RELEASE_CHECK,\n    cordovaRunner: cordovaRunner\n  });\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// debug\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand(_.extend(\n  { name: 'debug' },\n  runCommandOptions\n), function (options) {\n  options[\"inspect-brk\"] = options[\"inspect-brk\"] || \"9229\";\n  return doRunCommand(options);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// shell\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'shell',\n  requiresRelease: false,\n  requiresApp: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (!options.appDir) {\n    Console.error(\n      \"The \" + Console.command(\"'meteor shell'\") + \" command must be run\",\n      \"in a Meteor app directory.\"\n    );\n  } else {\n    var projectContext = new projectContextModule.ProjectContext({\n      projectDir: options.appDir\n    });\n\n    // Convert to OS path here because shell/server.js doesn't know how to\n    // convert paths, since it exists in the app and in the tool.\n    require('../shell-client').connect(\n      files.convertToOSPath(projectContext.getMeteorShellDirectory())\n    );\n\n    throw new main.WaitForExit;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// create\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'create',\n  maxArgs: 1,\n  options: {\n    list: { type: Boolean },\n    example: { type: String },\n    package: { type: Boolean },\n    bare: { type: Boolean },\n    minimal: { type: Boolean },\n    full: { type: Boolean },\n    react: { type: Boolean },\n    typescript: { type: Boolean },\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  // Creating a package is much easier than creating an app, so if that's what\n  // we are doing, do that first. (For example, we don't springboard to the\n  // latest release to create a package if we are inside an app)\n  if (options.package) {\n    var packageName = options.args[0];\n\n    if (options.list || options.example) {\n      Console.error(\"No package examples exist at this time.\");\n      Console.error();\n      throw new main.ShowUsage;\n    }\n\n    if (!packageName) {\n      Console.error(\"Please specify the name of the package.\");\n      throw new main.ShowUsage;\n    }\n\n    utils.validatePackageNameOrExit(\n      packageName, {detailedColonExplanation: true});\n\n    // When we create a package, avoid introducing a colon into the file system\n    // by naming the directory after the package name without the prefix.\n    var fsName = packageName;\n    if (packageName.indexOf(\":\") !== -1) {\n      var split = packageName.split(\":\");\n\n      if (split.length > 2) {\n        // It may seem like this check should be inside package version parser's\n        // validatePackageName, but we decided to name test packages like this:\n        // local-test:prefix:name, so we have to support building packages\n        // with at least two colons. Therefore we will at least try to\n        // discourage people from putting a ton of colons in their package names\n        // here.\n        Console.error(packageName +\n          \": Package names may not have more than one colon.\");\n        return 1;\n      }\n\n      fsName = split[1];\n    }\n\n    var packageDir;\n    if (options.appDir) {\n      packageDir = files.pathResolve(options.appDir, 'packages', fsName);\n    } else {\n      packageDir = files.pathResolve(fsName);\n    }\n\n    var inYourApp = options.appDir ? \" in your app\" : \"\";\n\n    if (files.exists(packageDir)) {\n      Console.error(packageName + \": Already exists\" + inYourApp);\n      return 1;\n    }\n\n    var transform = function (x) {\n      var xn =\n        x.replace(/~name~/g, packageName).replace(/~fs-name~/g, fsName);\n\n      // If we are running from checkout, comment out the line sourcing packages\n      // from a release, with the latest release filled in (in case they do want\n      // to publish later). If we are NOT running from checkout, fill it out\n      // with the current release.\n      var relString;\n      if (release.current.isCheckout()) {\n        xn = xn.replace(/~cc~/g, \"//\");\n        var rel = catalog.official.getDefaultReleaseVersion();\n        // the no-release case should never happen except in tests.\n        relString = rel ? rel.version : \"no-release\";\n      } else {\n        xn = xn.replace(/~cc~/g, \"\");\n        relString = release.current.getDisplayName({noPrefix: true});\n      }\n\n      // If we are not in checkout, write the current release here.\n      return xn.replace(/~release~/g, relString);\n    };\n\n    try {\n      files.cp_r(files.pathJoin(__dirnameConverted, '..', 'static-assets', 'skel-pack'), packageDir, {\n        transformFilename: function (f) {\n          return transform(f);\n        },\n        transformContents: function (contents, f) {\n          if ((/(\\.html|\\.[jt]sx?|\\.css)/).test(f)) {\n            return Buffer.from(transform(contents.toString()));\n          } else {\n            return contents;\n          }\n        },\n        ignore: [/^local$/],\n        preserveSymlinks: true,\n      });\n    } catch (err) {\n      Console.error(\"Could not create package: \" + err.message);\n      return 1;\n    }\n\n    var displayPackageDir =\n      files.convertToOSPath(files.pathRelative(files.cwd(), packageDir));\n\n    // Since the directory can't have colons, the directory name will often not\n    // match the name of the package exactly, therefore we should tell people\n    // where it was created.\n    Console.info(\n      packageName + \": created in\",\n      Console.path(displayPackageDir)\n    );\n\n    return 0;\n  }\n\n  // Suppose you have an app A, and from some directory inside that\n  // app, you run 'meteor create /my/new/app'. The new app should use\n  // the latest available Meteor release, not the release that A\n  // uses. So if we were run from inside an app directory, and the\n  // user didn't force a release with --release, we need to\n  // springboard to the correct release and tools version.\n  //\n  // (In particular, it's not sufficient to create the new app with\n  // this version of the tools, and then stamp on the correct release\n  // at the end.)\n  if (! release.current.isCheckout() && !release.forced) {\n    if (release.current.name !== release.latestKnown()) {\n      throw new main.SpringboardToLatestRelease;\n    }\n  }\n\n  if (options.list) {\n    Console.info(\"Available examples:\");\n    _.each(EXAMPLE_REPOSITORIES, function (repoInfo, name) {\n      const branchInfo = repoInfo.branch ? `/tree/${repoInfo.branch}` : '';\n      Console.info(\n        Console.command(`${name}: ${repoInfo.repo}${branchInfo}`),\n        Console.options({ indent: 2 }));\n    });\n\n    Console.info();\n    Console.info(\"To create an example, simply\", Console.command(\"git clone\"),\n      \"the relevant repository and branch (run\",\n      Console.command(\"'meteor create --example <name>'\"),\n      \" to see the full command).\");\n    return 0;\n  };\n\n  if (options.example) {\n    const repoInfo = EXAMPLE_REPOSITORIES[options.example];\n    if (!repoInfo) {\n      Console.error(`${options.example}: no such example.`);\n      Console.error(\n        \"List available applications with\",\n        Console.command(\"'meteor create --list'\") + \".\");\n      return 1;\n    }\n\n    const branchOption = repoInfo.branch ? ` -b ${repoInfo.branch}` : '';\n    const path = options.args.length === 1 ? ` ${options.args[0]}` : '';\n\n    Console.info(`To create the ${options.example} example, please run:`);\n    Console.info(\n      Console.command(`git clone ${repoInfo.repo}${branchOption}${path}`),\n      Console.options({ indent: 2 }));\n\n    return 0;\n  }\n\n  var appPathAsEntered;\n  if (options.args.length === 1) {\n    appPathAsEntered = options.args[0];\n  } else {\n    throw new main.ShowUsage;\n  }\n  var appPath = files.pathResolve(appPathAsEntered);\n\n  if (files.findAppDir(appPath)) {\n    Console.error(\n      \"You can't create a Meteor project inside another Meteor project.\");\n    return 1;\n  }\n\n  var appName;\n  if (appPathAsEntered === \".\" || appPathAsEntered === \"./\") {\n    // If trying to create in current directory\n    appName = files.pathBasename(files.cwd());\n  } else {\n    appName = files.pathBasename(appPath);\n  }\n\n\n  var transform = function (x) {\n    return x.replace(/~name~/g, appName);\n  };\n\n  // These file extensions are usually metadata, not app code\n  var nonCodeFileExts = ['.txt', '.md', '.json', '.sh'];\n\n  var destinationHasCodeFiles = false;\n\n  // If the directory doesn't exist, it clearly doesn't have any source code\n  // inside itself\n  if (files.exists(appPath)) {\n    destinationHasCodeFiles = _.any(files.readdir(appPath),\n        function thisPathCountsAsAFile(filePath) {\n      // We don't mind if there are hidden files or directories (this includes\n      // .git) and we don't need to check for .meteor here because the command\n      // will fail earlier\n      var isHidden = /^\\./.test(filePath);\n      if (isHidden) {\n        // Not code\n        return false;\n      }\n\n      // We do mind if there are non-hidden directories, because we don't want\n      // to recursively check everything to do some crazy heuristic to see if\n      // we should try to create an app.\n      var stats = files.stat(files.pathJoin(appPath, filePath));\n      if (stats.isDirectory()) {\n        // Could contain code\n        return true;\n      }\n\n      // Check against our file extension white list\n      var ext = files.pathExtname(filePath);\n      if (ext == '' || _.contains(nonCodeFileExts, ext)) {\n        return false;\n      }\n\n      // Everything not matched above is considered to be possible source code\n      return true;\n    });\n  }\n\n  var toIgnore = [/^local$/, /^\\.id$/];\n  if (destinationHasCodeFiles) {\n    // If there is already source code in the directory, don't copy our\n    // skeleton app code over it. Just create the .meteor folder and metadata\n    toIgnore.push(/(\\.html|\\.js|\\.css)/);\n  }\n\n  let skelName = \"skel\";\n  if (options.minimal) {\n    skelName += \"-minimal\";\n  } else if (options.bare) {\n    skelName += \"-bare\";\n  } else if (options.full) {\n    skelName += \"-full\";\n  } else if (options.react) {\n    skelName += \"-react\";\n  } else if (options.typescript) {\n    skelName += \"-typescript\";\n  }\n\n  files.cp_r(files.pathJoin(__dirnameConverted, '..', 'static-assets', skelName), appPath, {\n    transformFilename: function (f) {\n      return transform(f);\n    },\n    transformContents: function (contents, f) {\n      if ((/(\\.html|\\.[jt]sx?|\\.css)/).test(f)) {\n        return Buffer.from(transform(contents.toString()));\n      } else {\n        return contents;\n      }\n    },\n    ignore: toIgnore,\n    preserveSymlinks: true,\n  });\n\n  // We are actually working with a new meteor project at this point, so\n  // set up its context.\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: appPath,\n    // Write .meteor/versions even if --release is specified.\n    alwaysWritePackageMap: true,\n    // examples come with a .meteor/versions file, but we shouldn't take it\n    // too seriously\n    allowIncompatibleUpdate: true\n  });\n\n  main.captureAndExit(\"=> Errors while creating your project\", function () {\n    projectContext.readProjectMetadata();\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    projectContext.releaseFile.write(\n      release.current.isCheckout() ? \"none\" : release.current.name);\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    // Also, write package version constraints from the current release\n    // If we are on a checkout, we don't need to do this as running from\n    // checkout still pins all package versions and if the user updates\n    // to a real release, the packages file will subsequently get updated\n    if (!release.current.isCheckout()) {\n      projectContext.projectConstraintsFile\n        .updateReleaseConstraints(release.current._manifest);\n    }\n\n    // Any upgrader that is in this version of Meteor doesn't need to be run on\n    // this project.\n    var upgraders = require('../upgraders.js');\n    projectContext.finishedUpgraders.appendUpgraders(upgraders.allUpgraders());\n\n    projectContext.prepareProjectForBuild();\n  });\n  // No need to display the PackageMapDelta here, since it would include all of\n  // the packages (or maybe an unpredictable subset based on what happens to be\n  // in the template's versions file).\n\n  // Since some of the project skeletons include npm `devDependencies`, we need\n  // to make sure they're included when running `npm install`.\n  require(\"./default-npm-deps.js\").install(\n    appPath,\n    { includeDevDependencies: true }\n  );\n\n  var appNameToDisplay = appPathAsEntered === \".\" ?\n    \"current directory\" : `'${appPathAsEntered}'`;\n\n  var message = `Created a new Meteor app in ${appNameToDisplay}`;\n\n  message += \".\";\n\n  Console.info(message + \"\\n\");\n\n  // Print a nice message telling people we created their new app, and what to\n  // do next.\n  Console.info(\"To run your new app:\");\n\n  function cmd(text) {\n    Console.info(Console.command(text), Console.options({\n      indent: 2\n    }));\n  }\n\n  if (appPathAsEntered !== \".\") {\n    // Wrap the app path in quotes if it contains spaces\n    const appPathWithQuotesIfSpaces = appPathAsEntered.indexOf(' ') === -1 ?\n      appPathAsEntered :\n      `'${appPathAsEntered}'`;\n\n    // Don't tell people to 'cd .'\n    cmd(\"cd \" + appPathWithQuotesIfSpaces);\n  }\n\n  cmd(\"meteor\");\n\n  Console.info(\"\");\n  Console.info(\"If you are new to Meteor, try some of the learning resources here:\");\n  Console.info(\n    Console.url(\"https://www.meteor.com/tutorials\"),\n      Console.options({ indent: 2 }));\n\n  if (! options.bare &&\n      ! options.minimal &&\n      ! options.full &&\n      ! options.react &&\n      ! options.typescript) {\n    // Notify people about --bare, --minimal, --full, --react, and --typescript.\n    Console.info([\n      \"\",\n      \"To start with a different app template, try one of the following:\",\n      \"\",\n    ].join(\"\\n\"));\n\n    cmd(\"meteor create --bare       # to create an empty app\");\n    cmd(\"meteor create --minimal    # to create an app with as few Meteor packages as possible\");\n    cmd(\"meteor create --full       # to create a more complete scaffolded app\");\n    cmd(\"meteor create --react      # to create a basic React-based app\");\n    cmd(\"meteor create --typescript # to create an app using TypeScript and React\");\n  }\n\n  Console.info(\"\");\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// build\n///////////////////////////////////////////////////////////////////////////////\n\nvar buildCommands = {\n  minArgs: 1,\n  maxArgs: 1,\n  requiresApp: true,\n  options: {\n    debug: { type: Boolean },\n    directory: { type: Boolean },\n    architecture: { type: String },\n    \"server-only\": { type: Boolean },\n    'mobile-settings': { type: String },\n    server: { type: String },\n    \"cordova-server-port\": { type: String },\n    // XXX COMPAT WITH 0.9.2.2\n    \"mobile-port\": { type: String },\n    // Indicates whether these build is running headless, e.g. in a\n    // continuous integration building environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    'allow-incompatible-update': { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n};\n\nmain.registerCommand({\n  name: \"build\",\n  ...buildCommands,\n}, async function (options) {\n  return Profile.run(\n    \"meteor build\",\n    () => Promise.await(buildCommand(options))\n  );\n});\n\n// Deprecated -- identical functionality to 'build' with one exception: it\n// doesn't output a directory with all builds but rather only one tarball with\n// server/client programs.\n// XXX COMPAT WITH 0.9.1.1\nmain.registerCommand({\n  name: \"bundle\",\n  hidden: true,\n  ...buildCommands,\n}, async function (options) {\n  Console.error(\n    \"This command has been deprecated in favor of \" +\n    Console.command(\"'meteor build'\") + \", which allows you to \" +\n    \"build for multiple platforms and outputs a directory instead of \" +\n    \"a single tarball. See \" + Console.command(\"'meteor help build'\") + \" \" +\n    \"for more information.\");\n  Console.error();\n\n  return Profile.run(\n    \"meteor bundle\",\n    () => Promise.await(buildCommand({\n      ...options,\n      _bundleOnly: true,\n    }))\n  );\n});\n\nvar buildCommand = function (options) {\n  Console.setVerbose(!!options.verbose);\n  if (options.headless) {\n    // There's no point in spinning the spinner when we're running\n    // automated builds.\n    Console.setHeadless(true);\n  }\n  // XXX output, to stderr, the name of the file written to (for human\n  // comfort, especially since we might change the name)\n\n  // XXX name the root directory in the bundle based on the basename\n  // of the file, not a constant 'bundle' (a bit obnoxious for\n  // machines, but worth it for humans)\n\n  // Error handling for options.architecture. See archinfo for more\n  // information on what the architectures are, what they mean, et cetera.\n  if (options.architecture &&\n      !_.has(archinfo.VALID_ARCHITECTURES, options.architecture)) {\n    showInvalidArchMsg(options.architecture);\n    return 1;\n  }\n  var bundleArch = options.architecture || archinfo.host();\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    serverArchitectures: _.uniq([bundleArch, archinfo.host()]),\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    // TODO Fix the nested Profile.run warning here, without interfering\n    // with METEOR_PROFILE output for other commands, like `meteor run`.\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  // _bundleOnly implies serverOnly\n  const serverOnly = options._bundleOnly || !!options['server-only'];\n\n  // options['mobile-settings'] is used to set the initial value of\n  // `Meteor.settings` on mobile apps. Pass it on to options.settings,\n  // which is used in this command.\n  if (options['mobile-settings']) {\n    options.settings = options['mobile-settings'];\n  }\n\n  const appName = files.pathBasename(options.appDir);\n\n  let cordovaPlatforms;\n  let parsedMobileServerUrl;\n  let parsedCordovaServerPort;\n  if (!serverOnly) {\n    cordovaPlatforms = projectContext.platformList.getCordovaPlatforms();\n\n    if (process.platform !== 'darwin' && _.contains(cordovaPlatforms, 'ios')) {\n      cordovaPlatforms = _.without(cordovaPlatforms, 'ios');\n      Console.warn(\"Currently, it is only possible to build iOS apps \\\non an OS X system.\");\n    }\n\n    if (!_.isEmpty(cordovaPlatforms)) {\n      // XXX COMPAT WITH 0.9.2.2 -- the --mobile-port option is deprecated\n      const mobileServerOption = options.server || options[\"mobile-port\"];\n      if (!mobileServerOption) {\n        // For Cordova builds, require '--server'.\n        // XXX better error message?\n        Console.error(\n          \"Supply the server hostname and port in the --server option \" +\n            \"for mobile app builds.\");\n        return 1;\n      }\n      parsedMobileServerUrl = parseMobileServerOption(mobileServerOption,\n        'server');\n      parsedCordovaServerPort = parseCordovaServerPortOption(options);\n    }\n  } else {\n    cordovaPlatforms = [];\n  }\n\n  var buildDir = projectContext.getProjectLocalDirectory('build_tar');\n  var outputPath = files.pathResolve(options.args[0]); // get absolute path\n\n  // Warn if people try to build inside the app directory.\n  var relative = files.pathRelative(options.appDir, outputPath);\n  // We would like the output path to be outside the app directory, which\n  // means the first step to getting there is going up a level.\n  if (relative.substr(0, 2) !== '..') {\n    Console.warn();\n    Console.labelWarn(`The output directory is under your source tree.\nYour generated files may get interpreted as source code!\nConsider building into a different directory instead\n${Console.command(\"meteor build ../output\")}`,\n      Console.options({ indent: 2 }));\n    Console.warn();\n  }\n\n  var bundlePath = options.directory ?\n      (options._bundleOnly ? outputPath :\n      files.pathJoin(outputPath, 'bundle')) :\n      files.pathJoin(buildDir, 'bundle');\n\n  stats.recordPackages({\n    what: \"sdk.bundle\",\n    projectContext: projectContext\n  });\n\n  var bundler = require('../isobuild/bundler.js');\n  var bundleResult = bundler.bundle({\n    projectContext: projectContext,\n    outputPath: bundlePath,\n    buildOptions: {\n      minifyMode: options.debug ? 'development' : 'production',\n      // XXX is this a good idea, or should linux be the default since\n      //     that's where most people are deploying\n      //     default?  i guess the problem with using DEPLOY_ARCH as default\n      //     is then 'meteor bundle' with no args fails if you have any local\n      //     packages with binary npm dependencies\n      serverArch: bundleArch,\n      buildMode: options.debug ? 'development' : 'production',\n    },\n  });\n  if (bundleResult.errors) {\n    Console.error(\"Errors prevented bundling:\");\n    Console.error(bundleResult.errors.formatMessages());\n    return 1;\n  }\n\n  if (!options._bundleOnly) {\n    files.mkdir_p(outputPath);\n  }\n\n  if (!options.directory) {\n    main.captureAndExit('', 'creating server tarball', () => {\n      try {\n        var outputTar = options._bundleOnly ? outputPath :\n          files.pathJoin(outputPath, appName + '.tar.gz');\n\n        files.createTarball(files.pathJoin(buildDir, 'bundle'), outputTar);\n      } catch (err) {\n        buildmessage.exception(err);\n        files.rm_recursive(buildDir);\n      }\n    });\n  }\n\n  if (!_.isEmpty(cordovaPlatforms)) {\n\n    let cordovaProject;\n    main.captureAndExit('', () => {\n\n      import {\n        pluginVersionsFromStarManifest,\n        displayNameForPlatform,\n      } from '../cordova/index.js';\n\n      ensureDevBundleDependencies();\n\n      buildmessage.enterJob({ title: \"preparing Cordova project\" }, () => {\n        import { CordovaProject } from '../cordova/project.js';\n\n        cordovaProject = new CordovaProject(projectContext, {\n          settingsFile: options.settings,\n          mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n          cordovaServerPort: parsedCordovaServerPort });\n        if (buildmessage.jobHasMessages()) return;\n\n        const pluginVersions = pluginVersionsFromStarManifest(\n          bundleResult.starManifest);\n\n        cordovaProject.prepareFromAppBundle(bundlePath, pluginVersions);\n      });\n\n      for (platform of cordovaPlatforms) {\n        buildmessage.enterJob(\n          { title: `building Cordova app for \\\n${displayNameForPlatform(platform)}` }, () => {\n            let buildOptions = { release: !options.debug };\n\n            const buildPath = files.pathJoin(\n              projectContext.getProjectLocalDirectory('cordova-build'),\n              'platforms', platform);\n            const platformOutputPath = files.pathJoin(outputPath, platform);\n\n            // Prepare the project once again to ensure that it is up to date\n            // with current build options.  For example, --server=example.com\n            // is utilized in the Cordova builder to write boilerplate HTML and\n            // various config.xml settings (e.g. access policies)\n            if (platform === 'ios') {\n              cordovaProject.prepareForPlatform(platform, buildOptions);\n            } else if (platform === 'android') {\n              cordovaProject.buildForPlatform(platform, buildOptions);\n            }\n\n            // Once prepared, copy the bundle to the final location.\n            files.cp_r(buildPath,\n              files.pathJoin(platformOutputPath, 'project'));\n\n            // Make some platform-specific adjustments to the resulting build.\n            if (platform === 'ios') {\n              files.writeFile(\n                files.pathJoin(platformOutputPath, 'README'),\n`This is an auto-generated XCode project for your iOS application.\n\nInstructions for publishing your iOS app to App Store can be found at:\nhttps://guide.meteor.com/mobile.html#submitting-ios\n`, \"utf8\");\n            } else if (platform === 'android') {\n              const apkPath = files.pathJoin(buildPath, 'build/outputs/apk',\n                options.debug ? 'android-debug.apk' : 'android-release-unsigned.apk');\n\n              if (files.exists(apkPath)) {\n              files.copyFile(apkPath, files.pathJoin(platformOutputPath,\n                options.debug ? 'debug.apk' : 'release-unsigned.apk'));\n              }\n\n              files.writeFile(\n                files.pathJoin(platformOutputPath, 'README'),\n`This is an auto-generated Gradle project for your Android application.\n\nInstructions for publishing your Android app to Play Store can be found at:\nhttps://guide.meteor.com/mobile.html#submitting-android\n`, \"utf8\");\n            }\n        });\n      }\n    });\n  }\n\n  files.rm_recursive(buildDir);\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// lint\n///////////////////////////////////////////////////////////////////////////////\nmain.registerCommand({\n  name: 'lint',\n  maxArgs: 0,\n  requiresAppOrPackage: true,\n  options: {\n    'allow-incompatible-updates': { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  const {packageDir, appDir} = options;\n\n  let projectContext = null;\n\n  // if the goal is to lint the package, don't include the whole app\n  if (packageDir) {\n    // similar to `meteor publish`, create a fake project\n    const tempProjectDir = files.mkdtemp('meteor-package-build');\n    projectContext = new projectContextModule.ProjectContext({\n      projectDir: tempProjectDir,\n      explicitlyAddedLocalPackageDirs: [packageDir],\n      packageMapFilename: files.pathJoin(packageDir, '.versions'),\n      alwaysWritePackageMap: true,\n      forceIncludeCordovaUnibuild: true,\n      allowIncompatibleUpdate: options['allow-incompatible-update'],\n      lintPackageWithSourceRoot: packageDir\n    });\n\n    main.captureAndExit(\"=> Errors while setting up package:\", () =>\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog()\n    );\n    const versionRecord =\n        projectContext.localCatalog.getVersionBySourceRoot(packageDir);\n    if (! versionRecord) {\n      throw Error(\"explicitly added local package dir missing?\");\n    }\n    const packageName = versionRecord.packageName;\n    const constraint = utils.parsePackageConstraint(packageName);\n    projectContext.projectConstraintsFile.removeAllPackages();\n    projectContext.projectConstraintsFile.addConstraints([constraint]);\n  }\n\n  // linting the app\n  if (! projectContext && appDir) {\n    projectContext = new projectContextModule.ProjectContext({\n      projectDir: appDir,\n      serverArchitectures: [archinfo.host()],\n      allowIncompatibleUpdate: options['allow-incompatible-update'],\n      lintAppAndLocalPackages: true\n    });\n  }\n\n\n  main.captureAndExit(\"=> Errors prevented the build:\", () => {\n    projectContext.prepareProjectForBuild();\n  });\n\n  const bundlePath = projectContext.getProjectLocalDirectory('build');\n  const bundler = require('../isobuild/bundler.js');\n  const bundle = bundler.bundle({\n    projectContext: projectContext,\n    outputPath: null,\n    buildOptions: {\n      minifyMode: 'development'\n    }\n  });\n\n  const displayName = options.packageDir ? 'package' : 'app';\n  if (bundle.errors) {\n    Console.error(\n      `=> Errors building your ${displayName}:\\n\\n${bundle.errors.formatMessages()}`\n    );\n    throw new main.ExitWithCode(2);\n  }\n\n  if (bundle.warnings) {\n    Console.warn(bundle.warnings.formatMessages());\n    return 1;\n  }\n\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// mongo\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'mongo',\n  maxArgs: 1,\n  options: {\n    url: { type: Boolean, short: 'U' }\n  },\n  requiresApp: function (options) {\n    return options.args.length === 0;\n  },\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  var mongoUrl;\n  var usedMeteorAccount = false;\n\n  if (options.args.length === 0) {\n    // localhost mode\n    var findMongoPort =\n      require('../runners/run-mongo.js').findMongoPort;\n    var mongoPort = findMongoPort(files.pathJoin(options.appDir, \".meteor\", \"local\", \"db\"));\n\n    // XXX detect the case where Meteor is running, but MONGO_URL was\n    // specified?\n\n    if (! mongoPort) {\n      Console.info(\"mongo: Meteor isn't running a local MongoDB server.\");\n      Console.info();\n      Console.info(`\\\nThis command only works while Meteor is running your application locally. \\\nStart your application first with 'meteor' and then run this command in a new \\\nterminal. This error will also occur if you asked Meteor to use a different \\\nMongoDB server with $MONGO_URL when you ran your application.`);\n      Console.info();\n      Console.info(`\\\nIf you're trying to connect to the database of an app you deployed with \\\n${Console.command(\"'meteor deploy'\")}, specify your site's name as an argument \\\nto this command.`);\n      return 1;\n    }\n    mongoUrl = \"mongodb://127.0.0.1:\" + mongoPort + \"/meteor\";\n\n  } else {\n    // remote mode\n    var site = qualifySitename(options.args[0]);\n\n    mongoUrl = deploy.temporaryMongoUrl(site);\n    usedMeteorAccount = true;\n\n    if (! mongoUrl) {\n      // temporaryMongoUrl() will have printed an error message\n      return 1;\n    }\n  }\n  if (options.url) {\n    console.log(mongoUrl);\n  } else {\n    if (usedMeteorAccount) {\n      auth.maybePrintRegistrationLink();\n    }\n    process.stdin.pause();\n    var runMongo = require('../runners/run-mongo.js');\n    runMongo.runMongoShell(mongoUrl);\n    throw new main.WaitForExit;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// reset\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'reset',\n  // Doesn't actually take an argument, but we want to print an custom\n  // error message if they try to pass one.\n  maxArgs: 1,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (options.args.length !== 0) {\n    Console.error(\"meteor reset only affects the locally stored database.\");\n    Console.error();\n    Console.error(\"To reset a deployed application use\");\n    Console.error(\n      Console.command(\"meteor deploy --delete appname\"), Console.options({ indent: 2 }));\n    Console.error(\"followed by\");\n    Console.error(\n      Console.command(\"meteor deploy appname\"), Console.options({ indent: 2 }));\n    return 1;\n  }\n\n  if (process.env.MONGO_URL) {\n    Console.info(\"As a precaution, meteor reset only clears the local database that is \" +\n                 \"provided by meteor run for development. The database specified with \" +\n                 \"MONGO_URL will NOT be reset.\");\n  }\n\n  // XXX detect the case where Meteor is running the app, but\n  // MONGO_URL was set, so we don't see a Mongo process\n  var findMongoPort = require('../runners/run-mongo.js').findMongoPort;\n  var isRunning = !! findMongoPort(files.pathJoin(options.appDir, \".meteor\", \"local\", \"db\"));\n  if (isRunning) {\n    Console.error(\"reset: Meteor is running.\");\n    Console.error();\n    Console.error(\n      \"This command does not work while Meteor is running your application.\",\n      \"Exit the running Meteor development server.\");\n    return 1;\n  }\n\n  return files.rm_recursive_async(\n    files.pathJoin(options.appDir, '.meteor', 'local')\n  ).then(() => {\n    Console.info(\"Project reset.\");\n  });\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// deploy\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'deploy',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    'delete': { type: Boolean, short: 'D' },\n    debug: { type: Boolean },\n    settings: { type: String, short: 's' },\n    // No longer supported, but we still parse it out so that we can\n    // print a custom error message.\n    password: { type: String },\n    // Override architecture to deploy whatever stuff we have locally, even if\n    // it contains binary packages that should be incompatible. A hack to allow\n    // people to deploy from checkout or do other weird shit. We are not\n    // responsible for the consequences.\n    'override-architecture-with-local' : { type: Boolean },\n    'allow-incompatible-update': { type: Boolean },\n    'deploy-polling-timeout': { type: Number },\n    'no-wait': { type: Boolean },\n  },\n  allowUnrecognizedOptions: true,\n  requiresApp: function (options) {\n    return ! options.delete;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, async function (...args) {\n  return Profile.run(\n    \"meteor deploy\",\n    () => Promise.await(deployCommand(...args))\n  );\n});\n\nfunction deployCommand(options, { rawOptions }) {\n  var site = options.args[0];\n\n  if (options.delete) {\n    return deploy.deleteApp(site);\n  }\n\n  if (options.password) {\n    Console.error(\n      \"Setting passwords on apps is no longer supported. Now there are \" +\n        \"user accounts and your apps are associated with your account so \" +\n        \"that only you (and people you designate) can access them. See the \" +\n        Console.command(\"'meteor authorized'\") + \" command.\");\n    return 1;\n  }\n\n  var loggedIn = auth.isLoggedIn();\n  if (! loggedIn) {\n    Console.error(\n      \"You must be logged in to deploy, just enter your email address.\");\n    Console.error();\n    if (! auth.registerOrLogIn()) {\n      return 1;\n    }\n  }\n\n  // Override architecture iff applicable.\n  var buildArch = DEPLOY_ARCH;\n  if (options['override-architecture-with-local']) {\n    Console.warn();\n    Console.labelWarn(\n      \"OVERRIDING DEPLOY ARCHITECTURE WITH LOCAL ARCHITECTURE.\",\n      \"If your app contains binary code, it may break in unexpected \" +\n      \"and terrible ways.\");\n    buildArch = archinfo.host();\n  }\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    serverArchitectures: _.uniq([buildArch, archinfo.host()]),\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    // TODO Fix nested Profile.run warning here, too.\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  var buildOptions = {\n    minifyMode: options.debug ? 'development' : 'production',\n    buildMode: options.debug ? 'development' : 'production',\n    serverArch: buildArch\n  };\n\n  let deployPollingTimeoutMs = null;\n  if (options['deploy-polling-timeout']) {\n    deployPollingTimeoutMs = options['deploy-polling-timeout'];\n  }\n\n  const waitForDeploy = !options['no-wait'];\n\n  var deployResult = deploy.bundleAndDeploy({\n    projectContext: projectContext,\n    site: site,\n    settingsFile: options.settings,\n    buildOptions: buildOptions,\n    rawOptions,\n    deployPollingTimeoutMs,\n    waitForDeploy,\n  });\n\n  if (deployResult === 0) {\n    auth.maybePrintRegistrationLink({\n      leadingNewline: true,\n      // If the user was already logged in at the beginning of the\n      // deploy, then they've already been prompted to set a password\n      // at least once before, so we use a slightly different message.\n      firstTime: ! loggedIn\n    });\n  }\n\n  return deployResult;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// authorized\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'authorized',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    add: { type: String, short: \"a\" },\n    transfer: { type: String, short: \"t\" },\n    remove: { type: String, short: \"r\" },\n    list: { type: Boolean }\n  },\n  pretty: function (options) {\n    // pretty if we're mutating; plain if we're listing (which is more likely to\n    // be used by scripts)\n    return options.add || options.remove || options.transfer;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  if (_.keys(_.pick(options, 'add', 'remove', 'transfer', 'list')).length > 1) {\n    Console.error(\n      \"Sorry, you can only perform one authorization operation at a time.\");\n    return 1;\n  }\n\n  auth.pollForRegistrationCompletion();\n  var site = qualifySitename(options.args[0]);\n\n  if (! auth.isLoggedIn()) {\n    Console.error(\n      \"You must be logged in for that. Try \" +\n      Console.command(\"'meteor login'\"));\n    return 1;\n  }\n\n  if (options.add) {\n    return deploy.changeAuthorized(site, \"add\", options.add);\n  } else if (options.remove) {\n    return deploy.changeAuthorized(site, \"remove\", options.remove);\n  } else if (options.transfer) {\n    return deploy.changeAuthorized(site, \"transfer\", options.transfer);\n  } else {\n    return deploy.listAuthorized(site);\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// test and test-packages\n///////////////////////////////////////////////////////////////////////////////\n\ntestCommandOptions = {\n  maxArgs: Infinity,\n  catalogRefresh: new catalog.Refresh.Never(),\n  options: {\n    port: { type: String, short: \"p\", default: DEFAULT_PORT },\n    'mobile-server': { type: String },\n    'cordova-server-port': { type: String },\n    // XXX COMPAT WITH 0.9.2.2\n    'mobile-port': { type: String },\n    'debug-port': { type: String },\n    ...inspectOptions,\n    'no-release-check': { type: Boolean },\n    deploy: { type: String },\n    production: { type: Boolean },\n    settings: { type: String, short: 's' },\n    // Indicates whether these self-tests are running headless, e.g. in a\n    // continuous integration testing environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    'raw-logs': { type: Boolean },\n\n    // Undocumented. See #Once\n    once: { type: Boolean },\n    // Undocumented. To ensure that QA covers both\n    // PollingObserveDriver and OplogObserveDriver, this option\n    // disables oplog for tests.  (It still creates a replset, it just\n    // doesn't do oplog tailing.)\n    'disable-oplog': { type: Boolean },\n    // Undocumented flag to use a different test driver.\n    'driver-package': { type: String },\n\n    // Sets the path of where the temp app should be created\n    'test-app-path': { type: String },\n\n    // Undocumented, runs tests under selenium\n    'selenium': { type: Boolean },\n    'selenium-browser': { type: String },\n\n    // Undocumented.  Usually we just show a banner saying 'Tests' instead of\n    // the ugly path to the temporary test directory, but if you actually want\n    // to see it you can ask for it.\n    'show-test-app-path': { type: Boolean },\n\n    // hard-coded options with all known Cordova platforms\n    ios: { type: Boolean },\n    'ios-device': { type: Boolean },\n    android: { type: Boolean },\n    'android-device': { type: Boolean },\n\n    // This could theoretically be useful/necessary in conjunction with\n    // --test-app-path.\n    'allow-incompatible-update': { type: Boolean },\n\n    // Don't print linting messages for tested packages\n    'no-lint': { type: Boolean },\n\n    // allow excluding packages when testing all packages.\n    // should be a comma-separated list of package names.\n    'exclude': { type: String },\n\n    // one of the following must be true\n    'test': { type: Boolean, 'default': false },\n    'test-packages': { type: Boolean, 'default': false },\n\n    // For 'test-packages': Run in \"full app\" mode\n    'full-app': { type: Boolean, 'default': false },\n\n    'extra-packages': { type: String }\n  }\n};\n\nmain.registerCommand(_.extend({\n  name: 'test',\n  requiresApp: true\n}, testCommandOptions), function (options) {\n  options['test'] = true;\n  return doTestCommand(options);\n});\n\nmain.registerCommand(_.extend(\n  { name: 'test-packages' },\n  testCommandOptions\n), function (options) {\n  options['test-packages'] = true;\n  return doTestCommand(options);\n});\n\nfunction doTestCommand(options) {\n  // This \"metadata\" is accessed in a few places. Using a global\n  // variable here was more expedient than navigating the many layers\n  // of abstraction across the the build process.\n  //\n  // As long as the Meteor CLI runs a single command as part of each\n  // process, this should be safe.\n  global.testCommandMetadata = {};\n\n  Console.setVerbose(!!options.verbose);\n  if (options.headless) {\n    Console.setHeadless(true);\n  }\n\n  const runTargets = parseRunTargets(_.intersection(\n    Object.keys(options), ['ios', 'ios-device', 'android', 'android-device']));\n\n  const { parsedServerUrl, parsedMobileServerUrl, parsedCordovaServerPort } =\n    parseServerOptionsForRunCommand(options, runTargets);\n\n  // Make a temporary app dir (based on the test runner app). This will be\n  // cleaned up on process exit. Using a temporary app dir means that we can\n  // run multiple \"test-packages\" commands in parallel without them stomping\n  // on each other.\n  let testRunnerAppDir;\n  const testAppPath = options['test-app-path'];\n  if (testAppPath) {\n    const absTestAppPath = files.pathResolve(testAppPath);\n    try {\n      if (files.mkdir_p(absTestAppPath, 0o700)) {\n        testRunnerAppDir = absTestAppPath;\n      } else {\n        Console.error(\n          'The specified --test-app-path directory could not be used, as ' +\n          `\"${testAppPath}\" already exists and it is not a directory.`\n        );\n        return 1;\n      }\n    } catch (error) {\n      Console.error(\n        'Unable to create the specified --test-app-path directory of ' +\n        `\"${testAppPath}\".`\n      );\n      throw error;\n    }\n  }\n\n  if (!testRunnerAppDir) {\n    testRunnerAppDir = files.mkdtemp('meteor-test-run');\n  }\n\n  // Download packages for our architecture, and for the deploy server's\n  // architecture if we're deploying.\n  var serverArchitectures = [archinfo.host()];\n  if (options.deploy && DEPLOY_ARCH !== archinfo.host()) {\n    serverArchitectures.push(DEPLOY_ARCH);\n  }\n\n  if (options['raw-logs']) {\n    runLog.setRawLogs(true);\n  }\n\n  var includePackages = [];\n  if (options['extra-packages']) {\n    includePackages = options['extra-packages'].trim().split(/\\s*,\\s*/);\n  }\n\n  if (options['driver-package']) {\n    includePackages.push(\n      global.testCommandMetadata.driverPackage =\n        options['driver-package'].trim()\n    );\n  } else if (options[\"test-packages\"]) {\n    includePackages.push(\n      global.testCommandMetadata.driverPackage = \"test-in-browser\"\n    );\n  }\n\n  var projectContextOptions = {\n    serverArchitectures: serverArchitectures,\n    allowIncompatibleUpdate: options['allow-incompatible-update'],\n    lintAppAndLocalPackages: !options['no-lint'],\n    includePackages: includePackages\n  };\n  var projectContext;\n\n  if (options[\"test-packages\"]) {\n    projectContextOptions.projectDir = testRunnerAppDir;\n    projectContextOptions.projectDirForLocalPackages = options.appDir;\n\n    try {\n      require(\"./default-npm-deps.js\").install(testRunnerAppDir);\n    } catch (error) {\n      if (error.code === 'EACCES' && options['test-app-path']) {\n        Console.error(\n          'The specified --test-app-path directory of ' +\n          `\"${testRunnerAppDir}\" exists, but the current user does not have ` +\n          `read/write permission in it.`\n        );\n      }\n      throw error;\n    }\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    // Find any packages mentioned by a path instead of a package name. We will\n    // load them explicitly into the catalog.\n    var packagesByPath = _.filter(options.args, function (p) {\n      return p.indexOf('/') !== -1;\n    });\n    // If we're currently in an app, we still want to use the real app's\n    // packages subdirectory, not the test runner app's empty one.\n    projectContextOptions.explicitlyAddedLocalPackageDirs = packagesByPath;\n\n    // XXX Because every run uses a new app with its own IsopackCache directory,\n    //     this always does a clean build of all packages. Maybe we can speed up\n    //     repeated test-packages calls with some sort of shared or semi-shared\n    //     isopack cache that's specific to test-packages?  See #3012.\n    projectContext = new projectContextModule.ProjectContext(projectContextOptions);\n\n    main.captureAndExit(\"=> Errors while initializing project:\", function () {\n      // We're just reading metadata here --- we'll wait to do the full build\n      // preparation until after we've started listening on the proxy, etc.\n      projectContext.readProjectMetadata();\n    });\n\n    main.captureAndExit(\"=> Errors while setting up tests:\", function () {\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog();\n    });\n\n    // Overwrite .meteor/release.\n    projectContext.releaseFile.write(\n      release.current.isCheckout() ? \"none\" : release.current.name);\n\n    var packagesToAdd = getTestPackageNames(projectContext, options.args);\n\n    // filter out excluded packages\n    var excludedPackages = options.exclude && options.exclude.split(',');\n    if (excludedPackages) {\n      packagesToAdd = _.filter(packagesToAdd, function (p) {\n        return ! _.some(excludedPackages, function (excluded) {\n          return p.replace(/^local-test:/, '') === excluded;\n        });\n      });\n    }\n\n    // Use the driver package if running `meteor test-packages`. For\n    // `meteor test`, the driver package is expected to already\n    // have been added to the app.\n    packagesToAdd.unshift(global.testCommandMetadata.driverPackage);\n\n    // Also, add `autoupdate` so that you don't have to manually refresh the tests\n    packagesToAdd.unshift(\"autoupdate\");\n\n    var constraintsToAdd = _.map(packagesToAdd, function (p) {\n      return utils.parsePackageConstraint(p);\n    });\n    // Add the packages to our in-memory representation of .meteor/packages.  (We\n    // haven't yet resolved constraints, so this will affect constraint\n    // resolution.)  This will get written to disk once we prepareProjectForBuild,\n    // either in the Cordova code below, right before deploying below, or in the\n    // app runner.  (Note that removeAllPackages removes any comments from\n    // .meteor/packages, but that's OK since this isn't a real user project.)\n    projectContext.projectConstraintsFile.removeAllPackages();\n    projectContext.projectConstraintsFile.addConstraints(constraintsToAdd);\n    // Write these changes to disk now, so that if the first attempt to prepare\n    // the project for build hits errors, we don't lose them on\n    // projectContext.reset.\n    projectContext.projectConstraintsFile.writeIfModified();\n  } else if (options[\"test\"]) {\n    if (!options['driver-package']) {\n      throw new Error(\"You must specify a driver package with --driver-package\");\n    }\n\n    global.testCommandMetadata.driverPackage = options['driver-package'];\n\n    global.testCommandMetadata.isAppTest = options['full-app'];\n    global.testCommandMetadata.isTest = !global.testCommandMetadata.isAppTest;\n\n    projectContextOptions.projectDir = options.appDir;\n    projectContextOptions.projectLocalDir = files.pathJoin(testRunnerAppDir, '.meteor', 'local');\n\n    // Copy the existing build and isopacks to speed up the initial start\n    function copyDirIntoTestRunnerApp(allowSymlink, ...parts) {\n      // Depending on whether the user has run `meteor run` or other commands, they\n      // may or may not exist yet\n      const appDirPath = files.pathJoin(options.appDir, ...parts);\n      const testDirPath = files.pathJoin(testRunnerAppDir, ...parts);\n\n      files.mkdir_p(appDirPath);\n      files.mkdir_p(files.pathDirname(testDirPath));\n\n      if (allowSymlink) {\n        // Windows can create junction links without administrator\n        // privileges since both paths refer to directories.\n        files.symlink(appDirPath, testDirPath, \"junction\");\n      } else {\n        files.cp_r(appDirPath, testDirPath, {\n          preserveSymlinks: true\n        });\n      }\n    }\n\n    copyDirIntoTestRunnerApp(false, '.meteor', 'local', 'build');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'bundler-cache');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'isopacks');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'plugin-cache');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'shell');\n\n    projectContext = new projectContextModule.ProjectContext(projectContextOptions);\n\n    main.captureAndExit(\"=> Errors while setting up tests:\", function () {\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog();\n    });\n  } else {\n    throw new Error(\"Unexpected: neither test-packages nor test\");\n  }\n\n  // The rest of the projectContext preparation process will happen inside the\n  // runner, once the proxy is listening. The changes we made were persisted to\n  // disk, so projectContext.reset won't make us forget anything.\n\n  let cordovaRunner;\n\n  if (!_.isEmpty(runTargets)) {\n    function prepareCordovaProject() {\n      main.captureAndExit('', 'preparing Cordova project', () => {\n        import { CordovaProject } from '../cordova/project.js';\n\n        const cordovaProject = new CordovaProject(projectContext, {\n          settingsFile: options.settings,\n          mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n          cordovaServerPort: parsedCordovaServerPort });\n        if (buildmessage.jobHasMessages()) return;\n\n        cordovaRunner = new CordovaRunner(cordovaProject, runTargets);\n        projectContext.platformList.write(cordovaRunner.platformsForRunTargets);\n        cordovaRunner.checkPlatformsForRunTargets();\n      });\n    }\n\n    ensureDevBundleDependencies();\n    prepareCordovaProject();\n  }\n\n  options.cordovaRunner = cordovaRunner;\n\n  return runTestAppForPackages(projectContext, _.extend(\n    options,\n    {\n      mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n      cordovaServerPort: parsedCordovaServerPort,\n      proxyPort: parsedServerUrl.port,\n      proxyHost: parsedServerUrl.hostname,\n    }\n  ));\n}\n\n// Returns the \"local-test:*\" package names for the given package names (or for\n// all local packages if packageNames is empty/unspecified).\nvar getTestPackageNames = function (projectContext, packageNames) {\n  var packageNamesSpecifiedExplicitly = ! _.isEmpty(packageNames);\n  if (_.isEmpty(packageNames)) {\n    // If none specified, test all local packages. (We don't have tests for\n    // non-local packages.)\n    packageNames = projectContext.localCatalog.getAllPackageNames();\n  }\n  var testPackages = [];\n  main.captureAndExit(\"=> Errors while collecting tests:\", function () {\n    _.each(packageNames, function (p) {\n      buildmessage.enterJob(\"trying to test package `\" + p + \"`\", function () {\n        // If it's a package name, look it up the normal way.\n        if (p.indexOf('/') === -1) {\n          if (p.indexOf('@') !== -1) {\n            buildmessage.error(\n              \"You may not specify versions for local packages: \" + p );\n            return;  // recover by ignoring\n          }\n          // Check to see if this is a real local package, and if it is a real\n          // local package, if it has tests.\n          var version = projectContext.localCatalog.getLatestVersion(p);\n          if (! version) {\n            buildmessage.error(\"Not a known local package, cannot test\");\n          } else if (version.testName) {\n            testPackages.push(version.testName);\n          } else if (packageNamesSpecifiedExplicitly) {\n            // It's only an error to *ask* to test a package with no tests, not\n            // to come across a package with no tests when you say \"test all\n            // packages\".\n            buildmessage.error(\"Package has no tests\");\n          }\n        } else {\n          // Otherwise, it's a directory; find it by source root.\n          version = projectContext.localCatalog.getVersionBySourceRoot(\n            files.pathResolve(p));\n          if (! version) {\n            buildmessage.error(\"Package not found in local catalog\");\n            return;\n          }\n          if (version.testName) {\n            testPackages.push(version.testName);\n          }\n          // It is not an error to mention a package by directory that is a\n          // package but has no tests; this means you can run `meteor\n          // test-packages $APP/packages/*` without having to worry about the\n          // packages that don't have tests.\n        }\n      });\n    });\n  });\n\n  return testPackages;\n};\n\nvar runTestAppForPackages = function (projectContext, options) {\n  var buildOptions = {\n    minifyMode: options.production ? 'production' : 'development'\n  };\n  buildOptions.buildMode = \"test\";\n\n  if (options.deploy) {\n    // Run the constraint solver and build local packages.\n    main.captureAndExit(\"=> Errors while initializing project:\", function () {\n      projectContext.prepareProjectForBuild();\n    });\n    // No need to display the PackageMapDelta here, since it would include all\n    // of the packages!\n\n    buildOptions.serverArch = DEPLOY_ARCH;\n    return deploy.bundleAndDeploy({\n      projectContext: projectContext,\n      site: options.deploy,\n      settingsFile: options.settings,\n      buildOptions: buildOptions,\n      recordPackageUsage: false\n    });\n  } else {\n    var runAll = require('../runners/run-all.js');\n    return runAll.run({\n      projectContext: projectContext,\n      proxyPort: options.proxyPort,\n      proxyHost: options.proxyHost,\n      ...normalizeInspectOptions(options),\n      disableOplog: options['disable-oplog'],\n      settingsFile: options.settings,\n      testMetadata: global.testCommandMetadata,\n      banner: options['show-test-app-path'] ? null : \"Tests\",\n      buildOptions: buildOptions,\n      rootUrl: process.env.ROOT_URL,\n      mongoUrl: process.env.MONGO_URL,\n      oplogUrl: process.env.MONGO_OPLOG_URL,\n      mobileServerUrl: options.mobileServerUrl,\n      once: options.once,\n      noReleaseCheck: options['no-release-check'] || process.env.METEOR_NO_RELEASE_CHECK,\n      recordPackageUsage: false,\n      selenium: options.selenium,\n      seleniumBrowser: options['selenium-browser'],\n      cordovaRunner: options.cordovaRunner,\n      // On the first run, we shouldn't display the delta between \"no packages\n      // in the temp app\" and \"all the packages we're testing\". If we make\n      // changes and reload, though, it's fine to display them.\n      omitPackageMapDeltaDisplayOnFirstRun: true\n    });\n  }\n};\n\n\n\n///////////////////////////////////////////////////////////////////////////////\n// rebuild\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'rebuild',\n  maxArgs: Infinity,\n  hidden: true,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never(),\n  'allow-incompatible-update': { type: Boolean }\n}, function (options) {\n  var projectContextModule = require('../project-context.js');\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    forceRebuildPackages: options.args.length ? options.args : true,\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while rebuilding packages:\", function () {\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  Console.info(\"Packages rebuilt.\");\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// login\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'login',\n  options: {\n    email: { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return auth.loginCommand(_.extend({\n    overwriteExistingToken: true\n  }, options));\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// logout\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'logout',\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return auth.logoutCommand(options);\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// whoami\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'whoami',\n  catalogRefresh: new catalog.Refresh.Never(),\n  pretty: false\n}, function (options) {\n  return auth.whoAmICommand(options);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// organizations\n///////////////////////////////////////////////////////////////////////////////\n\nvar loggedInAccountsConnectionOrPrompt = function (action) {\n  var token = auth.getSessionToken(config.getAccountsDomain());\n  if (! token) {\n    Console.error(\"You must be logged in to \" + action + \".\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n  }\n\n  token = auth.getSessionToken(config.getAccountsDomain());\n  var conn = auth.loggedInAccountsConnection(token);\n  if (conn === null) {\n    // Server rejected our token.\n    Console.error(\"You must be logged in to \" + action + \".\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n    token = auth.getSessionToken(config.getAccountsDomain());\n    conn = auth.loggedInAccountsConnection(token);\n  }\n\n  return conn;\n};\n\n// List the organizations of which the current user is a member.\nmain.registerCommand({\n  name: 'admin list-organizations',\n  minArgs: 0,\n  maxArgs: 0,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  var token = auth.getSessionToken(config.getAccountsDomain());\n  if (! token) {\n    Console.error(\"You must be logged in to list your organizations.\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n  }\n\n  var url = config.getAccountsApiUrl() + \"/organizations\";\n  try {\n    var result = httpHelpers.request({\n      url: url,\n      method: \"GET\",\n      useSessionHeader: true,\n      useAuthHeader: true\n    });\n    var body = JSON.parse(result.body);\n  } catch (err) {\n    Console.error(\"Error listing organizations.\");\n    return 1;\n  }\n\n  if (result.response.statusCode === 401 &&\n      body && body.error === \"invalid_credential\") {\n    Console.error(\"You must be logged in to list your organizations.\");\n    // XXX It would be nice to do a username/password prompt here like\n    // we do for the other orgs commands.\n    return 1;\n  }\n\n  if (result.response.statusCode !== 200 ||\n      ! body || ! body.organizations) {\n    Console.error(\"Error listing organizations.\");\n    return 1;\n  }\n\n  if (body.organizations.length === 0) {\n    Console.info(\"You are not a member of any organizations.\");\n  } else {\n    Console.rawInfo(_.pluck(body.organizations, \"name\").join(\"\\n\") + \"\\n\");\n  }\n  return 0;\n});\n\nmain.registerCommand({\n  name: 'admin members',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    add: { type: String },\n    remove: { type: String },\n    list: { type: Boolean }\n  },\n  pretty: function (options) {\n    // pretty if we're mutating; plain if we're listing (which is more likely to\n    // be used by scripts)\n    return options.add || options.remove;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  if (options.add && options.remove) {\n    Console.error(\n      \"Sorry, you can only add or remove one member at a time.\");\n    throw new main.ShowUsage;\n  }\n\n  var username = options.add || options.remove;\n\n  var conn = loggedInAccountsConnectionOrPrompt(\n    username ? \"edit organizations\" : \"show an organization's members\");\n\n  if (username ) {\n    // Adding or removing members\n    try {\n      conn.call(\n        options.add ? \"addOrganizationMember\": \"removeOrganizationMember\",\n        options.args[0], username);\n    } catch (err) {\n      Console.error(\"Error \" +\n                    (options.add ? \"adding\" : \"removing\") +\n                    \" member: \" + err.reason);\n      return 1;\n    }\n\n    Console.info(username + \" \" +\n                         (options.add ? \"added to\" : \"removed from\") +\n                         \" organization \" + options.args[0] + \".\");\n  } else {\n    // Showing the members of an org\n    try {\n      var result = conn.call(\"showOrganization\", options.args[0]);\n    } catch (err) {\n      Console.error(\"Error showing organization: \" + err.reason);\n      return 1;\n    }\n\n    var members = _.pluck(result, \"username\");\n    Console.rawInfo(members.join(\"\\n\") + \"\\n\");\n  }\n\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// self-test\n///////////////////////////////////////////////////////////////////////////////\n\n// XXX we should find a way to make self-test fully self-contained, so that it\n// ignores \"packageDirs\" (ie, it shouldn't fail just because you happen to be\n// sitting in an app with packages that don't build)\n\nmain.registerCommand({\n  name: 'self-test',\n  minArgs: 0,\n  maxArgs: 1,\n  options: {\n    changed: { type: Boolean },\n    'force-online': { type: Boolean },\n    slow: { type: Boolean },\n    galaxy: { type: Boolean },\n    browserstack: { type: Boolean },\n    phantom: { type: Boolean },\n    // Indicates whether these self-tests are running headless, e.g. in a\n    // continuous integration testing environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    history: { type: Number },\n    list: { type: Boolean },\n    file: { type: String },\n    exclude: { type: String },\n    // Skip tests w/ this tag\n    'without-tag': { type: String },\n    // Only run tests with this tag\n    'with-tag': { type: String },\n    junit: { type: String },\n    retries: { type: Number, default: 2 },\n  },\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (! files.inCheckout()) {\n    Console.error(\"self-test is only supported running from a checkout\");\n    return 1;\n  }\n\n  var selftest = require('../tool-testing/selftest.js');\n\n  // Auto-detect whether to skip 'net' tests, unless --force-online is passed.\n  var offline = false;\n  if (!options['force-online']) {\n    try {\n      require('../utils/http-helpers.js').getUrl(\"http://www.google.com/\");\n    } catch (e) {\n      if (e instanceof files.OfflineError) {\n        offline = true;\n      }\n    }\n  }\n\n  var compileRegexp = function (str) {\n    try {\n      return new RegExp(str);\n    } catch (e) {\n      if (!(e instanceof SyntaxError)) {\n        throw e;\n      }\n      Console.error(\"Bad regular expression: \" + str);\n      return null;\n    }\n  };\n\n  var testRegexp = undefined;\n  if (options.args.length) {\n    testRegexp = compileRegexp(options.args[0]);\n    if (! testRegexp) {\n      return 1;\n    }\n  }\n\n  var fileRegexp = undefined;\n  if (options.file) {\n    fileRegexp = compileRegexp(options.file);\n    if (! fileRegexp) {\n      return 1;\n    }\n  }\n\n  var excludeRegexp = undefined;\n  if (options.exclude) {\n    excludeRegexp = compileRegexp(options.exclude);\n    if (! excludeRegexp) {\n      return 1;\n    }\n  }\n\n  if (options.list) {\n    selftest.listTests({\n      onlyChanged: options.changed,\n      offline: offline,\n      includeSlowTests: options.slow,\n      galaxyOnly: options.galaxy,\n      testRegexp: testRegexp,\n      fileRegexp: fileRegexp,\n      'without-tag': options['without-tag'],\n      'with-tag': options['with-tag']\n    });\n\n    return 0;\n  }\n\n  const clients = {\n    puppeteer: true, // Puppeteer is always enabled.\n    phantom: options.phantom,\n    browserstack: options.browserstack,\n  };\n\n  if (options.headless) {\n    // There's no point in spinning the spinner when we're running\n    // continuous integration tests.\n    Console.setHeadless(true);\n  }\n\n  return selftest.runTests({\n    // filtering options\n    onlyChanged: options.changed,\n    offline: offline,\n    includeSlowTests: options.slow,\n    galaxyOnly: options.galaxy,\n    testRegexp: testRegexp,\n    fileRegexp: fileRegexp,\n    excludeRegexp: excludeRegexp,\n    // other options\n    retries: options.retries,\n    historyLines: options.history,\n    clients: clients,\n    junit: options.junit && files.pathResolve(options.junit),\n    'without-tag': options['without-tag'],\n    'with-tag': options['with-tag']\n  });\n\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// list-sites\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'list-sites',\n  minArgs: 0,\n  maxArgs: 0,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  auth.pollForRegistrationCompletion();\n  if (! auth.isLoggedIn()) {\n    Console.error(\n      \"You must be logged in for that. Try \" +\n      Console.command(\"'meteor login'\") + \".\");\n    return 1;\n  }\n\n  return deploy.listSites();\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// admin get-machine\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'admin get-machine',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    json: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    // By default, we give you a machine for 5 minutes. You can request up to\n    // 15. (Meteor Software can reserve machines for longer than that.)\n    minutes: { type: Number }\n  },\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  Console.warn();\n  Console.warn(\"The 'meteor admin get-machine' command has been disabled and\",\n    \"the build farm has been discontinued.\");\n  Console.warn();\n  Console.info(\"As of Meteor 1.4, packages with binary dependencies are\",\n    \"automatically compiled when they are installed in an application,\",\n    \"assuming the target machine has a basic compiler toolchain.\");\n  Console.info();\n  Console.info(\"To see the requirements for this compilation step,\",\n    \"consult the platform requirements for 'node-gyp':\");\n  Console.info(\n    Console.url(\"https://github.com/nodejs/node-gyp\"),\n    Console.options({ indent: 2 })\n  );\n  Console.info();\n  return 1;\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// admin progressbar-test\n///////////////////////////////////////////////////////////////////////////////\n\n// A test command to print a progressbar. Useful for manual testing.\nmain.registerCommand({\n  name: 'admin progressbar-test',\n  options: {\n    secs: { type: Number, default: 20 },\n    spinner: { type: Boolean, default: false }\n  },\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  buildmessage.enterJob({ title: \"A test progressbar\" }, function () {\n    var progress = buildmessage.getCurrentProgressTracker();\n    var totalProgress = { current: 0, end: options.secs, done: false };\n    var i = 0;\n    var n = options.secs;\n\n    if (options.spinner) {\n      totalProgress.end = undefined;\n    }\n\n    new Promise(function (resolve) {\n      function updateProgress() {\n        i++;\n        if (! options.spinner) {\n          totalProgress.current = i;\n        }\n\n        if (i === n) {\n          totalProgress.done = true;\n          progress.reportProgress(totalProgress);\n          resolve();\n        } else {\n          progress.reportProgress(totalProgress);\n          setTimeout(updateProgress, 1000);\n        }\n      }\n\n      setTimeout(updateProgress);\n    }).await();\n  });\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// dummy\n///////////////////////////////////////////////////////////////////////////////\n\n// Dummy test command. Used for automated testing of the command line\n// option parser.\n\nmain.registerCommand({\n  name: 'dummy',\n  options: {\n    ething: { type: String, short: \"e\", required: true },\n    port: { type: Number, short: \"p\", default: DEFAULT_PORT },\n    url: { type: Boolean, short: \"U\" },\n    'delete': { type: Boolean, short: \"D\" },\n    changed: { type: Boolean }\n  },\n  maxArgs: 2,\n  hidden: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  var p = function (key) {\n    if (_.has(options, key)) {\n      return JSON.stringify(options[key]);\n    }\n    return 'none';\n  };\n\n  Console.info(p('ething') + \" \" + p('port') + \" \" + p('changed') +\n                       \" \" + p('args'));\n  if (options.url) {\n    Console.info('url');\n  }\n  if (options['delete']) {\n    Console.info('delete');\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// throw-error\n///////////////////////////////////////////////////////////////////////////////\n\n// Dummy test command. Used to test that stack traces work from an installed\n// Meteor tool.\n\nmain.registerCommand({\n  name: 'throw-error',\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function () {\n  throw new Error(\"testing stack traces!\"); // #StackTraceTest this line is found in tests/source-maps.js\n});\n"],"file":"tools/cli/commands.js.map"}