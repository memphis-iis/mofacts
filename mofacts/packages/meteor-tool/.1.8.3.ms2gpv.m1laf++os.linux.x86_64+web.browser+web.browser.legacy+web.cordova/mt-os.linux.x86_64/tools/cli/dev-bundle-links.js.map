{"version":3,"sources":["/tools/cli/dev-bundle-links.js"],"names":["fs","require","convertToOSPath","exports","makeLink","target","linkPath","tempPath","Math","random","toString","slice","symlinkSync","e","writeFileSync","renameSync","sync","readLink","stat","lstatSync","isSymbolicLink","realpathSync","isFile","readFileSync"],"mappings":"AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAsBD,OAAO,CAAC,yBAAD,CAAnC;;AAEAE,OAAO,CAACC,QAAR,GAAmB,UAAUC,MAAV,EAAkBC,QAAlB,EAA4B;AAC7CD,EAAAA,MAAM,GAAGH,eAAe,CAACG,MAAD,CAAxB;AACAC,EAAAA,QAAQ,GAAGJ,eAAe,CAACI,QAAD,CAA1B;AAEA,MAAIC,QAAQ,GAAGD,QAAQ,GAAG,GAAX,GAAiBE,IAAI,CAACC,MAAL,GAAcC,QAAd,CAAuB,EAAvB,EAA2BC,KAA3B,CAAiC,CAAjC,CAAhC;;AAEA,MAAI;AACFX,IAAAA,EAAE,CAACY,WAAH,CAAeP,MAAf,EAAuBE,QAAvB,EAAiC,UAAjC;AACD,GAFD,CAEE,OAAOM,CAAP,EAAU;AACVb,IAAAA,EAAE,CAACc,aAAH,CAAiBP,QAAjB,EAA2BF,MAA3B,EAAmC,MAAnC;AACD;;AAED,MAAI;AACFL,IAAAA,EAAE,CAACe,UAAH,CAAcR,QAAd,EAAwBD,QAAxB;AACD,GAFD,CAEE,OAAOO,CAAP,EAAU;AACV;AACAZ,IAAAA,OAAO,CAAC,QAAD,CAAP,CAAkBe,IAAlB,CAAuBV,QAAvB;;AACAN,IAAAA,EAAE,CAACe,UAAH,CAAcR,QAAd,EAAwBD,QAAxB;AACD;AACF,CAnBD,C,CAqBA;;;AACAH,OAAO,CAACc,QAAR,GAAmB,UAAUX,QAAV,EAAoB;AACrCA,EAAAA,QAAQ,GAAGJ,eAAe,CAACI,QAAD,CAA1B;AAEA,MAAIY,IAAI,GAAGlB,EAAE,CAACmB,SAAH,CAAab,QAAb,CAAX;;AACA,MAAIY,IAAI,CAACE,cAAL,EAAJ,EAA2B;AACzBd,IAAAA,QAAQ,GAAGN,EAAE,CAACqB,YAAH,CAAgBf,QAAhB,CAAX;AACD,GAFD,MAEO,IAAIY,IAAI,CAACI,MAAL,EAAJ,EAAmB;AACxBhB,IAAAA,QAAQ,GAAGN,EAAE,CAACuB,YAAH,CAAgBjB,QAAhB,EAA0B,MAA1B,CAAX;AACD;;AAED,SAAOA,QAAP;AACD,CAXD","sourcesContent":["const fs = require(\"fs\");\nconst { convertToOSPath } = require(\"./convert-to-os-path.js\");\n\nexports.makeLink = function (target, linkPath) {\n  target = convertToOSPath(target);\n  linkPath = convertToOSPath(linkPath);\n\n  var tempPath = linkPath + \"-\" + Math.random().toString(36).slice(2);\n\n  try {\n    fs.symlinkSync(target, tempPath, \"junction\");\n  } catch (e) {\n    fs.writeFileSync(tempPath, target, \"utf8\");\n  }\n\n  try {\n    fs.renameSync(tempPath, linkPath);\n  } catch (e) {\n    // If renaming fails, try unlinking first.\n    require(\"rimraf\").sync(linkPath);\n    fs.renameSync(tempPath, linkPath);\n  }\n};\n\n// Note: this function returns an OS-specific path!\nexports.readLink = function (linkPath) {\n  linkPath = convertToOSPath(linkPath);\n\n  var stat = fs.lstatSync(linkPath);\n  if (stat.isSymbolicLink()) {\n    linkPath = fs.realpathSync(linkPath);\n  } else if (stat.isFile()) {\n    linkPath = fs.readFileSync(linkPath, \"utf8\");\n  }\n\n  return linkPath;\n};\n"],"file":"tools/cli/dev-bundle-links.js.map"}