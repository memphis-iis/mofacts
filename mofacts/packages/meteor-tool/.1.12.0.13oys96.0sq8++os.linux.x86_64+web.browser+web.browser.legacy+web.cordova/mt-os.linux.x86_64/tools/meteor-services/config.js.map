{"version":3,"sources":["/tools/meteor-services/config.js"],"names":["module","export","getOauthUrl","getAccountsApiUrl","getAuthDDPUrl","getBuildFarmUrl","getBuildFarmDomain","getPackageServerUrl","getPackageServerDomain","getPackageStatsServerUrl","getPackageStatsServerDomain","getPackageServerFilePrefix","getPackagesDirectoryName","getLocalPackageCacheFilename","getPackageStorage","getIsopacketRoot","getAccountsDomain","getSessionFilePath","urlParse","link","parse","v","pathJoin","getCurrentToolsDir","getHomeDir","inCheckout","tropohouse","default","process","env","METEOR_BUILD_FARM_URL","host","METEOR_PACKAGE_SERVER_URL","METEOR_PACKAGE_STATS_SERVER_URL","serverUrl","replace","prefix","options","root","METEOR_SESSION_FILE"],"mappings":"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","sourcesContent":["import { parse as urlParse } from 'url';\nimport {\n  pathJoin,\n  getCurrentToolsDir,\n  getHomeDir,\n  inCheckout,\n} from '../fs/files';\nimport tropohouse from '../packaging/tropohouse.js';\n\n// A few functions in the `meteor` tool talk to Meteor Software servers:\n// primarily checking for updates, logging into your Meteor account, and\n// deploying apps to the Meteor Software free hosting sandbox, publishing\n// packages, getting an ssh access to a build farm. These functions need\n// configuration.\n\n// Base URL for Meteor Accounts OAuth services. Endpoints include /authorize\n// and /token.\nexport function getOauthUrl() {\n  return \"https://www.meteor.com/oauth2\";\n}\n\n// Base URL for Meteor Accounts API. Endpoints include '/login' and\n// '/logoutById'.\nexport function getAccountsApiUrl() {\n  return \"https://www.meteor.com/api/v1\";\n}\n\n// URL for the DDP interface to Meteor Accounts.\nexport function getAuthDDPUrl() {\n  return \"https://www.meteor.com/auth\";\n}\n\n// URL for the DDP interface to the meteor build farm, typically\n// \"https://build.meteor.com\".\nexport function getBuildFarmUrl() {\n  return process.env.METEOR_BUILD_FARM_URL || \"https://build.meteor.com\";\n}\n\nexport function getBuildFarmDomain() {\n  return urlParse(getBuildFarmUrl()).host;\n}\n\n// URL for the DDP interface to the package server, typically\n// \"https://packages.meteor.com\".\nexport function getPackageServerUrl() {\n  return process.env.METEOR_PACKAGE_SERVER_URL ||\n    \"https://packages.meteor.com\";\n}\n\nexport function getPackageServerDomain() {\n  return urlParse(getPackageServerUrl()).host;\n}\n\nexport function getPackageStatsServerUrl() {\n  return process.env.METEOR_PACKAGE_STATS_SERVER_URL ||\n    \"https://activity.meteor.com\";\n}\n\nexport function getPackageStatsServerDomain() {\n  return urlParse(getPackageStatsServerUrl()).host;\n}\n\n// Note: this is NOT guaranteed to return a distinct prefix for every\n// conceivable URL.  But it sure ought to return a distinct prefix for every\n// server we actually use.\nexport function getPackageServerFilePrefix(serverUrl) {\n  if (!serverUrl) {\n    serverUrl = getPackageServerUrl();\n  }\n\n  // Chop off http:// and https:// and trailing slashes.\n  serverUrl = serverUrl.replace(/^\\https:\\/\\//, '');\n  serverUrl = serverUrl.replace(/^\\http:\\/\\//, '');\n  serverUrl = serverUrl.replace(/\\/+$/, '');\n\n  // Chop off meteor.com.\n  serverUrl = serverUrl.replace(/\\.meteor\\.com$/, '');\n\n  // Replace other weird stuff with X.\n  serverUrl = serverUrl.replace(/[^a-zA-Z0-9.-]/g, 'X');\n\n  return serverUrl;\n}\n\nexport function getPackagesDirectoryName(serverUrl) {\n  var prefix = getPackageServerFilePrefix(serverUrl);\n  if (prefix !== 'packages') {\n    prefix = pathJoin('packages-from-server', prefix);\n  }\n\n  return prefix;\n}\n\nexport function getLocalPackageCacheFilename(serverUrl) {\n  var prefix = getPackageServerFilePrefix(serverUrl);\n\n  // Should look like 'packages.data.db' in the default case\n  // (packages.data.json before 0.9.4).\n  return prefix + \".data.db\";\n}\n\nexport function getPackageStorage(options) {\n  options = options || {};\n  var root = options.root || tropohouse.default.root;\n  return pathJoin(root, \"package-metadata\", \"v2.0.1\",\n    getLocalPackageCacheFilename(options.serverUrl));\n}\n\nexport function getIsopacketRoot() {\n  if (inCheckout()) {\n    return pathJoin(getCurrentToolsDir(), '.meteor', 'isopackets');\n  } else {\n    return pathJoin(getCurrentToolsDir(), 'isopackets');\n  }\n}\n\n// Return the domain name of the current Meteor Accounts server in\n// use. This is used as a key for storing your Meteor Accounts\n// login token.\nexport function getAccountsDomain() {\n  return \"www.meteor.com\";\n}\n\n// Path to file that contains our credentials for any services that\n// we're logged in to. Typically .meteorsession in the user's home\n// directory.\nexport function getSessionFilePath() {\n  // METEOR_SESSION_FILE is for automated testing purposes only.\n  return process.env.METEOR_SESSION_FILE ||\n    pathJoin(getHomeDir(), '.meteorsession');\n}\n"],"file":"tools/meteor-services/config.js.map"}