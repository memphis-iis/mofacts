{"version":3,"sources":["/tools/cli/commands-cordova.js"],"names":["_","module","link","default","v","main","Console","catalog","buildmessage","CORDOVA_PLATFORMS","ensureDevBundleDependencies","filterPlatforms","createProjectContext","appDir","ProjectContext","projectContext","projectDir","captureAndExit","readProjectMetadata","doAddPlatform","options","CordovaProject","setVerbose","verbose","platformsToAdd","args","installedPlatforms","platformList","getPlatforms","platform","contains","error","jobHasMessages","cordovaProject","concat","cordovaPlatforms","ensurePlatformsAreSynchronized","write","info","checkPlatformRequirements","doRemovePlatform","PlatformList","platformsToRemove","DEFAULT_PLATFORMS","without","process","registerCommand","name","type","Boolean","short","minArgs","maxArgs","Infinity","requiresApp","catalogRefresh","Refresh","Never","notOnWindows","rawInfo","join","hidden","url"],"mappings":"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","sourcesContent":["import _ from 'underscore';\nimport main from './main.js';\nimport { Console } from '../console/console.js';\nimport catalog from '../packaging/catalog/catalog.js';\nimport buildmessage from '../utils/buildmessage.js';\nimport {\n  CORDOVA_PLATFORMS,\n  ensureDevBundleDependencies,\n  filterPlatforms,\n} from '../cordova/index.js';\n\nfunction createProjectContext(appDir) {\n  import { ProjectContext } from '../project-context.js';\n\n  const projectContext = new ProjectContext({\n    projectDir: appDir\n  });\n  main.captureAndExit('=> Errors while initializing project:', () => {\n    // We're just reading metadata here; we don't need to resolve constraints.\n    projectContext.readProjectMetadata();\n  });\n  return projectContext;\n}\n\nfunction doAddPlatform(options) {\n  import { CordovaProject } from '../cordova/project.js';\n\n  Console.setVerbose(!!options.verbose);\n\n  const projectContext = createProjectContext(options.appDir);\n\n  const platformsToAdd = options.args;\n  let installedPlatforms = projectContext.platformList.getPlatforms();\n\n  main.captureAndExit('', 'adding platforms', () => {\n    for (var platform of platformsToAdd) {\n      if (_.contains(installedPlatforms, platform)) {\n        buildmessage.error(`${platform}: platform is already added`);\n      } else if (!_.contains(CORDOVA_PLATFORMS, platform)) {\n        buildmessage.error(`${platform}: no such platform`);\n      }\n    }\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    const cordovaProject = new CordovaProject(projectContext);\n    if (buildmessage.jobHasMessages()) return;\n\n    installedPlatforms = installedPlatforms.concat(platformsToAdd);\n    const cordovaPlatforms = filterPlatforms(installedPlatforms);\n    cordovaProject.ensurePlatformsAreSynchronized(cordovaPlatforms);\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    // Only write the new platform list when we have succesfully synchronized\n    projectContext.platformList.write(installedPlatforms);\n\n    for (var platform of platformsToAdd) {\n      Console.info(`${platform}: added platform`);\n      if (_.contains(cordovaPlatforms, platform)) {\n        cordovaProject.checkPlatformRequirements(platform);\n      }\n    }\n  });\n}\n\nfunction doRemovePlatform(options) {\n  import { CordovaProject } from '../cordova/project.js';\n  import { PlatformList } from '../project-context.js';\n\n  const projectContext = createProjectContext(options.appDir);\n\n  const platformsToRemove = options.args;\n  let installedPlatforms = projectContext.platformList.getPlatforms();\n\n  main.captureAndExit('', 'removing platforms', () => {\n    for (platform of platformsToRemove) {\n      // Explain why we can't remove server or browser platforms\n      if (_.contains(PlatformList.DEFAULT_PLATFORMS, platform)) {\n        buildmessage.error(`${platform}: cannot remove platform in this \\\nversion of Meteor`);\n      } else if (!_.contains(installedPlatforms, platform)) {\n        buildmessage.error(`${platform}: platform is not in this project`);\n      }\n    }\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    installedPlatforms = _.without(installedPlatforms, ...platformsToRemove);\n    projectContext.platformList.write(installedPlatforms);\n\n    for (platform of platformsToRemove) {\n      Console.info(`${platform}: removed platform`);\n    }\n\n    if (process.platform !== 'win32') {\n      const cordovaProject = new CordovaProject(projectContext);\n      if (buildmessage.jobHasMessages()) return;\n      const cordovaPlatforms = filterPlatforms(installedPlatforms);\n      cordovaProject.ensurePlatformsAreSynchronized(cordovaPlatforms);\n    }\n  });\n}\n\n// Add one or more Cordova platforms\nmain.registerCommand({\n  name: 'add-platform',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 1,\n  maxArgs: Infinity,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never(),\n  notOnWindows: false\n}, function (options) {\n  ensureDevBundleDependencies();\n    doAddPlatform(options);\n});\n\n// Remove one or more Cordova platforms\nmain.registerCommand({\n  name: 'remove-platform',\n  minArgs: 1,\n  maxArgs: Infinity,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  ensureDevBundleDependencies();\n  doRemovePlatform(options);\n});\n\nmain.registerCommand({\n  name: 'list-platforms',\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  const projectContext = createProjectContext(options.appDir);\n\n  const installedPlatforms = projectContext.platformList.getPlatforms();\n\n  Console.rawInfo(installedPlatforms.join('\\n') + '\\n');\n});\n\nmain.registerCommand({\n  name: 'install-sdk',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 0,\n  maxArgs: Infinity,\n  catalogRefresh: new catalog.Refresh.Never(),\n  hidden: true,\n  notOnWindows: true\n}, function (options) {\n  Console.setVerbose(!!options.verbose);\n\n  Console.info(\"Please follow the installation instructions in the mobile guide:\");\n  Console.info(Console.url(\"http://guide.meteor.com/cordova.html#installing-prerequisites\"));\n\n  return 0;\n});\n\nmain.registerCommand({\n  name: 'configure-android',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 0,\n  maxArgs: Infinity,\n  catalogRefresh: new catalog.Refresh.Never(),\n  hidden: true,\n  notOnWindows: true\n}, function (options) {\n  Console.setVerbose(!!options.verbose);\n\n  Console.info(`You can launch the Android SDK Manager from within Android \\\nStudio.\nSee`, Console.url(\"http://developer.android.com/tools/help/sdk-manager.html\"), `\nAlternatively, you can launch it by running the 'android' command.\n(This requires that you have set ANDROID_HOME and added ANDROID_HOME/tools \\\nto your PATH.)`);\n\n  return 0;\n});\n\nmain.registerCommand({\n  name: 'ensure-cordova-dependencies',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 0,\n  maxArgs: Infinity,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never(),\n}, function (options) {\n  Console.setVerbose(!!options.verbose);\n\n  ensureDevBundleDependencies();\n  Console.info(\"Cordova dependencies are installed.\");\n});\n"],"file":"tools/cli/commands-cordova.js.map"}