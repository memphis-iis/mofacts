{"version":3,"sources":["/tools/tool-testing/clients/phantom/index.js"],"names":["module","export","default","PhantomClient","execFile","link","v","Client","enterJob","ensureDependencies","convertToOSPath","pathJoin","getCurrentToolsDir","NPM_DEPENDENCIES","constructor","options","title","npmPackageExports","require","name","process","_logError","connect","phantomPath","path","scriptPath","url","error","stdout","stderr","console","log","stop","kill","pushClients","clients","appConfig","push"],"mappings":"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","sourcesContent":["import { execFile } from 'child_process';\nimport Client from '../../client.js';\nimport { enterJob } from '../../../utils/buildmessage.js';\nimport { ensureDependencies } from '../../../cli/dev-bundle-helpers.js';\nimport {\n  convertToOSPath,\n  pathJoin,\n  getCurrentToolsDir,\n} from '../../../fs/files';\n\nconst NPM_DEPENDENCIES = {\n  'phantomjs-prebuilt': '2.1.14',\n};\n\nexport default class PhantomClient extends Client {\n  constructor(options) {\n    super(options);\n\n    enterJob({\n      title: 'Installing PhantomJS in Meteor tool',\n    }, () => {\n      ensureDependencies(NPM_DEPENDENCIES);\n    });\n\n    this.npmPackageExports = require(\"phantomjs-prebuilt\");\n\n    this.name = \"phantomjs\";\n    this.process = null;\n\n    this._logError = true;\n  }\n\n  connect() {\n    const phantomPath = this.npmPackageExports.path;\n    const scriptPath = pathJoin(getCurrentToolsDir(), \"tools\",\n      \"tool-testing\", \"phantom\", \"open-url.js\");\n    this.process = execFile(\n      phantomPath,\n      [\n        \"--load-images=no\",\n        convertToOSPath(scriptPath), this.url\n      ],\n      {},\n      (error, stdout, stderr) => {\n        if (this._logError && error) {\n          console.log(\n            \"PhantomJS exited with error \", error,\n            \"\\nstdout:\\n\", stdout,\n            \"\\nstderr:\\n\", stderr\n          );\n        } else if (stderr) {\n          console.log(\"PhantomJS stderr:\\n\", stderr);\n        }\n      }\n    );\n  }\n\n  stop() {\n    // Suppress the expected SIGTERM exit 'failure'\n    this._logError = false;\n    this.process && this.process.kill();\n    this.process = null;\n  }\n\n  static pushClients(clients, appConfig) {\n    clients.push(new PhantomClient(appConfig));\n  }\n}"],"file":"tools/tool-testing/clients/phantom/index.js.map"}