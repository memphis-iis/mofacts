{"version":3,"sources":["/tools/meteor-services/auth.js"],"names":["_","require","utils","files","config","httpHelpers","fiberHelpers","querystring","url","Console","auth","exports","loadDDP","loadIsopackage","DDP","openAccountsConnection","connect","getAuthDDPUrl","headers","getUserAgent","withAccountsConnection","f","self","conn","args","push","result","apply","close","loggedInAccountsConnection","token","connection","Promise","resolve","reject","resume","wait","err","catch","error","await","sessionMethodCaller","methodName","options","session","getSessionId","getAccountsDomain","timer","cleanUp","clearTimeout","res","timeout","undefined","setTimeout","Error","then","setSessionId","readSessionData","sessionPath","getSessionFilePath","exists","JSON","parse","readFile","encoding","writeSessionData","data","tries","tempPath","pathJoin","pathDirname","Math","floor","random","fd","open","e","buf","Buffer","from","stringify","write","length","rename","getSession","sessionData","domain","sessions","ensureSessionType","type","has","Object","keys","forEach","key","writeMeteorAccountsUsername","username","logOutAllSessions","each","logOutSession","crypto","userId","registrationUrl","pendingRevoke","Array","tokenId","loggedIn","currentUsername","removePendingRevoke","tokenIds","difference","tryRevokeOldTokens","assign","warned","domainsWithRevokedTokens","logoutFailWarning","firstTry","sendAuthorizeRequest","clientId","redirectUri","state","authCodeUrl","getOauthUrl","response_type","client_id","redirect_uri","codeResult","request","method","strictSSL","useAuthHeader","response","statusCode","location","hostname","oauthFlow","credentialToken","randomBytes","toString","authorizeResult","redirectResult","loginResult","oauth","credentialSecret","body","id","sessionType","doInteractivePasswordLogin","loginData","email","password","loginFailed","suppressErrorMessage","maybeCloseConnection","readLine","echo","prompt","stream","process","stderr","call","meteorAccountsLoginInfo","clientInfo","getAgentInfo","retry","doUsernamePasswordLogin","trim","loginCommand","overwriteExistingToken","loginOptions","logoutCommand","wasLoggedIn","alreadyPolledForRegistration","pollForRegistrationCompletion","noLogout","bindEnvironment","whoAmICommand","command","rawInfo","registerOrLogIn","methodCaller","validEmail","alreadyExisted","sentRegistrationEmail","animationFrame","lastLinePrinted","setInterval","spinner","rawError","CARRIAGE_RETURN","stopSpinner","join","clearInterval","waitForRegistrationResult","errorType","maybePrintRegistrationLink","leadingNewline","onlyAllowIfRegistered","firstTime","sessionId","getSessionToken","isLoggedIn","loggedInUsername","getAccountsConfiguration","accountsConfiguration","registerStore","update","msg","fields","service","serviceConfigurationsSub","subscribeAndWait","loginWithTokenOrOAuth","setUpOnReconnect","onReconnect","existingToken","loginStyle"],"mappings":"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","sourcesContent":["var _ = require('underscore');\nvar utils = require('../utils/utils.js');\nvar files = require('../fs/files');\nvar config = require('./config.js');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar querystring = require('querystring');\nvar url = require('url');\nvar Console = require('../console/console.js').Console;\n\nvar auth = exports;\n\nfunction loadDDP() {\n  return require(\"../tool-env/isopackets.js\")\n    .loadIsopackage(\"ddp-client\")\n    .DDP;\n}\n\n// Opens and returns a DDP connection to the accounts server. Remember\n// to close it when you're done with it!\nvar openAccountsConnection = function () {\n  return loadDDP().connect(config.getAuthDDPUrl(), {\n    headers: { 'User-Agent': httpHelpers.getUserAgent() }\n  });\n};\n\n// Returns a function that runs `f`, appending an additional argument\n// that is a connection to the accounts server, which gets closed when\n// `f` returns or throws.\nvar withAccountsConnection = function (f) {\n  return function (...args) {\n    var self = this;\n    var conn = openAccountsConnection();\n    args.push(conn);\n    try {\n      var result = f.apply(self, args);\n    } finally {\n      conn.close();\n    }\n    return result;\n  };\n};\n\n// Open a DDP connection to the accounts server and log in using the\n// provided token. Returns the connection, or null if login fails.\n//\n// XXX if we reconnect we won't reauthenticate. Fix that before using\n// this for long-lived connections.\nvar loggedInAccountsConnection = function (token) {\n  var connection = loadDDP().connect(\n    config.getAuthDDPUrl()\n  );\n\n  return new Promise(function (resolve, reject) {\n    connection.apply(\n      'login',\n      [{ resume: token }],\n      { wait: true },\n      function (err) {\n        err ? reject(err) : resolve(connection);\n      }\n    );\n\n  }).catch(function (err) {\n    connection.close();\n\n    if (err.error === 403) {\n      // This is not an ideal value for the error code, but it means\n      // \"server rejected our access token\". For example, it expired\n      // or we revoked it from the web.\n      return null;\n    }\n\n    // Something else went wrong\n    throw err;\n\n  }).await();\n};\n\n// The accounts server has some wrapped methods that take and return\n// session identifiers. To call these methods, we add our current\n// session identifier (or null, if we don't have one) as the last\n// argument to the method. The accounts server returns an object with\n// keys 'result' (the actual method result) and 'session' (the new\n// session identifier we should use, if it created a new session for\n// us).\n// options can include:\n//  - timeout: a timeout after which an exception will be thrown if the\n//    method hasn't returned yet\n//  - connection: an open connection to the accounts server. If not\n//    provided, one will be opened and then closed before returning.\nvar sessionMethodCaller = function (methodName, options) {\n  options = options || {};\n  return function (...args) {\n    args.push({\n      session: auth.getSessionId(config.getAccountsDomain()) || null\n    });\n\n    var timer;\n    var conn = options.connection || openAccountsConnection();\n\n    function cleanUp() {\n      timer && clearTimeout(timer);\n      options.connection || conn.close();\n    }\n\n    return new Promise(function (resolve, reject) {\n      conn.apply(methodName, args, function (err, res) {\n        err ? reject(err) : resolve(res);\n      });\n\n      if (options.timeout !== undefined) {\n        timer = setTimeout(function () {\n          reject(new Error('Method call timed out'));\n        }, options.timeout);\n      }\n\n    }).then(function (result) {\n      cleanUp();\n\n      if (result) {\n        if (result.session) {\n          // The bindEnvironment call above ensures the file IO operations\n          // that happen in auth.setSessionId take place in a Fiber.\n          auth.setSessionId(config.getAccountsDomain(), result.session);\n        }\n        result = result.result;\n      }\n\n      return result;\n\n    }, function (err) {\n      cleanUp();\n      throw err;\n\n    }).await();\n  };\n};\n\nvar readSessionData = function () {\n  var sessionPath = config.getSessionFilePath();\n  if (! files.exists(sessionPath)) {\n    return {};\n  }\n  return JSON.parse(files.readFile(sessionPath, { encoding: 'utf8' }));\n};\n\nvar writeSessionData = function (data) {\n  var sessionPath = config.getSessionFilePath();\n\n  var tries = 0;\n  while (true) {\n    if (tries++ > 10) {\n      throw new Error(\"can't find a unique name for temporary file?\");\n    }\n\n    // Create a temporary file in the same directory where we\n    // ultimately want to write the session file. Use the exclusive\n    // flag to atomically ensure that the file doesn't exist, create\n    // it, and make it readable and writable only by the current\n    // user (mode 0600).\n    var tempPath =\n          files.pathJoin(files.pathDirname(sessionPath), '.meteorsession.' +\n                    Math.floor(Math.random() * 999999));\n    try {\n      var fd = files.open(tempPath, 'wx', 0o600);\n    } catch (e) {\n      continue;\n    }\n\n    try {\n      // Write `data` to the file.\n      var buf = Buffer.from(JSON.stringify(data, undefined, 2), 'utf8');\n      files.write(fd, buf, 0, buf.length, 0);\n    } finally {\n      files.close(fd);\n    }\n\n    // Atomically remove the old file (if any) and replace it with\n    // the temporary file we just created.\n    files.rename(tempPath, sessionPath);\n    return;\n  }\n};\n\nvar getSession = function (sessionData, domain) {\n  if (typeof (sessionData.sessions) !== \"object\") {\n    sessionData.sessions = {};\n  }\n  if (typeof (sessionData.sessions[domain]) !== \"object\") {\n    sessionData.sessions[domain] = {};\n  }\n  return sessionData.sessions[domain];\n};\n\n// types:\n// - \"meteor-account\": a login to your Meteor Account\n// We previously used:\n// - \"galaxy\": a login to a legacy Galaxy prototype server\nvar ensureSessionType = function (session, type) {\n  if (! _.has(session, 'type')) {\n    session.type = type;\n  } else if (session.type !== type) {\n    // Blow away whatever was there. We lose pendingRevokes but that's\n    // OK since this should never happen in normal operation. (It\n    // would happen if the Meteor Accounts server mode somewhere else\n    // and a Galaxy was deployed at its old address, for example).\n    Object.keys(session).forEach(function (key) {\n      delete session[key];\n    });\n    session.type = type;\n  }\n};\n\nvar writeMeteorAccountsUsername = function (username) {\n  var data = readSessionData();\n  var session = getSession(data, config.getAccountsDomain());\n  session.username = username;\n  writeSessionData(data);\n};\n\n// Given an object 'data' in the format returned by readSessionData,\n// modify it to make the user logged out.\nvar logOutAllSessions = function (data) {\n  _.each(data.sessions, function (session, domain) {\n    logOutSession(session);\n  });\n};\n\n// As logOutAllSessions, but for a session on a particular domain\n// rather than all sessions.\nvar logOutSession = function (session) {\n  var crypto = require('crypto');\n\n  delete session.username;\n  delete session.userId;\n  delete session.registrationUrl;\n\n  if (_.has(session, 'token')) {\n    if (! (session.pendingRevoke instanceof Array)) {\n      session.pendingRevoke = [];\n    }\n\n    // Delete the auth token itself, but save the tokenId, which is\n    // useless for authentication. The next time we're online, we'll\n    // send the tokenId to the server to revoke the token on the\n    // server side too.\n    if (typeof session.tokenId === \"string\") {\n      session.pendingRevoke.push(session.tokenId);\n    }\n    delete session.token;\n    delete session.tokenId;\n  }\n};\n\n// Given an object 'data' in the format returned by readSessionData,\n// return true if logged in, else false.\nvar loggedIn = function (data) {\n  return !! getSession(data, config.getAccountsDomain()).userId;\n};\n\n// Given an object 'data' in the format returned by readSessionData,\n// return the currently logged in user, or null if not logged in or if\n// the logged in user doesn't have a username.\nvar currentUsername = function (data) {\n  var sessionData = getSession(data, config.getAccountsDomain());\n  return sessionData.username || null;\n};\n\nvar removePendingRevoke = function (domain, tokenIds) {\n  var data = readSessionData();\n  var session = getSession(data, domain);\n  session.pendingRevoke = _.difference(session.pendingRevoke, tokenIds);\n  if (! session.pendingRevoke.length) {\n    delete session.pendingRevoke;\n  }\n  writeSessionData(data);\n};\n\n// If there are any logged out (pendingRevoke) tokens that haven't\n// been sent to the server for revocation yet, try to send\n// them. Reads the session file and then writes it back out to\n// disk. If the server can't be contacted, fail silently (and leave\n// the pending invalidations in the session file for next time).\n//\n// options:\n//  - timeout: request timeout in milliseconds\n//  - firstTry: cosmetic. set to true if we recently logged out a\n//    session. just changes the error message.\n//  - connection: an open connection to the accounts server. If not\n//    provided, this function will open one itself.\nvar tryRevokeOldTokens = function (options) {\n  options = Object.assign({\n    timeout: 5000\n  }, options || {});\n\n  var warned = false;\n  var domainsWithRevokedTokens = [];\n  _.each(readSessionData().sessions || {}, function (session, domain) {\n    if (session.pendingRevoke &&\n        session.pendingRevoke.length) {\n      domainsWithRevokedTokens.push(domain);\n    }\n  });\n\n  var logoutFailWarning = function (domain) {\n    if (! warned) {\n      // This isn't ideal but is probably better that saying nothing at all\n      Console.error(\"warning: \" +\n                    (options.firstTry ?\n                    \"couldn't\" : \"still trying to\") +\n                     \" confirm logout with \" + domain);\n      warned = true;\n    }\n  };\n\n  _.each(domainsWithRevokedTokens, function (domain) {\n    var data = readSessionData();\n    var session = data.sessions[domain] || {};\n    var tokenIds = session.pendingRevoke || [];\n    if (! tokenIds.length) {\n      return;\n    }\n\n    var url;\n\n\n    if (session.type === \"meteor-account\") {\n      try {\n        sessionMethodCaller('revoke', {\n          timeout: options.timeout,\n          connection: options.connection\n        })(tokenIds);\n        removePendingRevoke(domain, tokenIds);\n      } catch (err) {\n        logoutFailWarning(domain);\n      }\n      return;\n    } else if (session.type === \"galaxy\") {\n      // These are tokens from a legacy Galaxy prototype, which cannot be\n      // revoked (because the prototype no longer exists), but we can at least\n      // remove them from the file.\n      removePendingRevoke(domain, tokenIds);\n    } else {\n      // don't know how to revoke tokens of this type\n      logoutFailWarning(domain);\n      return;\n    }\n  });\n};\n\nvar sendAuthorizeRequest = function (clientId, redirectUri, state) {\n  var authCodeUrl = config.getOauthUrl() + \"/authorize?\" +\n        querystring.stringify({\n          state: state,\n          response_type: \"code\",\n          client_id: clientId,\n          redirect_uri: redirectUri\n        });\n\n  // It's very important that we don't have request follow the\n  // redirect for us, but instead issue the second request ourselves,\n  // since request would pass our credentials along to the redirected\n  // URL. See comments in http-helpers.js.\n  var codeResult = httpHelpers.request({\n    url: authCodeUrl,\n    method: 'POST',\n    strictSSL: true,\n    useAuthHeader: true\n  });\n\n  var response = codeResult.response;\n  if (response.statusCode !== 302 || ! response.headers.location) {\n    throw new Error('access-denied');\n  }\n\n  if (url.parse(response.headers.location).hostname !==\n      url.parse(redirectUri).hostname) {\n    // If we didn't get an immediate redirect to the redirectUri then\n    // presumably the oauth server is trying to interact with us (make\n    // us log in, authorize the client, or something like that). We're\n    // not a web browser so we can't participate in such things.\n    throw new Error('access-denied');\n  }\n\n  return { location: response.headers.location };\n};\n\n// Do an OAuth flow with the Meteor developer accounts server to log in\n// to an OAuth client. `conn` is expected to be a DDP connection to the\n// OAuth client app. Options are:\n//  - clientId: OAuth client id parameter\n//  - redirectUri: OAuth redirect_uri parameter\n//  - domain: the domain for saving the received login token on success\n//    in the Meteor session file\n//  - sessionType: the value of the 'type' field for the session saved\n//    in the Meteor session file on success\n// All options are required.\n//\n// Throws an error if the login is not successful.\nvar oauthFlow = function (conn, options) {\n  var crypto = require('crypto');\n  var credentialToken = crypto.randomBytes(16).toString('hex');\n\n  var authorizeResult = sendAuthorizeRequest(\n    options.clientId,\n    options.redirectUri,\n    credentialToken\n  );\n\n  // XXX We're using a test-only flag here to just get the raw\n  // credential secret (instead of a bunch of code that communicates the\n  // credential secret somewhere else); this should be temporary until\n  // we give this a nicer name and make it not just test only.\n  var redirectResult = httpHelpers.request({\n    url: authorizeResult.location + '&only_credential_secret_for_test=1',\n    method: 'GET',\n    strictSSL: true\n  });\n\n  var response = redirectResult.response;\n  // 'access-denied' isn't exactly right because it's possible that the server\n  // went down since our last request, but close enough.\n\n  if (response.statusCode !== 200) {\n    throw new Error('access-denied');\n  }\n\n  // XXX tokenId???\n  var loginResult = conn.apply('login', [{\n    oauth: {\n      credentialToken: credentialToken,\n      credentialSecret: response.body\n    }\n  }], { wait: true });\n\n  if (loginResult.token && loginResult.id) {\n    var data = readSessionData();\n    var session = getSession(data, options.domain);\n    ensureSessionType(session, options.sessionType);\n    session.token = loginResult.token;\n    writeSessionData(data);\n    return true;\n  } else {\n    throw new Error('login-failed');\n  }\n};\n\n// Prompt the user for a password, and then log in. Returns true if a\n// successful login was accomplished, else false.\n//\n// Options should include either 'email' or 'username', and may also\n// include:\n// - retry: if true, then if the user gets the password wrong,\n//   reprompt.\n// - suppressErrorMessage: true if the function should not print an\n//   error message to stderr if the login fails\n// - connection: an open connection to the accounts server. If not\n//   provided, this function will open its own connection.\nvar doInteractivePasswordLogin = function (options) {\n  var loginData = {};\n\n  if (_.has(options, 'username')) {\n    loginData.username = options.username;\n  } else if (_.has(options, 'email')) {\n    loginData.email = options.email;\n  } else {\n    throw new Error(\"Need username or email\");\n  }\n\n  if (_.has(options, 'password')) {\n    loginData.password = options.password;\n  }\n\n  var loginFailed = function () {\n    if (! options.suppressErrorMessage) {\n      Console.error(\"Login failed.\");\n    }\n  };\n\n  var conn = options.connection || openAccountsConnection();\n\n  var maybeCloseConnection = function () {\n    if (! options.connection) {\n      conn.close();\n    }\n  };\n\n  while (true) {\n    if (! _.has(loginData, 'password')) {\n      loginData.password = Console.readLine({\n        echo: false,\n        prompt: \"Password: \",\n        stream: process.stderr\n      });\n    }\n\n    try {\n      var result = conn.call('login', {\n        session: auth.getSessionId(config.getAccountsDomain()),\n        meteorAccountsLoginInfo: loginData,\n        clientInfo: utils.getAgentInfo()\n      });\n    } catch (err) {\n    }\n    if (result && result.token) {\n      break;\n    } else {\n      loginFailed();\n      if (options.retry) {\n        delete loginData.password;\n        Console.error();\n        continue;\n      } else {\n        maybeCloseConnection();\n        return false;\n      }\n    }\n  }\n\n  if (result.session) {\n    auth.setSessionId(config.getAccountsDomain(), result.session);\n  }\n\n  var data = readSessionData();\n  logOutAllSessions(data);\n  var session = getSession(data, config.getAccountsDomain());\n  ensureSessionType(session, \"meteor-account\");\n  session.username = result.username;\n  session.userId = result.id;\n  session.token = result.token;\n  session.tokenId = result.tokenId;\n  writeSessionData(data);\n  maybeCloseConnection();\n  return true;\n};\n\n// options are the same as for doInteractivePasswordLogin, except without\n// username and email.\nexports.doUsernamePasswordLogin = function (options) {\n  var username;\n\n  do {\n    username = Console.readLine({\n      prompt: \"Username: \",\n      stream: process.stderr\n    }).trim();\n  } while (username.length === 0);\n\n  return doInteractivePasswordLogin(Object.assign({}, options, {\n    username: username\n  }));\n};\n\nexports.doInteractivePasswordLogin = doInteractivePasswordLogin;\n\nexports.loginCommand = withAccountsConnection(function (options,\n                                                        connection) {\n  var data = readSessionData();\n\n  if (! getSession(data, config.getAccountsDomain()).token ||\n       options.overwriteExistingToken) {\n    var loginOptions = {};\n\n    if (options.email) {\n      loginOptions.email = Console.readLine({\n        prompt: \"Email: \",\n        stream: process.stderr\n      });\n    } else {\n      loginOptions.username = Console.readLine({\n        prompt: \"Username: \",\n        stream: process.stderr\n      });\n    }\n\n    loginOptions.connection = connection;\n\n    if (! doInteractivePasswordLogin(loginOptions)) {\n      return 1;\n    }\n  }\n\n  tryRevokeOldTokens({ firstTry: true, connection: connection });\n\n  data = readSessionData();\n  Console.error();\n  Console.error(\"Logged in\" +\n                (currentUsername(data) ? \" as \" + currentUsername(data) : \"\") +\n                \". Thanks for being a Meteor developer!\");\n  return 0;\n});\n\nexports.logoutCommand = function (options) {\n  var data = readSessionData();\n  var wasLoggedIn = !! loggedIn(data);\n  logOutAllSessions(data);\n  writeSessionData(data);\n\n  tryRevokeOldTokens({ firstTry: true });\n\n  if (wasLoggedIn) {\n    Console.error(\"Logged out.\");\n  } else {\n    // We called logOutAllSessions/writeSessionData anyway, out of an\n    // abundance of caution.\n    Console.error(\"Not logged in.\");\n  }\n};\n\n// If this is fully set up account (with a username and password), or\n// if not logged in, do nothing. If it is an account without a\n// username, contact the server and see if the user finished setting\n// it up, and if so grab and save the username. But contact the server\n// only once per run of the program. Options:\n//  - noLogout: boolean. Set to true if you don't want this function to\n//    log out the session if wehave an invalid credential (for example,\n//    if a caller wants to do its own error handling for invalid\n//    credentials). Defaults to false.\nvar alreadyPolledForRegistration = false;\nexports.pollForRegistrationCompletion = function (options) {\n  if (alreadyPolledForRegistration) {\n    return;\n  }\n  alreadyPolledForRegistration = true;\n\n  options = options || {};\n\n  var data = readSessionData();\n  var session = getSession(data, config.getAccountsDomain());\n  if (session.username || ! session.token) {\n    return;\n  }\n\n  // We are logged in but we don't yet have a username. Ask the server\n  // if a username was chosen since we last checked.\n  var username = null;\n  var connection = loggedInAccountsConnection(session.token);\n  var timer;\n\n  if (! connection) {\n    // Server says our credential isn't any good anymore! Get rid of\n    // it. Note that, out of an abundance of caution, this also will\n    // enqueue the credential for invalidation (on a future run, we\n    // will try to explicitly revoke the credential ourselves).\n    if (! options.noLogout) {\n      logOutSession(session);\n      writeSessionData(data);\n    }\n    return;\n  }\n\n  new Promise(function (resolve) {\n    connection.call('getUsername', function (err, username) {\n      // If anything went wrong, return null just as we would have if we\n      // hadn't bothered to ask the server.\n      resolve(err ? null : username);\n    });\n\n    timer = setTimeout(function () {\n      resolve(null);\n    }, 5000);\n\n  // Intentionally calling bindEnvironment on the .then callback rather\n  // than the function that calls resolve.\n  }).then(fiberHelpers.bindEnvironment(function (username) {\n    connection.close();\n    clearTimeout(timer);\n\n    if (username) {\n      writeMeteorAccountsUsername(username);\n    }\n\n  // We don't actually care about the result, just that the side-effects\n  // of writeMeteorAccountsUsername happen.\n  })).await();\n};\n\nexports.registrationUrl = function () {\n  var data = readSessionData();\n  var url = getSession(data, config.getAccountsDomain()).registrationUrl;\n  return url;\n};\n\nexports.whoAmICommand = function (options) {\n  auth.pollForRegistrationCompletion();\n\n  var data = readSessionData();\n  if (! loggedIn(data)) {\n    Console.error(\n      \"Not logged in. \" + Console.command(\"'meteor login'\") + \" to log in.\");\n    return 1;\n  }\n\n  var username = currentUsername(data);\n  if (username) {\n    Console.rawInfo(username + \"\\n\");\n    return 0;\n  }\n\n  var url = getSession(data, config.getAccountsDomain()).registrationUrl;\n  if (url) {\n    Console.error(\"You haven't chosen your username yet. To pick it, go here:\");\n    Console.error();\n    Console.error(Console.url(url));\n  } else {\n    // Won't happen in normal operation\n    Console.error(\"You haven't chosen your username yet.\");\n  }\n\n  return 1;\n};\n\n// Prompt for an email address. If it doesn't belong to a user, create\n// a new deferred registration account and log in as it. If it does,\n// try to log the user into it. Returns true on success (user is now\n// logged in) or false on failure (user gave up, can't talk to\n// network..)\nexports.registerOrLogIn = withAccountsConnection(function (connection) {\n  var result;\n  // Get their email\n  while (true) {\n    var email = Console.readLine({\n      prompt: \"Email: \",\n      stream: process.stderr\n    });\n\n    // Try to register\n    try {\n      var methodCaller = sessionMethodCaller(\n        'tryRegister',\n        { connection: connection }\n      );\n      result = methodCaller(email, utils.getAgentInfo());\n      break;\n    } catch (err) {\n      if (err.error === 400 && ! utils.validEmail(email)) {\n        if (email.trim().length) {\n          Console.error(\"Please double-check that address.\");\n          Console.error();\n        }\n      } else {\n        Console.error(\"\\nCouldn't connect to server. \" +\n                             \"Check your internet connection.\");\n        return false;\n      }\n    }\n  }\n\n  var loginResult;\n\n  if (! result.alreadyExisted) {\n    var data = readSessionData();\n    logOutAllSessions(data);\n    var session = getSession(data, config.getAccountsDomain());\n    ensureSessionType(session, \"meteor-account\");\n    session.token = result.token;\n    session.tokenId = result.tokenId;\n    session.userId = result.userId;\n    session.registrationUrl = result.registrationUrl;\n    writeSessionData(data);\n    return true;\n  } else if (result.alreadyExisted && result.sentRegistrationEmail) {\n    Console.error();\n    Console.error(\n      \"You need to pick a password for your account so that you can log in.\",\n      \"An email has been sent to you with the link.\");\n    Console.error();\n\n    var animationFrame = 0;\n    var lastLinePrinted = \"\";\n    var timer = setInterval(function () {\n      var spinner = ['-', '\\\\', '|', '/'];\n      lastLinePrinted = \"Waiting for you to register on the web... \" +\n        spinner[animationFrame];\n      Console.rawError(lastLinePrinted + Console.CARRIAGE_RETURN);\n      animationFrame = (animationFrame + 1) % spinner.length;\n    }, 200);\n    var stopSpinner = function () {\n      Console.rawError(new Array(lastLinePrinted.length + 1).join(' ') +\n                       Console.CARRIAGE_RETURN);\n      clearInterval(timer);\n    };\n\n    try {\n      var waitForRegistrationResult = connection.call(\n        'waitForRegistration',\n        email\n      );\n    } catch (e) {\n      stopSpinner();\n      if (e.errorType !== \"Meteor.Error\") {\n        throw e;\n      }\n      Console.error(\n        \"When you've picked your password, run \" +\n        Console.command(\"'meteor login'\") + \" to log in.\");\n      return false;\n    }\n\n    stopSpinner();\n    Console.error(\"Username: \" + waitForRegistrationResult.username);\n    loginResult = doInteractivePasswordLogin({\n      username: waitForRegistrationResult.username,\n      retry: true,\n      connection: connection\n    });\n    return loginResult;\n  } else if (result.alreadyExisted && result.username) {\n    Console.error(\"\\nLogging in as \" + Console.command(result.username) + \".\");\n\n    loginResult = doInteractivePasswordLogin({\n      username: result.username,\n      retry: true,\n      connection: connection\n    });\n    return loginResult;\n  } else {\n    // Hmm, got an email we don't understand.\n    Console.error(\n      \"\\nThere was a problem. Please log in with \" +\n      Console.command(\"'meteor login'\") + \".\");\n    return false;\n  }\n});\n\n// options: firstTime, leadingNewline\n// returns true if it printed something\nexports.maybePrintRegistrationLink = function (options) {\n  options = options || {};\n\n  auth.pollForRegistrationCompletion();\n\n  var data = readSessionData();\n  var session = getSession(data, config.getAccountsDomain());\n\n  if (session.userId && ! session.username && session.registrationUrl) {\n    if (options.leadingNewline) {\n      Console.error();\n    }\n    if (options.onlyAllowIfRegistered) {\n      // A stronger message: we're going to not allow whatever they were trying\n      // to do!\n      Console.error(\n        \"You need to claim a username and set a password on your Meteor\",\n        \"developer account to run this command. It takes about a minute at:\",\n        session.registrationUrl);\n      Console.error();\n    } else if (! options.firstTime) {\n      // If they've already been prompted to set a password then this\n      // is more of a friendly reminder, so we word it slightly\n      // differently than the first time they're being shown a\n      // registration url.\n      Console.error(\n        \"You should set a password on your Meteor developer account.\",\n        \"It takes about a minute at:\", session.registrationUrl);\n      Console.error();\n    } else {\n      Console.error(\n        \"You can set a password on your account or change your email\",\n        \"address at:\", session.registrationUrl);\n      Console.error();\n    }\n    return true;\n  }\n  return false;\n};\n\nexports.tryRevokeOldTokens = tryRevokeOldTokens;\n\nexports.getSessionId = function (domain, sessionData) {\n  sessionData = sessionData || readSessionData();\n  return getSession(sessionData, domain).session;\n};\n\nexports.setSessionId = function (domain, sessionId) {\n  var data = readSessionData();\n  getSession(data, domain).session = sessionId;\n  writeSessionData(data);\n};\n\nexports.getSessionToken = function (domain) {\n  return getSession(readSessionData(), domain).token;\n};\n\nexports.isLoggedIn = function () {\n  return loggedIn(readSessionData());\n};\n\n// Return the username of the currently logged in user, or false if\n// not logged in, or null if the logged in user doesn't have a\n// username.\nexports.loggedInUsername = function () {\n  var data = readSessionData();\n  return loggedIn(data) ? currentUsername(data) : false;\n};\n\nexports.getAccountsConfiguration = function (conn) {\n  // Subscribe to the package server's service configurations so that we\n  // can get the OAuth client ID to kick off the OAuth flow.\n  var accountsConfiguration = null;\n\n  // We avoid the overhead of creating a 'ddp-and-mongo' isopacket (or\n  // always loading mongo whenever we load ddp) by just using the low-level\n  // DDP client API here.\n  conn.connection.registerStore('meteor_accounts_loginServiceConfiguration', {\n    update: function (msg) {\n      if (msg.msg === 'added' && msg.fields &&\n          msg.fields.service === 'meteor-developer') {\n        // Note that this doesn't include the _id (which we'd have to parse),\n        // but that's OK.\n        accountsConfiguration = msg.fields;\n      }\n    }\n  });\n\n  var serviceConfigurationsSub = conn.subscribeAndWait(\n    'meteor.loginServiceConfiguration');\n  if (! accountsConfiguration || ! accountsConfiguration.clientId) {\n    throw new Error('no-accounts-configuration');\n  }\n\n  return accountsConfiguration;\n};\n\n// Given a ServiceConnection, log in with OAuth using Meteor developer\n// accounts. Assumes the user is already logged in to the developer\n// accounts server.\nexports.loginWithTokenOrOAuth = function (conn, accountsConfiguration,\n                                          url, domain, sessionType) {\n  var setUpOnReconnect = function () {\n    conn.onReconnect = function () {\n      conn.apply('login', [{\n        resume: auth.getSessionToken(domain)\n      }], { wait: true }, function () { });\n    };\n  };\n\n  var clientId = accountsConfiguration.clientId;\n  var loginResult;\n\n  // Try to log in with an existing login token, if we have one.\n  var existingToken = auth.getSessionToken(domain);\n  if (existingToken) {\n    try {\n      loginResult = conn.apply('login', [{\n        resume: existingToken\n      }], { wait: true });\n    } catch (err) {\n      // If we get a Meteor.Error, then we swallow it and go on to\n      // attempt an OAuth flow and get a new token. If it's not a\n      // Meteor.Error, then we leave it to the caller to handle.\n      if (err.errorType !== \"Meteor.Error\") {\n        throw err;\n      }\n    }\n\n    if (loginResult && loginResult.token && loginResult.id) {\n      // Success!\n      setUpOnReconnect();\n      return;\n    }\n  }\n\n  // Either we didn't have an existing token, or it didn't work. Do an\n  // OAuth flow to log in.\n  var redirectUri = url + '/_oauth/meteor-developer';\n\n  // Duplicate code from packages/oauth/oauth_common.js. In Meteor 0.9.1, we\n  // switched to a new URL style for Oauth that no longer has the \"?close\"\n  // parameter at the end. However, we need all of our backend services to be\n  // compatible with old Meteor tools which were written before 0.9.1. These old\n  // meteor tools only know how to deal with oauth URLs that have the \"?close\"\n  // query parameter, so our services (packages.meteor.com, etc) have to use the\n  // old-style URL. This means that all new Meteor tools also need to use the\n  // old-style URL to be compatible with the new servers which are backwards-\n  // compatible with the old tool.\n  if (! accountsConfiguration.loginStyle) {\n    redirectUri = redirectUri + \"?close\";\n  }\n  loginResult = oauthFlow(conn, {\n    clientId: clientId,\n    redirectUri: redirectUri,\n    domain: domain,\n    sessionType: sessionType\n  });\n\n  setUpOnReconnect();\n};\n\nexports.loggedInAccountsConnection = loggedInAccountsConnection;\nexports.withAccountsConnection = withAccountsConnection;\n"],"file":"tools/meteor-services/auth.js.map"}