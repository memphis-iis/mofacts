{"version":3,"sources":["/tools/packaging/catalog/catalog.js"],"names":["_","require","remoteCatalog","Console","buildmessage","catalog","exports","refreshFailed","undefined","triedToRefreshRecently","Refresh","OnceAtStart","options","self","Object","assign","prototype","beforeCommand","refreshOrWarn","ignoreErrors","debug","printError","refreshError","error","ExitWithCode","Never","official","refresh","err","errorType","warn","url","isDebugEnabled","runAndRetryWithRefreshIfHelpful","attempt","assertInJob","canRetry","offline","messages","capture","hasMessages","hasMessageWithTag","mergeMessagesIntoCurrentJob","enterJob","message","ACCEPT_NON_EMPTY","result","length","LayeredCatalog","localCatalog","otherCatalog","toString","getLatestVersion","args","_returnFirst","getAllPackageNames","union","f","validityOracle","getPackage","getSortedVersions","getSortedVersionRecords","getVersion","name","version","test","getLatestMainlineVersion","versions","reverse","latest","find","DEFAULT_TRACK"],"mappings":"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","sourcesContent":["var _ = require('underscore');\nvar remoteCatalog = require('./catalog-remote.js');\nvar Console = require('../../console/console.js').Console;\nvar buildmessage = require('../../utils/buildmessage.js');\n\nvar catalog = exports;\n\ncatalog.refreshFailed = undefined;\ncatalog.triedToRefreshRecently = false;\n\ncatalog.Refresh = {};\n\n// Refresh strategy: once at program start\ncatalog.Refresh.OnceAtStart = function (options) {\n  var self = this;\n  self.options = Object.assign({}, options);\n};\n\ncatalog.Refresh.OnceAtStart.prototype.beforeCommand = function () {\n  var self = this;\n  if (!catalog.refreshOrWarn(self.options)) {\n    if (self.options.ignoreErrors) {\n      Console.debug(\"Failed to update package catalog, but will continue.\");\n    } else {\n      Console.printError(catalog.refreshError);\n      Console.error(\"This command requires an up-to-date package catalog.  Exiting.\");\n      // Avoid circular dependency.\n      throw new (require('../../cli/main.js').ExitWithCode)(1);\n    }\n  }\n};\n\n// Refresh strategy: never (we don't use the package catalog)\ncatalog.Refresh.Never = function (options) {\n  var self = this;\n  self.options = Object.assign({}, options);\n};\n\n// Refreshes the catalog. Returns true on success.\n// On network error, warns and returns false.\n// Throws other errors (ie, programming errors in the tool).\n//\n// THIS IS A HIGH-LEVEL UI COMMAND. DO NOT CALL IT FROM LOW-LEVEL CODE (ie, call\n// it only from main.js or command implementations).\ncatalog.refreshOrWarn = function (options) {\n  catalog.triedToRefreshRecently = true;\n  try {\n    catalog.official.refresh(options);\n    catalog.refreshFailed = false;\n    return true;\n  } catch (err) {\n    // Example errors:\n\n    // Offline, with name-based host:\n    //   Network error: ws://packages.meteor.com/websocket: getaddrinfo ENOTFOUND\n\n    // Offline, with IP-based host:\n    //   Network error: ws://8.8.8.8/websocket: connect ENETUNREACH\n\n    // Online, bad port:\n    //    Network error: wss://packages.meteor.com:8888/websocket: connect ECONNREFUSED\n\n    // Online, socket hangup:\n    //   Network error: wss://packages.meteor.com:80/websocket: socket hang up\n\n    if (err.errorType !== 'DDP.ConnectionError')\n      throw err;\n\n    // XXX is throwing correct for SQLite errors too? probably.\n\n    Console.warn(\"Unable to update package catalog (are you offline?)\");\n    Console.warn();\n    Console.warn(\n      \"If you are using Meteor behind a proxy, set HTTP_PROXY and HTTPS_PROXY environment variables or see this page for more details: \",\n      Console.url(\"https://github.com/meteor/meteor/wiki/Using-Meteor-behind-a-proxy\"));\n\n    // XXX: Make this Console.debug(err)\n    if (Console.isDebugEnabled()) {\n      Console.printError(err);\n    }\n\n    Console.warn();\n\n    catalog.refreshFailed = true;\n    catalog.refreshError = err;\n    return false;\n  }\n};\n\n// Runs 'attempt'; if it fails in a way that can be fixed by refreshing the\n// official catalog, does that and tries again.\ncatalog.runAndRetryWithRefreshIfHelpful = function (attempt) {\n  buildmessage.assertInJob();\n\n  var canRetry = ! (catalog.triedToRefreshRecently ||\n                    catalog.official.offline);\n\n  // Run `attempt` in a nested buildmessage context.\n  var messages = buildmessage.capture(function () {\n    attempt(canRetry);\n  });\n\n  // Did it work? Great.\n  if (! messages.hasMessages()) {\n    return;\n  }\n\n  // Is refreshing unlikely to be useful, either because the error wasn't\n  // related to that, or because we tried to refresh recently, or because we're\n  // not allowed to refresh? Fail, merging the result of these errors into the\n  // current job.\n  if (! (messages.hasMessageWithTag('refreshCouldHelp') && canRetry)) {\n    buildmessage.mergeMessagesIntoCurrentJob(messages);\n    return;\n  }\n\n  // Refresh!\n  // XXX This is a little hacky, as it shares a bunch of code with\n  // catalog.refreshOrWarn, which is a higher-level function that's allowed to\n  // log.\n  catalog.triedToRefreshRecently = true;\n  try {\n    catalog.official.refresh();\n    catalog.refreshFailed = false;\n  } catch (err) {\n    if (err.errorType !== 'DDP.ConnectionError')\n      throw err;\n    // First place the previous errors in the capture.\n    buildmessage.mergeMessagesIntoCurrentJob(messages);\n    // Then put an error representing this DDP error.\n    buildmessage.enterJob(\n      \"refreshing package catalog to resolve previous errors\",\n      function () {\n        buildmessage.error(err.message);\n      }\n    );\n    return;\n  }\n\n  // Try again, this time directly in the current buildmessage job.\n  attempt(false); // canRetry = false\n};\n\n// As a work-around for [] !== [], we use a function to check whether values are acceptable\nvar ACCEPT_NON_EMPTY = function (result) {\n  // null, undefined\n  if (result === null || result === undefined) {\n    return false;\n  }\n  // []\n  if (result.length === 0) {\n    return false;\n  }\n  return true;\n};\n\n// The LayeredCatalog provides a way to query multiple catalogs in a uniform way\n// A LayeredCatalog contains:\n//  - a local catalog referencing the packages of the project\n//  - a reference to the official catalog\nvar LayeredCatalog = function (localCatalog, otherCatalog) {\n  var self = this;\n\n  self.localCatalog = localCatalog;\n  self.otherCatalog = otherCatalog;\n};\n\nObject.assign(LayeredCatalog.prototype, {\n  toString: function () {\n    var self = this;\n    return \"LayeredCatalog []\";\n  },\n\n  getLatestVersion: function (...args) {\n    var self = this;\n    return self._returnFirst(\"getLatestVersion\", args, ACCEPT_NON_EMPTY);\n  },\n\n  getAllPackageNames: function () {\n    var self = this;\n    return _.union(self.localCatalog.getAllPackageNames(), self.otherCatalog.getAllPackageNames());\n  },\n\n  _returnFirst: function(f, args, validityOracle) {\n    var self = this;\n    var result = self.localCatalog[f](...args);\n    if (validityOracle(result)) {\n      return result;\n    }\n    return self.otherCatalog[f](...args);\n  },\n\n  getPackage: function (...args) {\n    return this._returnFirst(\"getPackage\", args, ACCEPT_NON_EMPTY);\n  },\n\n  getSortedVersions: function (...args) {\n    return this._returnFirst(\"getSortedVersions\", args, ACCEPT_NON_EMPTY);\n  },\n\n  getSortedVersionRecords: function (...args) {\n    return this._returnFirst(\n      \"getSortedVersionRecords\", args, ACCEPT_NON_EMPTY);\n  },\n\n  getVersion: function (name, version) {\n    var self = this;\n    var result = self.localCatalog.getVersion(name, version);\n    if (!result) {\n      if (/\\+/.test(version)) {\n        return null;\n      }\n      result = self.otherCatalog.getVersion(name, version);\n    }\n    return result;\n  },\n\n  // As getVersion, but returns info on the latest version of the\n  // package, or null if the package doesn't exist or has no versions.\n  // It does not include prereleases (with dashes in the version);\n  getLatestMainlineVersion: function (name) {\n    var self = this;\n\n    var versions = self.getSortedVersions(name);\n    versions.reverse();\n    var latest = versions.find(function (version) {\n      return !/-/.test(version);\n    });\n    if (!latest)\n      return null;\n    return self.getVersion(name, latest);\n  }\n});\n\nexports.DEFAULT_TRACK = remoteCatalog.DEFAULT_TRACK;\nexports.official = remoteCatalog.official;\n\n// This is the catalog that's used to actually drive the constraint solver: it\n// contains local packages, and since local packages always beat server\n// packages, it doesn't contain any information about the server version of\n// local packages.\nexports.LayeredCatalog = LayeredCatalog;\n"],"file":"tools/packaging/catalog/catalog.js.map"}