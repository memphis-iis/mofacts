{"version":3,"sources":["/tools/packaging/catalog/catalog-remote.js"],"names":["_","require","sqlite3","files","utils","buildmessage","config","archinfo","Console","tropohouse","packageClient","VersionParser","Profile","DEBUG_SQL","process","env","METEOR_DEBUG_SQL","JOURNAL_MODE","METEOR_SQLITE_JOURNAL_MODE","SYNCTOKEN_ID","METADATA_LAST_SYNC","BUSY_RETRY_ATTEMPTS","BUSY_RETRY_INTERVAL","Mutex","self","_locked","_resolvers","Object","assign","prototype","lock","Promise","resolve","push","await","unlock","Error","shift","Txn","db","closed","committed","started","query","sql","params","_query","execute","_execute","begin","mode","close","commit","Db","dbFile","options","_dbFile","_autoPrepare","_prepared","_transactionMutex","_db","_retry","open","f","maxAttempts","delay","attempt","err","warn","sleepMs","_serialize","closePermanently","_closePreparedStatements","reject","runInTransaction","action","runOnce","txn","t1","Date","now","rollback","result","resultError","e","t2","info","retry","message","t","Math","random","exists","pathDirname","debug","folder","mkdir_p","Database","convertToOSPath","prepared","prepare","isEmpty","_prepareWithCache","rows","callback","all","ret","lastID","changes","run","each","statement","finalize","Table","name","jsonFields","noContentColumn","_buildStatements","queryParams","_generateQuestionMarks","length","_selectQuery","_insertQuery","_deleteQuery","n","times","join","find","id","undefined","upsert","objects","o","_id","deleteResults","row","jsonField","JSON","stringify","createTable","i","sqlColumn","RemoteCatalog","offline","toString","getVersion","packageName","version","_contentQuery","filterExactRows","getLatestVersion","versions","getSortedVersions","last","match","_columnsQuery","pvParse","memoize","parse","pluck","sort","a","b","compare","getSortedVersionRecords","versionRecords","getLatestMainlineVersion","reverse","latest","test","getPackage","getAllBuilds","getBuildsForArches","arches","solution","allBuilds","generateSubsetsOfIncreasingSize","buildSubset","satisfied","neededArch","any","build","buildArches","buildArchitectures","split","mostSpecificMatch","filterArchesWithBuilds","filter","arch","getReleaseTrack","getReleaseVersion","track","forceRecommendRelease","releaseVersionData","recommended","_insertReleaseVersions","getAllReleaseTracks","getAllPackageNames","initialize","packageStorage","getPackageStorage","tableVersions","tableBuilds","tableReleaseTracks","tableReleaseVersions","tablePackages","tableSyncToken","tableMetadata","tableBannersShown","allTables","table","reset","refresh","METEOR_TEST_FAIL_RELEASE_DOWNLOAD","errorType","maxAge","lastSync","getMetadata","timestamp","updateResult","enterJob","title","updateServerPackageData","resetData","default","wipeAllPackages","getSortedRecommendedReleaseVersions","laterThanOrderKey","getSortedRecommendedReleaseRecords","v","orderKey","recSort","sortBy","rec","getReleaseVersionRecords","getNumReleaseVersions","getDefaultReleaseVersion","versionRecord","getDefaultReleaseVersionRecord","pick","exports","DEFAULT_TRACK","getBuildWithPreciseBuildArchitectures","matchingBuilds","findWhere","map","entity","content","releaseVersions","insertData","serverData","syncComplete","collections","packages","builds","releaseTracks","syncToken","_setMetadata","getSyncToken","key","setMetadata","value","shouldShowBanner","releaseName","bannerDate","lastShown","setBannerShownDate","bannerShownDate","requirements","keys","every","official"],"mappings":"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","sourcesContent":["var _ = require('underscore');\nvar sqlite3 = require('sqlite3');\n\nvar files = require('../../fs/files');\nvar utils = require('../../utils/utils.js');\nvar buildmessage = require('../../utils/buildmessage.js');\nvar config = require('../../meteor-services/config.js');\nvar archinfo = require('../../utils/archinfo');\nvar Console = require('../../console/console.js').Console;\n\nvar tropohouse = require('../tropohouse.js');\nvar packageClient = require('../package-client.js');\nvar VersionParser = require('../package-version-parser.js');\nvar Profile = require('../../tool-env/profile').Profile;\n\n// XXX: Rationalize these flags.  Maybe use the logger?\nvar DEBUG_SQL = !!process.env.METEOR_DEBUG_SQL;\n\n// Developers using Windows Subsystem for Linux (WSL) may want to override\n// this environment variable to TRUNCATE instead of WAL. WAL mode copes\n// better with (multi-process) concurrency but is currently incompatible\n// with WSL: https://github.com/meteor/meteor-feature-requests/issues/154\nconst JOURNAL_MODE =\n  process.env.METEOR_SQLITE_JOURNAL_MODE || \"WAL\";\n\nvar SYNCTOKEN_ID = \"1\";\n\nvar METADATA_LAST_SYNC = \"lastsync\";\n\nvar BUSY_RETRY_ATTEMPTS = 10;\nvar BUSY_RETRY_INTERVAL = 1000;\n\nvar Mutex = function () {\n  var self = this;\n\n  self._locked = false;\n\n  self._resolvers = [];\n};\n\nObject.assign(Mutex.prototype, {\n  lock: function () {\n    var self = this;\n\n    while (true) {\n      if (!self._locked) {\n        self._locked = true;\n        return;\n      }\n\n      new Promise(function (resolve) {\n        self._resolvers.push(resolve);\n      }).await();\n    }\n  },\n\n  unlock: function () {\n    var self = this;\n\n    if (!self._locked) {\n      throw new Error(\"unlock called on unlocked mutex\");\n    }\n\n    self._locked = false;\n    var resolve = self._resolvers.shift();\n    if (resolve) {\n      resolve();\n    }\n  }\n});\n\nvar Txn = function (db) {\n  var self = this;\n  self.db = db;\n  self.closed = false;\n  self.committed = false;\n  self.started = false;\n};\n\nObject.assign(Txn.prototype, {\n  // Runs a SQL query and returns the rows\n  query: function (sql, params) {\n    var self = this;\n    return self.db._query(sql, params);\n  },\n\n  // Runs a SQL statement, returning no rows\n  execute: function (sql, params) {\n    var self = this;\n    return self.db._execute(sql, params);\n  },\n\n  // Start a transaction\n  begin: function (mode) {\n    var self = this;\n\n    // XXX: Use DEFERRED mode?\n    mode = mode || \"IMMEDIATE\";\n\n    if (self.started) {\n      throw new Error(\"Transaction already started\");\n    }\n\n    self.db._execute(\"BEGIN \" + mode + \" TRANSACTION\");\n    self.started = true;\n  },\n\n  // Releases resources from the transaction; Rollback if commit not already called.\n  close: function () {\n    var self = this;\n\n    if (self.closed) {\n      return;\n    }\n\n    if (!self.started) {\n      return;\n    }\n\n    self.db._execute(\"ROLLBACK TRANSACTION\");\n    self.committed = false;\n    self.closed = true;\n  },\n\n  // Commits the transaction.  close() will then be a no-op\n  commit: function () {\n    var self = this;\n\n    self.db._execute(\"END TRANSACTION\");\n    self.committed = true;\n    self.closed = true;\n  }\n});\n\nvar Db = function (dbFile, options) {\n  var self = this;\n\n  self._dbFile = dbFile;\n\n  self._autoPrepare = true;\n  self._prepared = {};\n\n  self._transactionMutex = new Mutex();\n\n  self._db = self._retry(function () {\n    return self.open(dbFile);\n  });\n\n  self._retry(function () {\n    self._execute(`PRAGMA journal_mode=${JOURNAL_MODE}`);\n  });\n};\n\nObject.assign(Db.prototype, {\n\n  // TODO: Move to utils?\n  _retry: function (f, options) {\n    options = Object.assign({ maxAttempts: 3, delay: 500}, options || {});\n\n    for (var attempt = 1; attempt <= options.maxAttempts; attempt++) {\n      try {\n        return f();\n      } catch (err) {\n        if (attempt < options.maxAttempts) {\n          Console.warn(\"Retrying after error\", err);\n        } else {\n          throw err;\n        }\n      }\n\n      if (options.delay) {\n        utils.sleepMs(options.delay);\n      }\n    }\n  },\n\n  // Runs functions serially, in a mutex\n  _serialize: function (f) {\n    var self = this;\n\n    try {\n      self._transactionMutex.lock();\n      return f();\n    } finally {\n      self._transactionMutex.unlock();\n    }\n  },\n\n  // Do not call any other methods on this object after calling this one.\n  // This yields.\n  closePermanently: function () {\n    var self = this;\n    self._closePreparedStatements();\n    var db = self._db;\n    self._db = null;\n    new Promise((resolve, reject) => {\n      db.close(err => err ? reject(err) : resolve());\n    }).await();\n  },\n\n  // Runs the function inside a transaction block\n  runInTransaction: function (action) {\n    var self = this;\n\n    var runOnce = Profile(\"sqlite query\", function () {\n      var txn = new Txn(self);\n\n      var t1 = Date.now();\n\n      var rollback = true;\n      var result = null;\n      var resultError = null;\n\n      txn.begin();\n      try {\n        result = action(txn);\n        txn.commit();\n      } catch (err) {\n        resultError = err;\n      } finally {\n        try {\n          txn.close();\n        } catch (e) {\n          // We don't have a lot of options here...\n          Console.warn(\"Error closing transaction\", e);\n        }\n      }\n\n      //self._closePreparedStatements();\n\n      if (DEBUG_SQL) {\n        var t2 = Date.now();\n        // XXX: Hack around not having loggers\n        Console.info(\"Transaction took: \", (t2 - t1));\n      }\n\n      if (resultError) {\n        throw resultError;\n      }\n\n      return result;\n    });\n\n    for (var attempt = 0; ; attempt++) {\n      try {\n        return self._serialize(runOnce);\n      } catch (err) {\n        var retry = false;\n        // Grr... doesn't expose error code; must string-match\n        if (err.message &&\n            (err.message === \"SQLITE_BUSY: database is locked\" ||\n             err.message === \"SQLITE_BUSY: cannot commit transaction - SQL statements in progress\")) {\n          if (attempt < BUSY_RETRY_ATTEMPTS) {\n            retry = true;\n          }\n        }\n        if (!retry) {\n          throw err;\n        }\n      }\n\n      // Wait on average BUSY_RETRY_INTERVAL, but randomize to avoid thundering herd\n      var t = (Math.random() + 0.5) * BUSY_RETRY_INTERVAL;\n      utils.sleepMs(t);\n    }\n  },\n\n  open: function (dbFile) {\n    var self = this;\n\n    if ( !files.exists(files.pathDirname(dbFile)) ) {\n      Console.debug(\"Creating database directory\", dbFile);\n\n      var folder = files.pathDirname(dbFile);\n      if ( !files.mkdir_p(folder) )\n        throw new Error(\"Could not create folder at \" + folder);\n    }\n\n    Console.debug(\"Opening db file\", dbFile);\n    return new sqlite3.Database(files.convertToOSPath(dbFile));\n  },\n\n  // Runs a query synchronously, returning all rows\n  // Hidden to enforce transaction usage\n  _query: function (sql, params) {\n    var self = this;\n\n    var prepared = null;\n    var prepare = self._autoPrepare && !_.isEmpty(params);\n    if (prepare) {\n      prepared = self._prepareWithCache(sql);\n    }\n\n    if (DEBUG_SQL) {\n      var t1 = Date.now();\n    }\n\n    //Console.debug(\"Executing SQL \", sql, params);\n\n    var rows = new Promise((resolve, reject) => {\n      function callback(err, rows) {\n        err ? reject(err) : resolve(rows);\n      }\n\n      if (prepared) {\n        prepared.all(params, callback);\n      } else {\n        self._db.all(sql, params, callback);\n      }\n    }).await();\n\n    if (DEBUG_SQL) {\n      var t2 = Date.now();\n      if ((t2 - t1) > 10) {\n        // XXX: Hack around not having log levels\n        Console.info(\"SQL statement \", sql, \" took \", (t2 - t1));\n      }\n    }\n\n    return rows;\n  },\n\n  // Runs a query synchronously, returning no rows\n  // Hidden to enforce transaction usage\n  _execute: function (sql, params) {\n    var self = this;\n\n    var prepared = null;\n    // We don't prepare non-parametrized statements, because (a) there's not\n    // that much of a win from doing so, since we don't tend to run them in bulk\n    // and (b) doing so can trigger\n    // https://github.com/mapbox/node-sqlite3/pull/355 .  (We can avoid that bug\n    // by being careful to pass in an empty array or no argument for params to\n    // prepared.run instead of undefined, but we can also just avoid the issue\n    // entirely.)\n    var prepare = self._autoPrepare && !_.isEmpty(params);\n    if (prepare) {\n      prepared = self._prepareWithCache(sql);\n    }\n\n    if (DEBUG_SQL) {\n      var t1 = Date.now();\n    }\n\n    //Console.debug(\"Executing SQL \", sql, params);\n\n    var ret = new Promise(function (resolve, reject) {\n      function callback(err) {\n        err ? reject(err) : resolve({\n          // Yes, lastID & changes are on this(!)\n          lastID: this.lastID,\n          changes: this.changes\n        });\n      }\n\n      if (prepared) {\n        prepared.run(params, callback);\n      } else {\n        self._db.run(sql, params, callback);\n      }\n    }).await();\n\n    if (DEBUG_SQL) {\n      var t2 = Date.now();\n      if ((t2 - t1) > 10) {\n        Console.info(\"SQL statement \", sql, \" took \", (t2 - t1));\n      }\n    }\n\n    return ret;\n  },\n\n  // Prepares the statement, caching the result\n  _prepareWithCache: function (sql) {\n    var self = this;\n\n    var prepared = self._prepared[sql];\n    if (!prepared) {\n      //Console.debug(\"Preparing statement: \", sql);\n      new Promise(function (resolve, reject) {\n        prepared = self._db.prepare(sql, function (err) {\n          err ? reject(err) : resolve();\n        });\n      }).await();\n\n      self._prepared[sql] = prepared;\n    }\n\n    return prepared;\n  },\n\n\n  // Close any cached prepared statements\n  _closePreparedStatements: function () {\n    var self = this;\n\n    var prepared = self._prepared;\n    self._prepared = {};\n\n    _.each(prepared, function (statement) {\n      var err = new Promise(function (resolve) {\n        // We resolve the promise with an error instead of rejecting it,\n        // because we don't want to throw.\n        statement.finalize(resolve);\n      }).await();\n\n      if (err) {\n        Console.warn(\"Error finalizing statement \", err);\n      }\n    });\n  }\n\n});\n\n\nvar Table = function (name, jsonFields, options) {\n  var self = this;\n  options = options || {};\n\n  self.name = name;\n  self.jsonFields = jsonFields;\n  self.noContentColumn = options.noContentColumn;\n\n  self._buildStatements();\n};\n\nObject.assign(Table.prototype, {\n  _buildStatements: function () {\n    var self = this;\n\n    var queryParams = self._generateQuestionMarks(\n      self.jsonFields.length + (self.noContentColumn ? 0 : 1));\n    self._selectQuery = \"SELECT * FROM \" + self.name + \" WHERE _id=?\";\n    self._insertQuery = \"INSERT INTO \" + self.name + \" VALUES \" + queryParams;\n    self._deleteQuery = \"DELETE FROM \" + self.name + \" WHERE _id=?\";\n  },\n\n  // Generate a string of the form (?, ?) where the n is the number of question\n  // mark.\n  _generateQuestionMarks: function (n) {\n    return \"(\" + _.times(n, function () { return \"?\" }).join(\",\") + \")\";\n  },\n\n  find: function (txn, id) {\n    var self = this;\n    var rows = txn.query(self._selectQuery, [ id ]);\n    if (rows.length !== 0) {\n      if (rows.length !== 1) {\n        throw new Error(\"Corrupt database (PK violation)\");\n      }\n      return rows[0];\n    }\n    return undefined;\n  },\n\n  upsert: function (txn, objects) {\n    var self = this;\n\n    // XXX: Use sqlite upsert\n    // XXX: Speculative insert\n    // XXX: Fix transaction logic so we always roll back\n    _.each(objects, function (o) {\n      var id = o._id;\n      var rows = txn.query(self._selectQuery, [ id ]);\n      if (rows.length !== 0) {\n        var deleteResults = txn.execute(self._deleteQuery, [ id ]);\n        if (deleteResults.changes !== 1) {\n          throw new Error(\"Unable to delete row: \" + id);\n        }\n      }\n      var row = [];\n      _.each(self.jsonFields, function (jsonField) {\n        row.push(o[jsonField]);\n      });\n      if (! self.noContentColumn) {\n        row.push(JSON.stringify(o));\n      }\n      txn.execute(self._insertQuery, row);\n    });\n  },\n\n  createTable: function (txn) {\n    var self = this;\n\n    var sql = 'CREATE TABLE IF NOT EXISTS ' + self.name + '(';\n    for (var i = 0; i < self.jsonFields.length; i++) {\n      var jsonField = self.jsonFields[i];\n      var sqlColumn = jsonField;\n      if (i != 0) sql += \", \";\n      sql += sqlColumn + \" STRING\";\n      if (sqlColumn === '_id') {\n        sql += \" PRIMARY KEY\";\n      }\n    }\n    if (! self.noContentColumn) {\n      sql += \", content STRING\";\n    }\n    sql += \")\";\n    txn.execute(sql);\n\n    //sql = \"CREATE INDEX IF NOT EXISTS idx_\" + self.name + \"_id ON \" + self.name + \"(_id)\";\n    //txn.execute(sql);\n  }\n});\n\n\n// A RemoteCatalog is a local cache of the content of troposphere.\n// A default instance of this catalog is registered by the layered catalog and is available\n// under the variable \"official\" from the catalog.js\n//\n// The remote catalog is backed by a db to make things easier on the memory and for faster queries\nvar RemoteCatalog = function () {\n  var self = this;\n\n  // Set this to true if we are not going to connect to the remote package\n  // server, and will only use the cached data for our package information\n  // This means that the catalog might be out of date on the latest developments.\n  self.offline = null;\n\n  self.db = null;\n};\n\nObject.assign(RemoteCatalog.prototype, {\n  toString: function () {\n    var self = this;\n    return \"RemoteCatalog\";\n  },\n\n  // Used for special cases that want to ensure that all connections to the DB\n  // are closed (eg to ensure that all writes have been flushed from the '-wal'\n  // file to the main DB file). Most methods on this class will stop working\n  // after you call this method. Note that this yields.\n  closePermanently: function () {\n    var self = this;\n    self.db.closePermanently();\n    self.db = null;\n  },\n\n  getVersion: function (packageName, version) {\n    var result = this._contentQuery(\n      \"SELECT content FROM versions WHERE packageName=? AND version=?\",\n      [packageName, version]);\n    return filterExactRows(result, { packageName, version });\n  },\n\n  // As getVersion, but returns info on the latest version of the\n  // package, or null if the package doesn't exist or has no versions.\n  getLatestVersion: function (name) {\n    var self = this;\n\n    var versions = self.getSortedVersions(name);\n    return self.getVersion(name, _.last(versions));\n  },\n\n  getSortedVersions: function (name) {\n    var self = this;\n    var match = this._columnsQuery(\n      \"SELECT version FROM versions WHERE packageName=?\", name);\n    if (match === null)\n      return [];\n    var pvParse = _.memoize(VersionParser.parse);\n    return _.pluck(match, 'version').sort(function (a, b) {\n      return VersionParser.compare(pvParse(a), pvParse(b));\n    });\n  },\n\n  // Just getVersion mapped over getSortedVersions, but only makes one round\n  // trip to sqlite.\n  getSortedVersionRecords: function (name) {\n    var self = this;\n    var versionRecords = this._contentQuery(\n      \"SELECT content FROM versions WHERE packageName=?\", [name]);\n    if (! versionRecords)\n      return [];\n\n    var pvParse = _.memoize(VersionParser.parse);\n    versionRecords.sort(function (a, b) {\n      return VersionParser.compare(pvParse(a.version),\n                                   pvParse(b.version));\n    });\n    return versionRecords;\n  },\n\n  getLatestMainlineVersion: function (name) {\n    var self = this;\n    var versions = self.getSortedVersions(name);\n    versions.reverse();\n    var latest = _.find(versions, function (version) {\n      return !/-/.test(version);\n    });\n    if (!latest)\n      return null;\n    return self.getVersion(name, latest);\n  },\n\n  getPackage: function (name, options) {\n    var result = this._contentQuery(\n      \"SELECT content FROM packages WHERE name=?\", name);\n    if (!result || result.length === 0)\n      return null;\n    if (result.length !== 1) {\n      throw new Error(\"Found multiple packages matching name: \" + name);\n    }\n    return result[0];\n  },\n\n  getAllBuilds: function (name, version) {\n    var result = this._contentQuery(\n      \"SELECT content FROM builds WHERE builds.versionId = \" +\n        \"(SELECT _id FROM versions WHERE versions.packageName=? AND \" +\n        \"versions.version=?)\",\n      [name, version]);\n    if (!result || result.length === 0)\n      return null;\n    return result;\n  },\n\n  // If this package has any builds at this version, return an array of builds\n  // which cover all of the required arches, or null if it is impossible to\n  // cover them all (or if the version does not exist).\n  // Note that this method is specific to RemoteCatalog.\n  getBuildsForArches: function (name, version, arches) {\n    var self = this;\n\n    var solution = null;\n    var allBuilds = self.getAllBuilds(name, version) || [];\n\n    utils.generateSubsetsOfIncreasingSize(allBuilds, function (buildSubset) {\n      // This build subset works if for all the arches we need, at least one\n      // build in the subset satisfies it. It is guaranteed to be minimal,\n      // because we look at subsets in increasing order of size.\n      var satisfied = _.all(arches, function (neededArch) {\n        return _.any(buildSubset, function (build) {\n          var buildArches = build.buildArchitectures.split('+');\n          return !!archinfo.mostSpecificMatch(neededArch, buildArches);\n        });\n      });\n      if (satisfied) {\n        solution = buildSubset;\n        return true;  // stop the iteration\n      }\n    });\n    return solution;  // might be null!\n  },\n\n  filterArchesWithBuilds: function (name, version, arches) {\n    return arches.filter(arch => {\n      return !! this.getBuildsForArches(name, version, [arch]);\n    });\n  },\n\n  // Returns general (non-version-specific) information about a\n  // release track, or null if there is no such release track.\n  getReleaseTrack: function (name) {\n    var self = this;\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseTracks WHERE name=?\", name);\n    return filterExactRows(result, { name });\n  },\n\n  getReleaseVersion: function (track, version) {\n    var self = this;\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseVersions WHERE track=? AND version=?\",\n      [track, version]);\n    return filterExactRows(result, { track, version });\n  },\n\n  // Used by make-bootstrap-tarballs. Only should be used on catalogs that are\n  // specially constructed for bootstrap tarballs.\n  forceRecommendRelease: function (track, version) {\n    var self = this;\n    var releaseVersionData = self.getReleaseVersion(track, version);\n    if (!releaseVersionData) {\n      throw Error(\"Can't force-recommend unknown release \" + track + \"@\"\n                  + version);\n    }\n    releaseVersionData.recommended = true;\n    self._insertReleaseVersions([releaseVersionData]);\n  },\n\n  getAllReleaseTracks: function () {\n    return _.pluck(this._columnsQuery(\"SELECT name FROM releaseTracks\"),\n                   'name');\n  },\n\n  getAllPackageNames: function () {\n    return _.pluck(this._columnsQuery(\"SELECT name FROM packages\"), 'name');\n  },\n\n  initialize: function (options) {\n    var self = this;\n\n    options = options || {};\n    // We should to figure out if we are intending to connect to the package server.\n    self.offline = options.offline ? options.offline : false;\n\n    var dbFile = options.packageStorage || config.getPackageStorage();\n    self.db = new Db(dbFile);\n\n    self.tableVersions = new Table('versions', ['packageName', 'version', '_id']);\n    self.tableBuilds = new Table('builds', ['versionId', '_id']);\n    self.tableReleaseTracks = new Table('releaseTracks', ['name', '_id']);\n    self.tableReleaseVersions = new Table('releaseVersions', ['track', 'version', '_id']);\n    self.tablePackages = new Table('packages', ['name', '_id']);\n    self.tableSyncToken = new Table('syncToken', ['_id']);\n    self.tableMetadata = new Table('metadata', ['_id']);\n    self.tableBannersShown = new Table(\n      'bannersShown', ['_id', 'lastShown'], { noContentColumn: true });\n\n    self.allTables = [\n      self.tableVersions,\n      self.tableBuilds,\n      self.tableReleaseTracks,\n      self.tableReleaseVersions,\n      self.tablePackages,\n      self.tableSyncToken,\n      self.tableMetadata,\n      self.tableBannersShown\n    ];\n    return self.db.runInTransaction(function(txn) {\n      _.each(self.allTables, function (table) {\n        table.createTable(txn);\n      });\n\n      // Extra indexes for the most expensive queries\n      // These are non-unique indexes\n      // XXX We used to have a versionsNamesIdx here on versions(packageName);\n      //     we no longer create it but we don't waste time dropping it either.\n      txn.execute(\"CREATE INDEX IF NOT EXISTS versionsIdx ON \" +\n                  \"versions(packageName, version)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS buildsVersionsIdx ON \" +\n                  \"builds(versionId)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS packagesIdx ON \" +\n                  \"packages(name)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS releaseTracksIdx ON \" +\n                  \"releaseTracks(name)\");\n      txn.execute(\"CREATE INDEX IF NOT EXISTS releaseVersionsIdx ON \" +\n                  \"releaseVersions(track, version)\");\n    });\n  },\n\n  // This function empties the DB. This is called from the package-client.\n  reset: function () {\n    var self = this;\n    return self.db.runInTransaction(function (txn) {\n      _.each(self.allTables, function (table) {\n        txn.execute(\"DELETE FROM \" + table.name);\n      });\n    });\n  },\n\n  refresh: function (options) {\n    var self = this;\n    options = options || {};\n\n    Console.debug(\"In remote catalog refresh\");\n\n    if (process.env.METEOR_TEST_FAIL_RELEASE_DOWNLOAD === 'offline') {\n      var e = new Error;\n      e.errorType = 'DDP.ConnectionError';\n      throw e;\n    }\n\n    if (self.offline)\n      return false;\n\n    if (options.maxAge) {\n      var lastSync = self.getMetadata(METADATA_LAST_SYNC);\n      Console.debug(\"lastSync = \", lastSync);\n      if (lastSync && lastSync.timestamp) {\n        if ((Date.now() - lastSync.timestamp) < options.maxAge) {\n          Console.debug(\"Package catalog is sufficiently up-to-date; not updating\\n\");\n          return false;\n        }\n      }\n    }\n\n    var updateResult = {};\n    // XXX This buildmessage.enterJob only exists for showing progress.\n    buildmessage.enterJob({ title: 'updating package catalog' }, function () {\n      updateResult = packageClient.updateServerPackageData(self);\n    });\n\n    if (updateResult.resetData) {\n      tropohouse.default.wipeAllPackages();\n    }\n\n    return true;\n  },\n\n  // Given a release track, returns all recommended versions for this track,\n  // sorted by their orderKey. Returns the empty array if the release track does\n  // not exist or does not have any recommended versions.\n  getSortedRecommendedReleaseVersions: function (track, laterThanOrderKey) {\n    var self = this;\n    var versions =\n          self.getSortedRecommendedReleaseRecords(track, laterThanOrderKey);\n    return _.pluck(versions, \"version\");\n  },\n\n  // Given a release track, returns all recommended version *records* for this\n  // track, sorted by their orderKey. Returns the empty array if the release\n  // track does not exist or does not have any recommended versions.\n  getSortedRecommendedReleaseRecords: function (track, laterThanOrderKey) {\n    var self = this;\n    // XXX releaseVersions content objects are kinda big; if we put\n    // 'recommended' and 'orderKey' in their own columns this could be faster\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseVersions WHERE track=?\", track);\n\n    var recommended = _.filter(result, function (v) {\n      if (!v.recommended)\n        return false;\n      return !laterThanOrderKey || v.orderKey > laterThanOrderKey;\n    });\n\n    var recSort = _.sortBy(recommended, function (rec) {\n      return rec.orderKey;\n    });\n    recSort.reverse();\n    return recSort;\n  },\n\n  // Given a release track, returns all version records for this track.\n  getReleaseVersionRecords: function (track) {\n    var self = this;\n    var result = self._contentQuery(\n      \"SELECT content FROM releaseVersions WHERE track=?\", track);\n    return result;\n  },\n\n  // For a given track, returns the total number of release versions on that\n  // track.\n  getNumReleaseVersions: function (track) {\n    var self = this;\n    var result = self._columnsQuery(\n      \"SELECT count(*) FROM releaseVersions WHERE track=?\", track);\n    return result[0][\"count(*)\"];\n  },\n\n  // Returns the default release version on the DEFAULT_TRACK, or for a\n  // given release track.\n  getDefaultReleaseVersion: function (track) {\n    var self = this;\n    var versionRecord = self.getDefaultReleaseVersionRecord(track);\n    if (! versionRecord)\n      throw new Error(\"Can't get default release version for track \" + track);\n    return _.pick(versionRecord, [\"track\", \"version\" ]);\n  },\n\n  // Returns the default release version record for the DEFAULT_TRACK, or for a\n  // given release track.\n  getDefaultReleaseVersionRecord: function (track) {\n    var self = this;\n\n    if (!track)\n      track = exports.DEFAULT_TRACK;\n\n    var versions = self.getSortedRecommendedReleaseRecords(track);\n    if (!versions.length)\n      return null;\n    return  versions[0];\n  },\n\n  getBuildWithPreciseBuildArchitectures: function (versionRecord, buildArchitectures) {\n    var self = this;\n    var matchingBuilds = this._contentQuery(\n      \"SELECT content FROM builds WHERE versionId=?\", versionRecord._id);\n    return _.findWhere(matchingBuilds, { buildArchitectures: buildArchitectures });\n  },\n\n  // Executes a query, returning an array of each content column parsed as JSON\n  _contentQuery: function (query, params) {\n    var self = this;\n    var rows = self._columnsQuery(query, params);\n    return _.map(rows, function(entity) {\n      return JSON.parse(entity.content);\n    });\n  },\n\n  // Executes a query, returning an array of maps from column name to data.\n  // No JSON parsing is performed.\n  _columnsQuery: function (query, params) {\n    var self = this;\n    var rows = self.db.runInTransaction(function (txn) {\n      return txn.query(query, params);\n    });\n    return rows;\n  },\n\n  _insertReleaseVersions: function(releaseVersions) {\n    var self = this;\n    return self.db.runInTransaction(function (txn) {\n      self.tableReleaseVersions.upsert(txn, releaseVersions);\n    });\n  },\n\n  //Given data from troposphere, add it into the local store\n  insertData: function(serverData, syncComplete) {\n    var self = this;\n    return self.db.runInTransaction(function (txn) {\n      self.tablePackages.upsert(txn, serverData.collections.packages);\n      self.tableBuilds.upsert(txn, serverData.collections.builds);\n      self.tableVersions.upsert(txn, serverData.collections.versions);\n      self.tableReleaseTracks.upsert(txn, serverData.collections.releaseTracks);\n      self.tableReleaseVersions.upsert(txn, serverData.collections.releaseVersions);\n\n      var syncToken = serverData.syncToken;\n      Console.debug(\"Adding syncToken: \", JSON.stringify(syncToken));\n      syncToken._id = SYNCTOKEN_ID; //Add fake _id so it fits the pattern\n      self.tableSyncToken.upsert(txn, [syncToken]);\n\n      if (syncComplete) {\n        var lastSync = {timestamp: Date.now()};\n        self._setMetadata(txn, METADATA_LAST_SYNC, lastSync);\n      }\n    });\n  },\n\n  getSyncToken: function() {\n    var self = this;\n    var result = self._contentQuery(\"SELECT content FROM syncToken WHERE _id=?\",\n                                    [ SYNCTOKEN_ID ]);\n    if (!result || result.length === 0) {\n      Console.debug(\"No sync token found\");\n      return null;\n    }\n    if (result.length !== 1) {\n      throw new Error(\"Unexpected number of sync tokens found\");\n    }\n    delete result[0]._id;\n    Console.debug(\"Returning sync token: \" + JSON.stringify(result[0]));\n    return result[0];\n  },\n\n  getMetadata: function(key) {\n    var self = this;\n    var row = self.db.runInTransaction(function (txn) {\n      return self.tableMetadata.find(txn, key);\n    });\n    if (row) {\n      return JSON.parse(row['content']);\n    }\n    return undefined;\n  },\n\n  setMetadata: function(key, value) {\n    var self = this;\n    self.db.runInTransaction(function (txn) {\n      self._setMetadata(txn, key, value);\n    });\n  },\n\n  _setMetadata: function(txn, key, value) {\n    var self = this;\n    value._id = key;\n    self.tableMetadata.upsert(txn, [value]);\n  },\n\n  shouldShowBanner: function (releaseName, bannerDate) {\n    var self = this;\n    var row = self.db.runInTransaction(function (txn) {\n      return self.tableBannersShown.find(txn, releaseName);\n    });\n    // We've never printed a banner for this release.\n    if (! row)\n      return true;\n    try {\n      var lastShown = new Date(JSON.parse(row.lastShown));\n      return lastShown < bannerDate;\n    } catch (e) {\n      // Probably an error in JSON.parse or something. Just show the banner.\n      return true;\n    }\n  },\n\n  setBannerShownDate: function (releaseName, bannerShownDate) {\n    var self = this;\n    self.db.runInTransaction(function (txn) {\n      self.tableBannersShown.upsert(txn, [{\n        _id: releaseName,\n        // XXX For now, there's no way to tell this file to make a non-string\n        // column in a sqlite table, but this should probably change to a\n        // 'timestamp with time zone' or whatever.\n        lastShown: JSON.stringify(bannerShownDate)\n      }]);\n    });\n  }\n});\n\n// SQLite has a bizarre philosophy about automaticaly converting between\n// different data types, such as strings and floating point numbers:\n// https://www.sqlite.org/quirks.html#flexible_typing\n//\n// This means querying for the string \"1.10\" in a given column can return\n// rows where the column is actually the string \"1.1\", since SQLite thinks\n// you might be talking about the number 1.1 rather than the string you\n// actually requested.\n//\n// This \"feature\" first became a problem for Meteor after we published\n// Meteor 1.10, which caused SQLite to return multiple rows for the\n// getReleaseVersion query, including both 1.10 and 1.1.1 (ancient).\n//\n// While this policy seems completely indefensible, the SQLite project\n// does not consider it a bug, which forces us to work around it by\n// double-checking the queried results with this helper function:\nfunction filterExactRows(rows, requirements) {\n  const keys = Object.keys(requirements);\n  return rows && rows.filter(row => {\n    return keys.every(key => row[key] === requirements[key]);\n  })[0] || null;\n}\n\nexports.RemoteCatalog = RemoteCatalog;\n\n// We put this constant here because we don't have any better place that would otherwise cause a cycle\nexports.DEFAULT_TRACK = 'METEOR';\n\n// The catalog as provided by troposhere (aka atomospherejs.com)\nexports.official = new RemoteCatalog();\n"],"file":"tools/packaging/catalog/catalog-remote.js.map"}