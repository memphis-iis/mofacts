{"version":3,"sources":["/tools/packaging/warehouse.js"],"names":["os","require","_","files","httpHelpers","fiberHelpers","utils","WAREHOUSE_URLBASE","process","env","METEOR_WAREHOUSE_URLBASE","warehouse","exports","Object","assign","NoSuchReleaseError","getWarehouseDir","METEOR_WAREHOUSE_DIR","convertToStandardPath","usesWarehouse","Error","pathJoin","getHomeDir","getToolsDir","version","getToolsFreshFile","_latestReleaseSymlinkPath","_latestToolsSymlinkPath","ensureReleaseExistsAndReturnManifest","release","quiet","_populateWarehouseForRelease","packageExistsInWarehouse","name","exists","getPackageFreshFile","toolsExistsInWarehouse","realReleaseExistsInWarehouse","releasesDir","releaseManifestPath","manifest","JSON","parse","readFile","redPill","e","_calculateNewPiecesForRelease","releaseManifest","newPieces","tools","packages","toolsVersion","needsDownload","each","isEmpty","_packageUpdatesMessage","packageNames","lines","width","currentLine","length","push","join","releaseVersion","showInstalling","mkdir_p","releaseAlreadyExists","releaseManifestText","METEOR_TEST_FAIL_RELEASE_DOWNLOAD","OfflineError","result","request","response","statusCode","body","console","log","keys","sort","downloadToolsToWarehouse","_platform","error","symlink","packagesToDownload","packageInfo","downloadPackagesToWarehouse","notices","getUrl","writeFile","unlinkIfExists","file","unlink","code","platform","warehouseDirectory","dontWriteFreshFile","toolsTarballFilename","toolsTarballPath","toolsTarball","url","encoding","extractTarGz","parallelEach","packageDir","packageUrl","tarball","getUrlWithResuming","type","architecture"],"mappings":"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","sourcesContent":["// This file is used to access the \"warehouse\" of pre-0.9.0 releases. This code\n// is now legacy, but we keep it around so that you can still use the same\n// `meteor` entry point to run pre-0.9.0 and post-0.9.0 releases, for now. All\n// it knows how to do is download old releases and explain to main.js how to\n// exec them.\n//\n// Because of this, we do have to be careful that the files used by this code\n// and the files used by tropohouse.js (the modern version of the warehouse)\n// don't overlap. tropohouse does not use tools or releases directorys, and\n// while they both have packages directories with similar structures, the\n// version names should not overlap: warehouse versions are SHAs and tropohouse\n// versions are semvers.  Additionally, while they do both use the 'meteor'\n// symlink at the top level, there's no actual code in this file to write that\n// symlink (it was just created by the bootstrap tarball release process).\n\n\n/// We store a \"warehouse\" of tools, releases and packages on\n/// disk. This warehouse is populated from our servers, as needed.\n///\n/// Directory structure:\n///\n///     meteor (relative path symlink to tools/latest/bin/meteor)\n///     tools/ (not in checkout, since we run against checked-out code)\n///       latest/ (relative path symlink to latest VERSION/ tools directory)\n///       VERSION/\n///     releases/\n///       latest (relative path symlink to latest x.y.z.release.json)\n///       x.y.z.release.json\n///       x.y.z.notices.json\n///     packages/\n///       foo/\n///         VERSION/\n///\n/// The warehouse is not used at all when running from a\n/// checkout. Only local packages will be loaded (from\n/// CHECKOUT/packages or within a directory in the METEOR_PACKAGE_DIRS\n/// environment variable). The setup of that is handled by release.js.\n\nvar os = require(\"os\");\nvar _ = require(\"underscore\");\n\nvar files = require('../fs/files');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar utils = require('../utils/utils.js');\n\n// Use `METEOR_WAREHOUSE_URLBASE` to override the default warehouse\n// url base.\nvar WAREHOUSE_URLBASE = process.env.METEOR_WAREHOUSE_URLBASE || 'https://warehouse.meteor.com';\n\nvar warehouse = exports;\nObject.assign(warehouse, {\n  // An exception meaning that you asked for a release that doesn't\n  // exist.\n  NoSuchReleaseError: function () {\n  },\n\n  // Return our loaded collection of tools, releases and\n  // packages. If we're running an installed version, found at\n  // $HOME/.meteor.\n  getWarehouseDir: function () {\n    // a hook for tests, or i guess for users.\n    if (process.env.METEOR_WAREHOUSE_DIR) {\n      return files.convertToStandardPath(process.env.METEOR_WAREHOUSE_DIR);\n    }\n\n    // This function should never be called unless we have a warehouse\n    // (an installed version, or with process.env.METEOR_WAREHOUSE_DIR\n    // set)\n    if (!files.usesWarehouse()) {\n      throw new Error(\"There's no warehouse in a git checkout\");\n    }\n\n    return files.pathJoin(files.getHomeDir(), '.meteor');\n  },\n\n  getToolsDir: function (version) {\n    return files.pathJoin(warehouse.getWarehouseDir(), 'tools', version);\n  },\n\n  getToolsFreshFile: function (version) {\n    return files.pathJoin(warehouse.getWarehouseDir(), 'tools', version, '.fresh');\n  },\n\n  _latestReleaseSymlinkPath: function () {\n    return files.pathJoin(warehouse.getWarehouseDir(), 'releases', 'latest');\n  },\n\n  _latestToolsSymlinkPath: function () {\n    return files.pathJoin(warehouse.getWarehouseDir(), 'tools', 'latest');\n  },\n\n  // Ensure the passed release version is stored in the local\n  // warehouse and return its parsed manifest.\n  //\n  // If 'quiet' is true, don't print anything as we do it.\n  //\n  // Throws:\n  // - files.OfflineError if the release isn't cached locally and we\n  //   are offline.\n  // - warehouse.NoSuchReleaseError if we talked to the server and it\n  //   told us that no release named 'release' exists.\n  ensureReleaseExistsAndReturnManifest: function (release, quiet) {\n    if (!files.usesWarehouse()) {\n      throw new Error(\"Not in a warehouse but requesting a manifest!\");\n    }\n\n    return warehouse._populateWarehouseForRelease(release, !quiet);\n  },\n\n  packageExistsInWarehouse: function (name, version) {\n    // A package exists if its directory exists. (We used to look for a\n    // particular file name (\"package.js\") inside the directory, but since we\n    // always install packages by untarring to a temporary directory and\n    // renaming atomically, we shouldn't worry about partial packages.)\n    return files.exists(\n      files.pathJoin(warehouse.getWarehouseDir(), 'packages', name, version));\n  },\n\n  getPackageFreshFile: function (name, version) {\n    return files.pathJoin(\n      warehouse.getWarehouseDir(),\n      'packages', name, version, '.fresh');\n  },\n\n  toolsExistsInWarehouse: function (version) {\n    return files.exists(warehouse.getToolsDir(version));\n  },\n\n  // Returns true if we already have the release file on disk, and it's not a\n  // fake \"red pill\" release --- we should never springboard to those!\n  realReleaseExistsInWarehouse: function (version) {\n    var releasesDir = files.pathJoin(warehouse.getWarehouseDir(), 'releases');\n    var releaseManifestPath = files.pathJoin(releasesDir,\n                                        version + '.release.json');\n    try {\n      var manifest = JSON.parse(files.readFile(releaseManifestPath, 'utf8'));\n      return !manifest.redPill;\n    } catch (e) {\n      return false;\n    }\n  },\n\n  _calculateNewPiecesForRelease: function (releaseManifest) {\n    // newPieces.tools and newPieces.packages[PACKAGE] are either falsey (if\n    // nothing is new), or an object with keys \"version\" and bool\n    // \"needsDownload\". \"needsDownload\" is true if the piece is not in the\n    // warehouse, and is false if it's in the warehouse but has never been used.\n    var newPieces = {\n      tools: null,\n      packages: {}\n    };\n\n    // populate warehouse with tools version for this release\n    var toolsVersion = releaseManifest.tools;\n    if (!warehouse.toolsExistsInWarehouse(toolsVersion)) {\n      newPieces.tools = {version: toolsVersion, needsDownload: true};\n    } else if (files.exists(warehouse.getToolsFreshFile(toolsVersion))) {\n      newPieces.tools = {version: toolsVersion, needsDownload: false};\n    }\n\n    _.each(releaseManifest.packages, function (version, name) {\n      if (!warehouse.packageExistsInWarehouse(name, version)) {\n        newPieces.packages[name] = {version: version, needsDownload: true};\n      } else if (files.exists(warehouse.getPackageFreshFile(name, version))) {\n        newPieces.packages[name] = {version: version, needsDownload: false};\n      }\n    });\n    if (newPieces.tools || !_.isEmpty(newPieces.packages)) {\n      return newPieces;\n    }\n    return null;\n  },\n\n  _packageUpdatesMessage: function (packageNames) {\n    var lines = [];\n    var width = 80;  // see utils.printPackageList for why we hardcode this\n    var currentLine = ' * Package updates:';\n    _.each(packageNames, function (name) {\n      if (currentLine.length + 1 + name.length <= width) {\n        currentLine += ' ' + name;\n      } else {\n        lines.push(currentLine);\n        currentLine = '   ' + name;\n      }\n    });\n    lines.push(currentLine);\n    return lines.join('\\n');\n  },\n\n  // fetches the manifest file for the given release version. also fetches\n  // all of the missing versioned packages referenced from the release manifest\n  // @param releaseVersion {String} eg \"0.1\"\n  _populateWarehouseForRelease: function (releaseVersion, showInstalling) {\n    var releasesDir = files.pathJoin(warehouse.getWarehouseDir(), 'releases');\n    files.mkdir_p(releasesDir, 0o755);\n    var releaseManifestPath = files.pathJoin(releasesDir,\n                                             releaseVersion + '.release.json');\n\n    // If the release already exists, we don't have to do anything, except maybe\n    // print a message if this release has never been used before (and we only\n    // have it due to a background download).\n    var releaseAlreadyExists = true;\n    try {\n      var releaseManifestText = files.readFile(releaseManifestPath);\n    } catch (e) {\n      releaseAlreadyExists = false;\n    }\n\n    // Now get release manifest if we don't already have it, but only write it\n    // after we're done writing packages\n    if (!releaseAlreadyExists) {\n\n      // For automated self-test. If METEOR_TEST_FAIL_RELEASE_DOWNLOAD\n      // is 'offline' or 'not-found', make release downloads fail.\n      if (process.env.METEOR_TEST_FAIL_RELEASE_DOWNLOAD === \"offline\") {\n        throw new files.OfflineError(new Error(\"scripted failure for tests\"));\n      }\n      if (process.env.METEOR_TEST_FAIL_RELEASE_DOWNLOAD === \"not-found\") {\n        throw new warehouse.NoSuchReleaseError;\n      }\n\n      try {\n        var result = httpHelpers.request(\n          WAREHOUSE_URLBASE + \"/releases/\" + releaseVersion + \".release.json\");\n      } catch (e) {\n        throw new files.OfflineError(e);\n      }\n\n      if (result.response.statusCode !== 200) {\n        // We actually got some response, so we're probably online and we\n        // just can't find the release.\n        throw new warehouse.NoSuchReleaseError;\n      }\n\n      releaseManifestText = result.body;\n    }\n\n    var releaseManifest = JSON.parse(releaseManifestText);\n\n    var newPieces = warehouse._calculateNewPiecesForRelease(releaseManifest);\n\n    if (releaseAlreadyExists && !newPieces) {\n      return releaseManifest;\n    }\n\n    if (newPieces && showInstalling) {\n      console.log(\"Installing Meteor %s:\", releaseVersion);\n      if (newPieces.tools) {\n        console.log(\" * 'meteor' build tool (version %s)\",\n                    newPieces.tools.version);\n      }\n      if (!_.isEmpty(newPieces.packages)) {\n        console.log(warehouse._packageUpdatesMessage(\n          Object.keys(newPieces.packages).sort()));\n      }\n      console.log();\n    }\n\n    if (!releaseAlreadyExists) {\n      if (newPieces && newPieces.tools && newPieces.tools.needsDownload) {\n        try {\n          warehouse.downloadToolsToWarehouse(\n            newPieces.tools.version,\n            warehouse._platform(),\n            warehouse.getWarehouseDir());\n        } catch (e) {\n          if (showInstalling) {\n            console.error(\"Failed to load tools for release \" + releaseVersion);\n          }\n          throw e;\n        }\n\n        // If the 'tools/latest' symlink doesn't exist, this must be the first\n        // legacy tools we've downloaded into this warehouse. Add the symlink,\n        // so that the tools doesn't get confused when it tries to readlink it.\n        if (!files.exists(warehouse._latestToolsSymlinkPath())) {\n          files.symlink(newPieces.tools.version,\n                         warehouse._latestToolsSymlinkPath());\n        }\n      }\n\n      var packagesToDownload = {};\n      _.each(newPieces && newPieces.packages, function (packageInfo, name) {\n        if (packageInfo.needsDownload) {\n          packagesToDownload[name] = packageInfo.version;\n        }\n      });\n      if (!_.isEmpty(packagesToDownload)) {\n        try {\n          warehouse.downloadPackagesToWarehouse(packagesToDownload,\n                                                warehouse._platform(),\n                                                warehouse.getWarehouseDir());\n        } catch (e) {\n          if (showInstalling) {\n            console.error(\"Failed to load packages for release \" +\n                          releaseVersion);\n          }\n          throw e;\n        }\n      }\n\n      // try getting the releases's notices. only blessed releases have one, so\n      // if we can't find it just proceed.\n      try {\n        var notices = httpHelpers.getUrl(\n          WAREHOUSE_URLBASE + \"/releases/\" + releaseVersion + \".notices.json\");\n\n        // Real notices are valid JSON.\n        JSON.parse(notices);\n\n        files.writeFile(\n          files.pathJoin(releasesDir, releaseVersion + '.notices.json'),\n          notices);\n      } catch (e) {\n        // no notices, proceed\n      }\n\n      // Now that we have written all packages, it's safe to write the\n      // release manifest.\n      files.writeFile(releaseManifestPath, releaseManifestText);\n\n      // If the 'releases/latest' symlink doesn't exist, this must be the first\n      // legacy release manifest we've downloaded into this warehouse. Add the\n      // symlink, so that the tools doesn't get confused when it tries to\n      // readlink it.\n      if (!files.exists(warehouse._latestReleaseSymlinkPath())) {\n        files.symlink(releaseVersion + '.release.json',\n                       warehouse._latestReleaseSymlinkPath());\n      }\n    }\n\n    // Finally, clear the \"fresh\" files for all the things we just printed\n    // (whether or not we just downloaded them). (Don't do this if we didn't\n    // print the installing message!)\n    if (newPieces && showInstalling) {\n      var unlinkIfExists = function (file) {\n        try {\n          files.unlink(file);\n        } catch (e) {\n          // If two processes populate the warehouse in parallel, the other\n          // process may have deleted the fresh file. That's OK!\n          if (e.code === \"ENOENT\") {\n            return;\n          }\n          throw e;\n        }\n      };\n\n      if (newPieces.tools) {\n        unlinkIfExists(warehouse.getToolsFreshFile(newPieces.tools.version));\n      }\n      _.each(newPieces.packages, function (packageInfo, name) {\n        unlinkIfExists(\n          warehouse.getPackageFreshFile(name, packageInfo.version));\n      });\n    }\n\n    return releaseManifest;\n  },\n\n  // this function is also used by bless-release.js\n  downloadToolsToWarehouse: function (\n      toolsVersion, platform, warehouseDirectory, dontWriteFreshFile) {\n    // XXX this sucks. We store all the tarballs in memory. This is huge.\n    // We should instead stream packages in parallel. Since the node stream\n    // API is in flux, we should probably wait a bit.\n    // http://blog.nodejs.org/2012/12/20/streams2/\n\n    var toolsTarballFilename =\n          \"meteor-tools-\" + toolsVersion + \"-\" + platform + \".tar.gz\";\n    var toolsTarballPath = \"/tools/\" + toolsVersion + \"/\"\n          + toolsTarballFilename;\n    var toolsTarball = httpHelpers.getUrl({\n      url: WAREHOUSE_URLBASE + toolsTarballPath,\n      encoding: null\n    });\n    files.extractTarGz(\n      toolsTarball, files.pathJoin(warehouseDirectory, 'tools', toolsVersion));\n    if (!dontWriteFreshFile) {\n      files.writeFile(warehouse.getToolsFreshFile(toolsVersion), '');\n    }\n  },\n\n  // this function is also used by bless-release.js\n  downloadPackagesToWarehouse: function (packagesToDownload,\n                                         platform,\n                                         warehouseDirectory,\n                                         dontWriteFreshFile) {\n    fiberHelpers.parallelEach(\n      packagesToDownload, function (version, name) {\n        var packageDir = files.pathJoin(\n          warehouseDirectory, 'packages', name, version);\n        var packageUrl = WAREHOUSE_URLBASE + \"/packages/\" + name +\n              \"/\" + version +\n              \"/\" + name + '-' + version + \"-\" + platform + \".tar.gz\";\n\n        var tarball = httpHelpers.getUrlWithResuming({\n          url: packageUrl,\n          encoding: null\n        });\n\n        files.extractTarGz(tarball, packageDir);\n\n        if (!dontWriteFreshFile) {\n          files.writeFile(warehouse.getPackageFreshFile(name, version), '');\n        }\n      });\n  },\n\n  _platform: function () {\n    return os.type() + \"_\" + utils.architecture();\n  }\n});\n"],"file":"tools/packaging/warehouse.js.map"}