{"version":3,"sources":["/tools/isobuild/meteor-npm.js"],"names":["_objectSpread","module1","link","default","v","export","getProdPackageNames","parse","npmVersion","version","execFileAsync","getRebuildArgs","get","convertColonsInPath","convert","wrapOptimistic","wrap","dirtyNodeModulesDirectory","optimisticLStat","optimisticStatOrNull","optimisticReadJsonOrNull","optimisticReaddir","assert","require","cleanup","fs","files","os","_","httpHelpers","buildmessage","utils","runLog","Profile","meteorNpm","exports","tmpDirs","onExit","each","dir","exists","rm_recursive","NpmFailure","updateDependencies","packageName","packageNpmDir","npmDependencies","quiet","newPackageNpmDir","randomToken","isEmpty","rename","e","code","pathJoin","updateExistingNpmDirectory","createFreshNpmDirectory","without","nodeModulesDir","names","Object","create","dirs","nodeModulesDirStack","walk","packageJsonPath","packageJsonStat","isFile","pkg","push","scanDeps","dependencies","peerDependencies","optionalDependencies","bundledDependencies","bundleDependencies","strictEqual","pop","deps","keys","forEach","name","resDir","resolve","has","i","length","candidate","stat","isDirectory","pathDirname","lastRebuildJSONFilename","currentVersions","platform","process","arch","versions","currentVersionsJSON","JSON","stringify","recordLastRebuildVersions","pkgDir","writeFile","versionsAreCompatible","isSubtreeOf","a","b","aType","bType","aVer","bVer","major","minor","rebuildVersionsAreCompatible","pkgPath","versionFile","path","rebuildIfNonPortable","dirsToRebuild","scan","scoped","readdir","item","startsWith","isPortable","tempDir","tempNodeModules","mkdir_p","tempPkgDirs","splice","tempPkgDir","pathRelative","copyNpmPackageWithSymlinkedNodeModules","rebuildResult","runNpmCommand","success","error","actualNodeModulesDir","actualNodeModulesStat","statOrNull","symlinkNodeModulesDir","renameDirAlmostAtomically","fromPkgDir","toPkgDir","needToHandleNodeModules","cp_r","nodeModulesFromPath","nodeModulesToPath","mkdir","depPath","absDepFromPath","absDepToPath","symlink","portableCache","portableVersion","lstat","endsWith","pkgJsonPath","pkgJsonStat","canCache","portableFile","convertToOSPath","result","allowSyntaxError","unlink","pkgJson","hasBuildScript","scripts","preinstall","install","postinstall","every","itemName","dependenciesArePortable","ok","pathBasename","makeNewPackageNpmDir","join","Error","oldNodeVersion","readFile","currentNodeCompatibilityVersion","installedDependenciesTree","getInstalledDependenciesTree","shrinkwrappedDependenciesTree","getShrinkwrappedDependenciesTree","npmTree","minInstalledTree","minimizeDependencyTree","minShrinkwrapTree","logUpdateDependencies","preservedShrinkwrap","installNpmDependencies","newShrinkwrapFile","newPackageJsonFile","installFromShrinkwrap","completeNpmDirectory","subsetTree","supersetTree","predicate","isObject","value","key","isFunction","packageJsonExisted","installNpmModule","shrinkwrap","copyFile","createReadme","createNodeVersion","replace","npmUserConfigFile","__dirname","args","cwd","getEnv","devBundleDir","getDevBundle","isWindows","npmPath","commandToRun","env","ComSpec","_printNpmCalls","stdout","write","devBundle","then","opts","maxBuffer","npm_config_userconfig","Promise","execFile","err","stderr","message","await","ls","contents","sort","assign","info","from","_from","prefix","fromUrl","slice","isNpmUrl","resolved","_resolved","integrity","_integrity","lockfileVersion","canonicalVersion","depObj","treeToDependencies","tree","object","map","properties","getInstalledDependencies","getShrinkwrappedDependencies","installArg","pkgNotFound","quotemeta","versionNotFound","match","RegExp","pathsWithColons","findPathsWithRegex","firstTen","packageLockJsonPath","minimizeModule","module","isUrlFromRegistry","minimized","subModule","newTopLevelDependencies","url","NCR","NPM_CONFIG_REGISTRY","log"],"mappings":"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","sourcesContent":["/// Implements the process of managing a package's .npm directory,\n/// in which we call `npm install` to install npm dependencies,\n/// and a variety of related commands. Notably, we use `npm shrinkwrap`\n/// to ensure we get consistent versions of npm sub-dependencies.\n\nvar assert = require('assert');\nvar cleanup = require('../tool-env/cleanup.js');\nvar fs = require('fs');\nvar files = require('../fs/files');\nvar os = require('os');\nvar _ = require('underscore');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar utils = require('../utils/utils.js');\nvar runLog = require('../runners/run-log.js');\nvar Profile = require('../tool-env/profile').Profile;\nimport { parse } from \"semver\";\nimport { version as npmVersion } from 'npm';\nimport { execFileAsync } from \"../utils/processes\";\nimport {\n  get as getRebuildArgs\n} from \"../static-assets/server/npm-rebuild-args.js\";\nimport {\n  convert as convertColonsInPath\n} from \"../utils/colon-converter.js\";\n\nimport { wrap as wrapOptimistic } from \"optimism\";\nimport {\n  dirtyNodeModulesDirectory,\n  optimisticLStat,\n  optimisticStatOrNull,\n  optimisticReadJsonOrNull,\n  optimisticReaddir,\n} from \"../fs/optimistic\";\n\nvar meteorNpm = exports;\n\n// Expose the version of npm in use from the dev bundle.\nmeteorNpm.npmVersion = npmVersion;\n\n// if a user exits meteor while we're trying to create a .npm\n// directory, we will have temporary directories that we clean up\nvar tmpDirs = [];\ncleanup.onExit(function () {\n  _.each(tmpDirs, function (dir) {\n    if (files.exists(dir)) {\n      files.rm_recursive(dir);\n    }\n  });\n});\n\n// Exception used internally to gracefully bail out of a npm run if\n// something goes wrong\nvar NpmFailure = function () {};\n\n// Creates a temporary directory in which the new contents of the\n// package's .npm directory will be assembled. If all is successful,\n// renames that directory back to .npm. Returns true if there are NPM\n// dependencies and they are installed without error.\n//\n// @param npmDependencies {Object} dependencies that should be\n//     installed, eg {tar: '0.1.6', gcd: '0.0.0'}. If falsey or empty,\n//     will remove the .npm directory instead.\nmeteorNpm.updateDependencies = function (packageName,\n                                         packageNpmDir,\n                                         npmDependencies,\n                                         quiet) {\n  // we make sure to put it beside the original package dir so that\n  // we can then atomically rename it. we also make sure to\n  // randomize the name, in case we're bundling this package\n  // multiple times in parallel.\n  var newPackageNpmDir =\n    convertColonsInPath(packageNpmDir) + '-new-' + utils.randomToken();\n\n  if (! npmDependencies || _.isEmpty(npmDependencies)) {\n    // No NPM dependencies? Delete the .npm directory if it exists (because,\n    // eg, we used to have NPM dependencies but don't any more).  We'd like to\n    // do this in as atomic a way as possible in case multiple meteor\n    // instances are trying to make this update in parallel, so we rename the\n    // directory to something before doing the rm -rf.\n    try {\n      files.rename(packageNpmDir, newPackageNpmDir);\n    } catch (e) {\n      if (e.code !== 'ENOENT') {\n        throw e;\n      }\n      // It didn't exist, which is exactly what we wanted.\n      return false;\n    }\n    files.rm_recursive(newPackageNpmDir);\n    return false;\n  }\n\n  try {\n    // v0.6.0 had a bug that could cause .npm directories to be\n    // created without npm-shrinkwrap.json\n    // (https://github.com/meteor/meteor/pull/927). Running your app\n    // in that state causes consistent \"Corrupted .npm directory\"\n    // errors.\n    //\n    // If you've reached that state, delete the empty directory and\n    // proceed.\n    if (files.exists(packageNpmDir) &&\n        ! files.exists(files.pathJoin(packageNpmDir, 'npm-shrinkwrap.json'))) {\n      files.rm_recursive(packageNpmDir);\n    }\n\n    if (files.exists(packageNpmDir)) {\n      // we already nave a .npm directory. update it appropriately with some\n      // ceremony involving:\n      // `npm install`, `npm install name@version`, `npm shrinkwrap`\n      updateExistingNpmDirectory(\n        packageName, newPackageNpmDir, packageNpmDir, npmDependencies, quiet);\n    } else {\n      // create a fresh .npm directory with `npm install\n      // name@version` and `npm shrinkwrap`\n      createFreshNpmDirectory(\n        packageName, newPackageNpmDir, packageNpmDir, npmDependencies, quiet);\n    }\n  } catch (e) {\n    if (e instanceof NpmFailure) {\n      // Something happened that was out of our control, but wasn't\n      // exactly unexpected (eg, no such npm package, no internet\n      // connection). Handle it gracefully.\n      return false;\n    }\n\n    // Some other exception -- let it propagate.\n    throw e;\n  } finally {\n    if (files.exists(newPackageNpmDir)) {\n      files.rm_recursive(newPackageNpmDir);\n    }\n    tmpDirs = _.without(tmpDirs, newPackageNpmDir);\n  }\n\n  return true;\n};\n\n// Returns a flattened dictionary of npm package names used in production,\n// or false if there is no package.json file in the parent directory.\nexport const getProdPackageNames = wrapOptimistic(nodeModulesDir => {\n  const names = Object.create(null);\n  const dirs = Object.create(null);\n  const nodeModulesDirStack = [];\n\n  // Returns true iff dir is a package directory.\n  function walk(dir) {\n    const packageJsonPath = files.pathJoin(dir, \"package.json\");\n    const packageJsonStat = optimisticStatOrNull(packageJsonPath);\n\n    if (packageJsonStat &&\n        packageJsonStat.isFile()) {\n      const pkg = optimisticReadJsonOrNull(packageJsonPath);\n      const nodeModulesDir = files.pathJoin(dir, \"node_modules\");\n      nodeModulesDirStack.push(nodeModulesDir);\n\n      // Scan all dependencies except pkg.devDependencies.\n      scanDeps(pkg.dependencies);\n      scanDeps(pkg.peerDependencies);\n      scanDeps(pkg.optionalDependencies);\n      scanDeps(pkg.bundledDependencies);\n      // This typo is also honored.\n      scanDeps(pkg.bundleDependencies);\n\n      assert.strictEqual(\n        nodeModulesDirStack.pop(),\n        nodeModulesDir\n      );\n\n      return true;\n    }\n\n    return false;\n  }\n\n  function scanDeps(deps) {\n    if (! deps) {\n      return;\n    }\n\n    Object.keys(deps).forEach(name => {\n      const resDir = resolve(name);\n      if (! resDir || _.has(dirs, resDir)) {\n        return;\n      }\n\n      // Record that we've seen this directory so that we don't try to\n      // walk it again.\n      dirs[resDir] = name;\n\n      if (walk(resDir)) {\n        // If resDir is indeed a package directory, record the package\n        // name in the set of production names.\n        names[name] = true;\n      }\n    });\n  }\n\n  function resolve(name) {\n    for (let i = nodeModulesDirStack.length - 1; i >= 0; --i) {\n      const nodeModulesDir = nodeModulesDirStack[i];\n      const candidate = files.pathJoin(nodeModulesDir, name);\n      const stat = optimisticStatOrNull(candidate);\n      if (stat && stat.isDirectory()) {\n        return candidate;\n      }\n    }\n  }\n\n  // If the top-level nodeModulesDir is not contained by a package\n  // directory with a package.json file, then we return false to indicate\n  // that we don't know or care which packages are production-specific.\n  // Concretely, this means your app needs to have a package.json file if\n  // you want any npm packages to be excluded in production.\n  return walk(files.pathDirname(nodeModulesDir)) && names;\n});\n\nconst lastRebuildJSONFilename = \".meteor-last-rebuild-version.json\";\n\nconst currentVersions = {\n  platform: process.platform,\n  arch: process.arch,\n  versions: {...process.versions},\n};\n\nconst currentVersionsJSON =\n  JSON.stringify(currentVersions, null, 2) + \"\\n\";\n\nfunction recordLastRebuildVersions(pkgDir) {\n  // Record the current process.{platform,arch,versions} so that we can\n  // avoid copying/rebuilding/renaming next time.\n  files.writeFile(\n    files.pathJoin(pkgDir, lastRebuildJSONFilename),\n    currentVersionsJSON,\n    \"utf8\"\n  );\n}\n\n// Returns true iff isSubtreeOf(currentVersions, versions), allowing\n// valid semantic versions to differ in their patch versions.\nfunction versionsAreCompatible(versions) {\n  return isSubtreeOf(currentVersions, versions, (a, b) => {\n    // Technically already handled by isSubtreeOf, but doesn't hurt.\n    if (a === b) {\n      return true;\n    }\n\n    if (! a || ! b) {\n      return false;\n    }\n\n    const aType = typeof a;\n    const bType = typeof b;\n\n    if (aType !== bType) {\n      return false;\n    }\n\n    if (aType === \"string\") {\n      const aVer = parse(a);\n      const bVer = parse(b);\n      return aVer && bVer &&\n        aVer.major === bVer.major &&\n        aVer.minor === bVer.minor;\n    }\n  });\n}\n\nfunction rebuildVersionsAreCompatible(pkgPath) {\n  const versionFile =\n    files.pathJoin(pkgPath, lastRebuildJSONFilename);\n\n  return versionsAreCompatible(\n    optimisticReadJsonOrNull(versionFile));\n}\n\nfunction isDirectory(path) {\n  const stat = optimisticStatOrNull(path);\n  return !! (stat && stat.isDirectory());\n}\n\n// Rebuilds any binary dependencies in the given node_modules directory,\n// and returns true iff anything was rebuilt.\nmeteorNpm.rebuildIfNonPortable =\nProfile(\"meteorNpm.rebuildIfNonPortable\", function (nodeModulesDir) {\n  const dirsToRebuild = [];\n\n  function scan(dir, scoped) {\n    if (! isDirectory(dir)) {\n      return;\n    }\n\n    files.readdir(dir).forEach(item => {\n      if (item.startsWith(\".\")) {\n        // Ignore \"hidden\" files, such as node_modules/.bin directories.\n        return;\n      }\n\n      const path = files.pathJoin(dir, item);\n\n      if (! scoped &&\n          item.startsWith(\"@\")) {\n        return scan(path, true);\n      }\n\n      if (! isDirectory(path)) {\n        return;\n      }\n\n      if (isPortable(path)) {\n        return;\n      }\n\n      if (rebuildVersionsAreCompatible(path)) {\n        return;\n      }\n\n      dirsToRebuild.push(path);\n    });\n  }\n\n  scan(nodeModulesDir);\n\n  if (dirsToRebuild.length === 0) {\n    return false;\n  }\n\n  const tempDir = files.pathJoin(\n    nodeModulesDir,\n    \".temp-\" + utils.randomToken()\n  );\n\n  // There's a chance the basename of the original nodeModulesDir isn't\n  // actually \"node_modules\", which will confuse the `npm rebuild`\n  // command, but fortunately we can ensure this temporary directory has\n  // exactly that basename.\n  const tempNodeModules = files.pathJoin(tempDir, \"node_modules\");\n  files.mkdir_p(tempNodeModules);\n\n  // Map from original package directory paths to temporary package\n  // directory paths.\n  const tempPkgDirs = {};\n\n  dirsToRebuild.splice(0).forEach(pkgPath => {\n    const tempPkgDir = tempPkgDirs[pkgPath] = files.pathJoin(\n      tempNodeModules,\n      files.pathRelative(nodeModulesDir, pkgPath)\n    );\n\n    // It's possible the pkgPath directory may have been deleted since we\n    // did the scan above: https://circleci.com/gh/meteor/meteor/31330\n    if (isDirectory(pkgPath)) {\n      // Copy the package directory instead of renaming it, so that the\n      // original package will be left untouched if the rebuild fails. We\n      // could just run files.cp_r(pkgPath, tempPkgDir) here, except that we\n      // want to handle nested node_modules directories specially.\n      copyNpmPackageWithSymlinkedNodeModules(pkgPath, tempPkgDir);\n\n      // Record the current process.versions so that we can avoid\n      // copying/rebuilding/renaming next time.\n      recordLastRebuildVersions(tempPkgDir);\n\n      dirsToRebuild.push(pkgPath);\n    }\n  });\n\n  // The `npm rebuild` command must be run in the parent directory of the\n  // relevant node_modules directory, which in this case is tempDir.\n  const rebuildResult = runNpmCommand(getRebuildArgs(), tempDir);\n  if (! rebuildResult.success) {\n    buildmessage.error(rebuildResult.error);\n    files.rm_recursive(tempDir);\n    return false;\n  }\n\n  dirtyNodeModulesDirectory(nodeModulesDir);\n\n  // If the `npm rebuild` command succeeded, overwrite the original\n  // package directories with the rebuilt package directories.\n  dirsToRebuild.forEach(function (pkgPath) {\n    const actualNodeModulesDir =\n      files.pathJoin(pkgPath, \"node_modules\");\n\n    const actualNodeModulesStat =\n      files.statOrNull(actualNodeModulesDir);\n\n    if (actualNodeModulesStat &&\n        actualNodeModulesStat.isDirectory()) {\n      // If the original package had a node_modules directory, move it\n      // into the temporary package directory, overwriting the one created\n      // by copyNpmPackageWithSymlinkedNodeModules (which contains only\n      // symlinks), so that when we rename the temporary directory back to\n      // the original directory below, we'll end up with a node_modules\n      // directory that contains real packages rather than symlinks.\n\n      const symlinkNodeModulesDir =\n        files.pathJoin(tempPkgDirs[pkgPath], \"node_modules\");\n\n      files.renameDirAlmostAtomically(\n        actualNodeModulesDir,\n        symlinkNodeModulesDir\n      );\n    }\n\n    files.renameDirAlmostAtomically(tempPkgDirs[pkgPath], pkgPath);\n  });\n\n  files.rm_recursive(tempDir);\n\n  return true;\n});\n\n// Copy an npm package directory to another location, but attempt to\n// symlink all of its node_modules rather than recursively copying them,\n// which potentially saves a lot of time.\nfunction copyNpmPackageWithSymlinkedNodeModules(fromPkgDir, toPkgDir) {\n  files.mkdir_p(toPkgDir);\n\n  let needToHandleNodeModules = false;\n\n  files.readdir(fromPkgDir).forEach(item => {\n    if (item === \"node_modules\") {\n      // We'll link or copy node_modules in a follow-up step.\n      needToHandleNodeModules = true;\n      return;\n    }\n\n    files.cp_r(\n      files.pathJoin(fromPkgDir, item),\n      files.pathJoin(toPkgDir, item)\n    );\n  });\n\n  if (! needToHandleNodeModules) {\n    return;\n  }\n\n  const nodeModulesFromPath = files.pathJoin(fromPkgDir, \"node_modules\");\n  const nodeModulesToPath = files.pathJoin(toPkgDir, \"node_modules\");\n\n  files.mkdir(nodeModulesToPath);\n\n  files.readdir(nodeModulesFromPath).forEach(depPath => {\n    if (depPath === \".bin\") {\n      // Avoid copying node_modules/.bin because commands like\n      // .bin/node-gyp and .bin/node-pre-gyp tend to cause problems.\n      return;\n    }\n\n    const absDepFromPath = files.pathJoin(nodeModulesFromPath, depPath);\n\n    if (! files.stat(absDepFromPath).isDirectory()) {\n      // Only copy package directories, even though there might be other\n      // kinds of files in node_modules.\n      return;\n    }\n\n    const absDepToPath = files.pathJoin(nodeModulesToPath, depPath);\n\n    // Try to symlink node_modules dependencies if possible (faster),\n    // and fall back to a recursive copy otherwise.\n    try {\n      files.symlink(absDepFromPath, absDepToPath, \"junction\");\n    } catch (e) {\n      files.cp_r(absDepFromPath, absDepToPath);\n    }\n  });\n}\n\nconst portableCache = Object.create(null);\n\n// Increment this version to trigger the full portability check again.\nconst portableVersion = 2;\n\nconst isPortable = Profile(\"meteorNpm.isPortable\", dir => {\n  const lstat = optimisticLStat(dir);\n  if (! lstat.isDirectory()) {\n    // Non-directory files are portable unless they end with .node.\n    return ! dir.endsWith(\".node\");\n  }\n\n  const pkgJsonPath = files.pathJoin(dir, \"package.json\");\n  const pkgJsonStat = optimisticStatOrNull(pkgJsonPath);\n  const canCache = pkgJsonStat && pkgJsonStat.isFile();\n  const portableFile = files.convertToOSPath(\n    files.pathJoin(dir, \".meteor-portable-\" + portableVersion + \".json\")\n  );\n\n  if (canCache) {\n    // Cache previous results by writing a boolean value to a hidden file\n    // called .meteor-portable. Although it's tempting to write this file\n    // once for the whole node_modules directory, it's important that we\n    // put .meteor-portable files only in the individual top-level package\n    // directories, so that they will get cleared away the next time those\n    // packages are (re)installed.\n    const result = _.has(portableCache, portableFile)\n      ? portableCache[portableFile]\n      : optimisticReadJsonOrNull(portableFile, {\n          // Make optimisticReadJsonOrNull return null if there's a\n          // SyntaxError when parsing the .meteor-portable file.\n          allowSyntaxError: true\n        });\n\n    if (typeof result === \"boolean\") {\n      return result;\n    }\n\n  } else {\n    // Clean up any .meteor-portable files we mistakenly wrote in\n    // directories that do not contain package.json files. #7296\n    fs.unlink(portableFile, error => {});\n  }\n\n  const pkgJson = canCache && optimisticReadJsonOrNull(pkgJsonPath, {\n    // A syntactically incorrect `package.json` isn't likely to have other\n    // effects since the npm itself likely won't install but the developer has\n    // no control over that happening so we should allow this.\n    allowSyntaxError: true\n  });\n\n  const hasBuildScript =\n    pkgJson &&\n    pkgJson.scripts &&\n    (pkgJson.scripts.preinstall ||\n     pkgJson.scripts.install ||\n     pkgJson.scripts.postinstall);\n\n  const result = hasBuildScript\n    ? false // Build scripts may not be portable.\n    : optimisticReaddir(dir).every(\n      // Ignore files that start with a \".\", such as .bin directories.\n      itemName => itemName.startsWith(\".\") ||\n        isPortable(files.pathJoin(dir, itemName)));\n\n  if (canCache) {\n    // Write the .meteor-portable file asynchronously, and don't worry\n    // if it fails, e.g. because the file system is read-only (#6591).\n    // Failing to write the file only means more work next time.\n    fs.writeFile(\n      portableFile,\n      JSON.stringify(result) + \"\\n\",\n      error => {\n        // Once the asynchronous write finishes (successful or not), we no\n        // longer need to cache the written value in memory.\n        delete portableCache[portableFile];\n      },\n    );\n\n    // Cache the result immediately in memory so we don't have to wait for\n    // file change notifications to invalidate optimisticReadJsonOrNull.\n    portableCache[portableFile] = result;\n  }\n\n  return result;\n});\n\n// Return true if all of a package's npm dependencies are portable\n// (that is, if the node_modules can be copied anywhere and we'd\n// expect it to work, rather than containing native extensions that\n// were built just for our architecture), else\n// false. updateDependencies should first be used to bring\n// nodeModulesDir up to date.\nmeteorNpm.dependenciesArePortable = function (nodeModulesDir) {\n  // We use a simple heuristic: we check to see if a package (or any\n  // of its transitive dependencies) contains any *.node files. .node\n  // is the extension that signals to Node that it should load a file\n  // as a shared object rather than as JavaScript, so this should work\n  // in the vast majority of cases.\n\n  assert.ok(\n    files.pathBasename(nodeModulesDir).startsWith(\"node_modules\"),\n    \"Bad node_modules directory: \" + nodeModulesDir,\n  );\n\n  // Only check/write .meteor-portable files in each of the top-level\n  // package directories.\n  return isPortable(nodeModulesDir);\n};\n\nvar makeNewPackageNpmDir = function (newPackageNpmDir) {\n  // keep track so that we can remove them on process exit\n  tmpDirs.push(newPackageNpmDir);\n  files.mkdir_p(newPackageNpmDir);\n\n  // create node_modules -- prevent npm install from installing\n  // to an existing node_modules dir higher up in the filesystem\n  files.mkdir(files.pathJoin(newPackageNpmDir, 'node_modules'));\n\n  // create .gitignore -- node_modules shouldn't be in git since we\n  // recreate it as needed by using `npm install`. since we use `npm\n  // shrinkwrap` we're guaranteed to have the same version installed\n  // each time.\n  files.writeFile(\n    files.pathJoin(newPackageNpmDir, '.gitignore'),\n    ['node_modules',\n     ''/*git diff complains without trailing newline*/].join('\\n'));\n};\n\nvar updateExistingNpmDirectory = function (packageName, newPackageNpmDir,\n                                           packageNpmDir, npmDependencies,\n                                           quiet) {\n  // sanity check on contents of .npm directory\n  if (!files.stat(packageNpmDir).isDirectory()) {\n    throw new Error(\"Corrupted .npm directory -- should be a directory: \" +\n                    packageNpmDir);\n  }\n  if (!files.exists(files.pathJoin(packageNpmDir, 'npm-shrinkwrap.json'))) {\n    throw new Error(\n      \"Corrupted .npm directory -- can't find npm-shrinkwrap.json in \" +\n        packageNpmDir);\n  }\n\n  // We need to rebuild all node modules when the Node version\n  // changes, in case there are some binary ones. Technically this is\n  // racey, but it shouldn't fail very often.\n  var nodeModulesDir = files.pathJoin(packageNpmDir, 'node_modules');\n  if (files.exists(nodeModulesDir)) {\n    var oldNodeVersion;\n    try {\n      oldNodeVersion = files.readFile(\n        files.pathJoin(packageNpmDir, 'node_modules', '.node_version'), 'utf8');\n    } catch (e) {\n      if (e.code !== 'ENOENT') {\n        throw e;\n      }\n      // Use the Node version from the last release where we didn't\n      // drop this file.\n      oldNodeVersion = 'v0.8.24';\n    }\n\n    if (oldNodeVersion !== currentNodeCompatibilityVersion()) {\n      files.rm_recursive(nodeModulesDir);\n    }\n  }\n\n  // Make sure node_modules is present (fix for #1761). Prevents npm install\n  // from installing to an existing node_modules dir higher up in the\n  // filesystem.  node_modules may be absent due to a change in Node version or\n  // when `meteor add`ing a cloned package for the first time (node_modules is\n  // excluded by .gitignore)\n  if (! files.exists(nodeModulesDir)) {\n    files.mkdir(nodeModulesDir);\n  }\n\n  var installedDependenciesTree = getInstalledDependenciesTree(packageNpmDir);\n  var shrinkwrappedDependenciesTree =\n    getShrinkwrappedDependenciesTree(packageNpmDir);\n\n  const npmTree = { dependencies: {} };\n  _.each(npmDependencies, (version, name) => {\n    npmTree.dependencies[name] = { version };\n  });\n\n  const minInstalledTree =\n    minimizeDependencyTree(installedDependenciesTree);\n  const minShrinkwrapTree =\n    minimizeDependencyTree(shrinkwrappedDependenciesTree);\n\n  if (isSubtreeOf(npmTree, minInstalledTree) &&\n      isSubtreeOf(minShrinkwrapTree, minInstalledTree)) {\n    return;\n  }\n\n  if (! quiet) {\n    logUpdateDependencies(packageName, npmDependencies);\n  }\n\n  makeNewPackageNpmDir(newPackageNpmDir);\n\n  let preservedShrinkwrap;\n\n  if (_.isEmpty(npmDependencies)) {\n    // If there are no npmDependencies, make sure nothing is installed.\n    preservedShrinkwrap = { dependencies: {} };\n\n  } else if (isSubtreeOf(npmTree, minShrinkwrapTree)) {\n    // If the top-level npm dependencies are already encompassed by the\n    // npm-shrinkwrap.json file, then reuse that file.\n    preservedShrinkwrap = shrinkwrappedDependenciesTree;\n\n  } else {\n    // Otherwise install npmTree.dependencies as if we were creating a new\n    // .npm/package directory, and leave preservedShrinkwrap empty.\n    installNpmDependencies(npmDependencies, newPackageNpmDir);\n\n    // Note: as of npm@4.0.0, npm-shrinkwrap.json files are regarded as\n    // \"canonical,\" meaning `npm install` (without a package argument)\n    // will only install dependencies mentioned in npm-shrinkwrap.json.\n    // That's why we can't just update installedDependenciesTree to\n    // include npmTree.dependencies and hope for the best, because if the\n    // new versions of the required top-level packages have any additional\n    // transitive dependencies, those dependencies will not be installed\n    // unless previously mentioned in npm-shrinkwrap.json. Reference:\n    // https://github.com/npm/npm/blob/latest/CHANGELOG.md#no-more-partial-shrinkwraps-breaking\n  }\n\n  if (! _.isEmpty(preservedShrinkwrap &&\n                  preservedShrinkwrap.dependencies)) {\n    const newShrinkwrapFile = files.pathJoin(\n      newPackageNpmDir,\n      'npm-shrinkwrap.json'\n    );\n\n    // There are some unchanged packages here. Install from shrinkwrap.\n    files.writeFile(\n      newShrinkwrapFile,\n      JSON.stringify(preservedShrinkwrap, null, 2)\n    );\n\n    const newPackageJsonFile = files.pathJoin(\n      newPackageNpmDir,\n      \"package.json\"\n    );\n\n    // We have to write out a minimal package.json file, else the results\n    // of installFromShrinkwrap may be incomplete in npm@5.\n    files.writeFile(\n      newPackageJsonFile,\n      JSON.stringify({\n        dependencies: npmDependencies\n      }, null, 2)\n    );\n\n    // `npm install`\n    installFromShrinkwrap(newPackageNpmDir);\n\n    files.unlink(newShrinkwrapFile);\n    files.unlink(newPackageJsonFile);\n  }\n\n  completeNpmDirectory(packageName, newPackageNpmDir, packageNpmDir,\n                       npmDependencies);\n};\n\nfunction isSubtreeOf(subsetTree, supersetTree, predicate) {\n  if (subsetTree === supersetTree) {\n    return true;\n  }\n\n  if (_.isObject(subsetTree)) {\n    return _.isObject(supersetTree) &&\n      _.every(subsetTree, (value, key) => {\n        return isSubtreeOf(value, supersetTree[key], predicate);\n      });\n  }\n\n  if (_.isFunction(predicate)) {\n    const result = predicate(subsetTree, supersetTree);\n    if (typeof result === \"boolean\") {\n      return result;\n    }\n  }\n\n  return false;\n}\n\nvar createFreshNpmDirectory = function (packageName, newPackageNpmDir,\n                                        packageNpmDir, npmDependencies, quiet) {\n  if (! quiet) {\n    logUpdateDependencies(packageName, npmDependencies);\n  }\n\n  makeNewPackageNpmDir(newPackageNpmDir);\n\n  installNpmDependencies(npmDependencies, newPackageNpmDir);\n\n  completeNpmDirectory(packageName, newPackageNpmDir, packageNpmDir,\n                       npmDependencies);\n};\n\nfunction installNpmDependencies(dependencies, dir) {\n  const packageJsonPath = files.pathJoin(dir, \"package.json\");\n  const packageJsonExisted = files.exists(packageJsonPath);\n\n  files.writeFile(\n    packageJsonPath,\n    JSON.stringify({ dependencies }, null, 2)\n  );\n\n  try {\n    Object.keys(dependencies).forEach(name => {\n      const version = dependencies[name];\n      installNpmModule(name, version, dir);\n    });\n  } finally {\n    if (! packageJsonExisted) {\n      files.unlink(packageJsonPath);\n    }\n  }\n}\n\n// Shared code for updateExistingNpmDirectory and createFreshNpmDirectory.\nfunction completeNpmDirectory(\n  packageName,\n  newPackageNpmDir,\n  packageNpmDir,\n  npmDependencies,\n) {\n  // Create a shrinkwrap file.\n  shrinkwrap(newPackageNpmDir);\n\n  // And stow a copy of npm-shrinkwrap too.\n  files.copyFile(\n    files.pathJoin(newPackageNpmDir, 'npm-shrinkwrap.json'),\n    files.pathJoin(newPackageNpmDir, 'node_modules', '.npm-shrinkwrap.json')\n  );\n\n  createReadme(newPackageNpmDir);\n  createNodeVersion(newPackageNpmDir);\n  files.renameDirAlmostAtomically(newPackageNpmDir, packageNpmDir);\n\n  dirtyNodeModulesDirectory(files.pathJoin(packageNpmDir, \"node_modules\"));\n}\n\nvar createReadme = function (newPackageNpmDir) {\n  // This file gets checked in to version control by users, so resist the\n  // temptation to make unnecessary tweaks to it.\n  files.writeFile(\n    files.pathJoin(newPackageNpmDir, 'README'),\n\"This directory and the files immediately inside it are automatically generated\\n\" +\n\"when you change this package's NPM dependencies. Commit the files in this\\n\" +\n\"directory (npm-shrinkwrap.json, .gitignore, and this README) to source control\\n\" +\n\"so that others run the same versions of sub-dependencies.\\n\" +\n\"\\n\" +\n\"You should NOT check in the node_modules directory that Meteor automatically\\n\" +\n\"creates; if you are using git, the .gitignore file tells git to ignore it.\\n\"\n  );\n};\n\nvar createNodeVersion = function (newPackageNpmDir) {\n  files.writeFile(\n    files.pathJoin(newPackageNpmDir, 'node_modules', '.node_version'),\n    currentNodeCompatibilityVersion());\n};\n\n// This value should change whenever we think that the Node C ABI has changed\n// (ie, when we need to be sure to reinstall npm packages because they might\n// have native components that need to be rebuilt). It does not need to change\n// for every patch release of Node! Notably, it needed to change between 0.8.*\n// and 0.10.*.  If Node does make a patch release of 0.10 that breaks\n// compatibility, you can just change this from \"0.10.*\" to \"0.10.35\" or\n// whatever.\nvar currentNodeCompatibilityVersion = function () {\n  var version = process.version;\n  version = version.replace(/\\.(\\d+)$/, '.*');\n  return version + '\\n';\n};\n\nconst npmUserConfigFile = files.pathJoin(\n  __dirname,\n  \"meteor-npm-userconfig\"\n);\n\nvar runNpmCommand = meteorNpm.runNpmCommand =\nProfile(\"meteorNpm.runNpmCommand\", function (args, cwd) {\n  import { getEnv } from \"../cli/dev-bundle-bin-helpers.js\";\n\n  const devBundleDir = files.getDevBundle();\n  const isWindows = process.platform === \"win32\";\n  const npmPath = files.convertToOSPath(files.pathJoin(\n    devBundleDir, \"bin\",\n    isWindows ? \"npm.cmd\" : \"npm\"\n  ));\n\n  // On Windows, `.cmd` and `.bat` files must be launched in a shell per:\n  // http://nodejs.org/api/child_process.html#child_process_spawning_bat_and_cmd_files_on_windows\n  //\n  // Additionally, the COMSPEC environment variable is meant to have the path to\n  // cmd.exe, but we'll use 'cmd.exe' if it's not set, in the same spirit as\n  // http://nodejs.org/api/child_process.html#child_process_shell_requirements.\n\n  let commandToRun = npmPath;\n  if (isWindows) {\n    args = ['/c', npmPath, ...args];\n    commandToRun = process.env.ComSpec || \"cmd.exe\";\n  }\n\n  if (meteorNpm._printNpmCalls) {\n    // only used by test-bundler.js\n    process.stdout.write('cd ' + cwd + ' && ' + commandToRun + ' ' +\n                         args.join(' ') + ' ...\\n');\n  }\n\n  return getEnv({\n    devBundle: devBundleDir\n  }).then(env => {\n    const opts = {\n      env: env,\n      maxBuffer: 10 * 1024 * 1024\n    };\n\n    if (cwd) {\n      opts.cwd = files.convertToOSPath(cwd);\n    }\n\n    // Make sure we don't honor any user-provided configuration files.\n    env.npm_config_userconfig = npmUserConfigFile;\n\n    return new Promise(function (resolve) {\n      require('child_process').execFile(\n        commandToRun, args, opts, function (err, stdout, stderr) {\n          if (meteorNpm._printNpmCalls) {\n            process.stdout.write(err ? 'failed\\n' : 'done\\n');\n          }\n\n          resolve({\n            success: ! err,\n            error: (err ? `${err.message}${stderr}` : stderr),\n            stdout: stdout,\n            stderr: stderr\n          });\n        }\n      );\n    }).await();\n\n  }).await();\n});\n\n// Gets a JSON object from `npm ls --json` (getInstalledDependenciesTree) or\n// `npm-shrinkwrap.json` (getShrinkwrappedDependenciesTree).\n//\n// @returns {Object} eg {\n//   \"name\": \"packages\",\n//   \"version\": \"0.0.0\",\n//   \"dependencies\": {\n//     \"sockjs\": {\n//       \"version\": \"0.3.4\",\n//       \"dependencies\": {\n//         \"node-uuid\": {\n//           \"version\": \"1.3.3\"\n//         }\n//       }\n//     }\n//   }\n// }\nfunction getInstalledDependenciesTree(dir) {\n  function ls(nodeModulesDir) {\n    let contents;\n    try {\n      contents = files.readdir(nodeModulesDir).sort();\n    } finally {\n      if (! contents) return;\n    }\n\n    const result = {};\n\n    contents.forEach(item => {\n      if (item.startsWith(\".\")) {\n        return;\n      }\n\n      const pkgDir = files.pathJoin(nodeModulesDir, item);\n      const pkgJsonPath = files.pathJoin(pkgDir, \"package.json\");\n\n      if (item.startsWith(\"@\")) {\n        Object.assign(result, ls(pkgDir));\n        return;\n      }\n\n      let pkg;\n      try {\n        pkg = JSON.parse(files.readFile(pkgJsonPath));\n      } finally {\n        if (! pkg) return;\n      }\n\n      const name = pkg.name || item;\n\n      const info = result[name] = {\n        version: pkg.version\n      };\n\n      const from = pkg._from || pkg.from;\n      if (from) {\n        // Fix for https://github.com/meteor/meteor/issues/9477:\n        const prefix = name + \"@\";\n        let fromUrl = from;\n        if (fromUrl.startsWith(prefix)) {\n          fromUrl = fromUrl.slice(prefix.length);\n        }\n\n        if (utils.isNpmUrl(fromUrl) &&\n            ! utils.isNpmUrl(info.version)) {\n          info.version = fromUrl;\n        }\n      }\n\n      const resolved = pkg._resolved || pkg.resolved;\n      if (resolved && resolved !== info.version) {\n        info.resolved = resolved;\n      }\n\n      const integrity = pkg._integrity || pkg.integrity;\n      if (integrity) {\n        info.integrity = integrity;\n      }\n\n      const deps = ls(files.pathJoin(pkgDir, \"node_modules\"));\n      if (deps && ! _.isEmpty(deps)) {\n        info.dependencies = deps;\n      }\n    });\n\n    return result;\n  }\n\n  return {\n    lockfileVersion: 1,\n    dependencies: ls(files.pathJoin(dir, \"node_modules\"))\n  };\n}\n\nfunction getShrinkwrappedDependenciesTree(dir) {\n  const shrinkwrap = JSON.parse(files.readFile(\n    files.pathJoin(dir, 'npm-shrinkwrap.json')\n  ));\n  shrinkwrap.lockfileVersion = 1;\n  return shrinkwrap;\n};\n\n// Maps a \"dependency object\" (a thing you find in `npm ls --json` or\n// npm-shrinkwrap.json with keys like \"version\" and \"from\") to the\n// canonical version that matches what users put in the `Npm.depends`\n// clause.  ie, either the version or the tarball URL.\n//\n// If more logic is added here, it should probably go in minimizeModule too.\nvar canonicalVersion = function (depObj) {\n  if (utils.isNpmUrl(depObj.from)) {\n    return depObj.from;\n  } else {\n    return depObj.version;\n  }\n};\n\n// map the structure returned from `npm ls` or shrinkwrap.json into\n// the structure of npmDependencies (e.g. {gcd: '0.0.0'}), so that\n// they can be diffed. This only returns top-level dependencies.\nvar treeToDependencies = function (tree) {\n  return _.object(\n    _.map(\n      tree.dependencies, function (properties, name) {\n        return [name, canonicalVersion(properties)];\n      }));\n};\n\nvar getInstalledDependencies = function (dir) {\n  return treeToDependencies(getInstalledDependenciesTree(dir));\n};\n\n// (appears to not be called)\nvar getShrinkwrappedDependencies = function (dir) {\n  return treeToDependencies(getShrinkwrappedDependenciesTree(dir));\n};\n\nconst installNpmModule = meteorNpm.installNpmModule = (name, version, dir) => {\n  const installArg = utils.isNpmUrl(version)\n    ? version\n    : `${name}@${version}`;\n\n  // We don't use npm.commands.install since we couldn't figure out\n  // how to silence all output (specifically the installed tree which\n  // is printed out with `console.log`)\n  const result = runNpmCommand([\"install\", installArg], dir);\n\n  if (! result.success) {\n    const pkgNotFound =\n      `404 Not Found - GET ${utils.quotemeta(\"https://registry.npmjs.org/\"+name)}`;\n\n    const versionNotFound =\n      \"No matching version found for \" +\n      `${utils.quotemeta(name)}@${utils.quotemeta(version)}`;\n\n    if (result.stderr.match(new RegExp(pkgNotFound))) {\n      buildmessage.error(\n        `there is no npm package named '${name}' in the npm registry`);\n    } else if (result.stderr.match(new RegExp(versionNotFound))) {\n      buildmessage.error(\n        `${name} version ${version} is not available in the npm registry`);\n    } else {\n      buildmessage.error(\n        `couldn\\'t install npm package ${name}@${version}: ${result.error}`);\n    }\n\n    // Recover by returning false from updateDependencies\n    throw new NpmFailure;\n  }\n\n  const pkgDir = files.pathJoin(dir, \"node_modules\", name);\n  if (! isPortable(pkgDir)) {\n    recordLastRebuildVersions(pkgDir);\n  }\n\n  if (process.platform !== \"win32\") {\n    // If we are on a unixy file system, we should not build a package that\n    // can't be used on Windows.\n\n    var pathsWithColons = files.findPathsWithRegex(\".\", new RegExp(\":\"),\n      { cwd: files.pathJoin(dir, \"node_modules\") });\n\n    if (pathsWithColons.length) {\n      var firstTen = pathsWithColons.slice(0, 10);\n      if (pathsWithColons.length > 10) {\n        firstTen.push(\"... \" + (pathsWithColons.length - 10) +\n          \" paths omitted.\");\n      }\n\n      buildmessage.error(\n\"Some filenames in your package have invalid characters.\\n\" +\n\"The following file paths in the NPM module '\" + name + \"' have colons, ':', which won't work on Windows:\\n\" +\nfirstTen.join(\"\\n\"));\n\n      throw new NpmFailure;\n    }\n  }\n};\n\nvar installFromShrinkwrap = function (dir) {\n  if (! files.exists(files.pathJoin(dir, \"npm-shrinkwrap.json\"))) {\n    throw new Error(\n      \"Can't call `npm install` without a npm-shrinkwrap.json file present\");\n  }\n\n  // `npm install`, which reads npm-shrinkwrap.json.\n  var result = runNpmCommand([\"install\"], dir);\n\n  if (! result.success) {\n    buildmessage.error(\n      \"couldn't install npm packages from npm-shrinkwrap: \" +\n        result.error\n    );\n\n    // Recover by returning false from updateDependencies\n    throw new NpmFailure;\n  }\n\n  const nodeModulesDir = files.pathJoin(dir, \"node_modules\");\n  files.readdir(nodeModulesDir).forEach(function (name) {\n    const pkgDir = files.pathJoin(nodeModulesDir, name);\n    if (! isPortable(pkgDir, true)) {\n      recordLastRebuildVersions(pkgDir);\n    }\n  });\n};\n\n// `npm shrinkwrap`\nfunction shrinkwrap(dir) {\n  const tree = getInstalledDependenciesTree(dir);\n\n  files.writeFile(\n    files.pathJoin(dir, \"npm-shrinkwrap.json\"),\n    JSON.stringify(tree, null, 2) + \"\\n\"\n  );\n\n  const packageLockJsonPath =\n    files.pathJoin(dir, \"package-lock.json\");\n\n  // The normal `npm shrinkwrap` commands renames any package-lock.json\n  // file to npm-shrinkwrap.json, so this function should have the same\n  // side effect (i.e., removing package-lock.json if it exists).\n  if (files.exists(packageLockJsonPath)) {\n    files.unlink(packageLockJsonPath);\n  }\n}\n\n// Reduces a dependency tree (as read from a just-made npm-shrinkwrap.json or\n// from npm ls --json) to just the versions we want. Returns an object that does\n// not share state with its input\nfunction minimizeDependencyTree(tree) {\n  function minimizeModule(module) {\n    var version;\n    if (module.resolved && ! isUrlFromRegistry(module.resolved)) {\n      version = module.resolved;\n    } else if (utils.isNpmUrl(module.from)) {\n      version = module.from;\n    } else {\n      version = module.version;\n    }\n    var minimized = {version: version};\n\n    if (module.dependencies) {\n      minimized.dependencies = {};\n      _.each(module.dependencies, function (subModule, name) {\n        minimized.dependencies[name] = minimizeModule(subModule);\n      });\n    }\n    return minimized;\n  }\n\n  var newTopLevelDependencies = {};\n  _.each(tree.dependencies, function (module, name) {\n    newTopLevelDependencies[name] = minimizeModule(module);\n  });\n  return {dependencies: newTopLevelDependencies};\n}\n\nfunction isUrlFromRegistry(url) {\n  if (url.match(/^https?:\\/\\/registry.npmjs.org\\//)) {\n    return true;\n  }\n  const NCR = process.env.NPM_CONFIG_REGISTRY;\n  return NCR && url.startsWith(NCR);\n}\n\nvar logUpdateDependencies = function (packageName, npmDependencies) {\n  runLog.log(packageName + ': updating npm dependencies -- ' +\n             Object.keys(npmDependencies).join(', ') + '...');\n};\n"],"file":"tools/isobuild/meteor-npm.js.map"}