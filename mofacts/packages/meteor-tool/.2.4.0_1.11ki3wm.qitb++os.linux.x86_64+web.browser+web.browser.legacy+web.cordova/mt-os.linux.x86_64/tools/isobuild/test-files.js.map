{"version":3,"sources":["/tools/isobuild/test-files.js"],"names":["module","export","TEST_FILENAME_REGEXPS","APP_TEST_FILENAME_REGEXPS","isTestFilePath","_","link","default","v","pathSep","path","splitPath","split","any","regexp","test","last"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,qBAAqB,EAAC,MAAIA,qBAA3B;AAAiDC,EAAAA,yBAAyB,EAAC,MAAIA,yBAA/E;AAAyGC,EAAAA,cAAc,EAAC,MAAIA;AAA5H,CAAd;;AAA2J,IAAIC,CAAJ;;AAAML,MAAM,CAACM,IAAP,CAAY,YAAZ,EAAyB;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,IAAAA,CAAC,GAACG,CAAF;AAAI;;AAAhB,CAAzB,EAA2C,CAA3C;AAA8C,IAAIC,OAAJ;AAAYT,MAAM,CAACM,IAAP,CAAY,aAAZ,EAA0B;AAACG,EAAAA,OAAO,CAACD,CAAD,EAAG;AAACC,IAAAA,OAAO,GAACD,CAAR;AAAU;;AAAtB,CAA1B,EAAkD,CAAlD;AAIpN,MAAMN,qBAAqB,GAAG,CACnC;AACA,UAFmC,EAGnC,WAHmC,EAInC,UAJmC,EAKnC,WALmC,CAA9B;AAQA,MAAMC,yBAAyB,GAAG,CACvC;AACA,cAFuC,EAGvC,eAHuC,EAIvC,cAJuC,EAKvC,eALuC,CAAlC;;AAUA,SAASC,cAAT,CAAwBM,IAAxB,EAA8B;AACnC,QAAMC,SAAS,GAAGD,IAAI,CAACE,KAAL,CAAWH,OAAX,CAAlB,CADmC,CAGnC;;AACA,SAAOJ,CAAC,CAACQ,GAAF,CACL,CAAC,GAAGX,qBAAJ,EAA2B,GAAGC,yBAA9B,CADK,EAELW,MAAM,IAAIA,MAAM,CAACC,IAAP,CAAYV,CAAC,CAACW,IAAF,CAAOL,SAAP,CAAZ,CAFL,CAAP;AAGD","sourcesContent":["import _ from 'underscore';\nimport { pathSep } from '../fs/files';\n\n// We have two things \"tests\" and \"app-tests\".\nexport const TEST_FILENAME_REGEXPS = [\n  // \"*.test[s].*\" or \"*.spec[s].*\"\n  /\\.test\\./,\n  /\\.tests\\./,\n  /\\.spec\\./,\n  /\\.specs\\./,\n];\n\nexport const APP_TEST_FILENAME_REGEXPS = [\n  // \"*.app-test[s].*\" or \"*.app-spec[s].*\"\n  /\\.app-test\\./,\n  /\\.app-tests\\./,\n  /\\.app-spec\\./,\n  /\\.app-specs\\./,\n];\n\n// Given a path to a file in an app (relative to the app root\n// directory), is this file a test file?\nexport function isTestFilePath(path) {\n  const splitPath = path.split(pathSep);\n\n  // Does the filename match one of the test filename forms?\n  return _.any(\n    [...TEST_FILENAME_REGEXPS, ...APP_TEST_FILENAME_REGEXPS],\n    regexp => regexp.test(_.last(splitPath)));\n}\n"],"file":"tools/isobuild/test-files.js.map"}