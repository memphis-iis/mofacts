{"version":3,"sources":["/tools/cli/commands-cordova.js"],"names":["_","module","link","default","v","main","Console","catalog","buildmessage","CORDOVA_PLATFORMS","ensureDevBundleDependencies","filterPlatforms","PlatformList","createProjectContext","appDir","ProjectContext","projectContext","projectDir","captureAndExit","readProjectMetadata","doAddPlatform","options","CordovaProject","setVerbose","verbose","platformsToAdd","args","installedPlatforms","platformList","getPlatforms","platform","includes","error","jobHasMessages","cordovaProject","concat","cordovaPlatforms","ensurePlatformsAreSynchronized","write","info","checkPlatformRequirements","doRemovePlatform","platformsToRemove","DEFAULT_PLATFORMS","without","process","registerCommand","name","type","Boolean","short","minArgs","maxArgs","Infinity","requiresApp","catalogRefresh","Refresh","Never","notOnWindows","rawInfo","join","hidden","url"],"mappings":"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","sourcesContent":["import _ from 'underscore';\nimport main from './main.js';\nimport { Console } from '../console/console.js';\nimport catalog from '../packaging/catalog/catalog.js';\nimport buildmessage from '../utils/buildmessage.js';\nimport {\n  CORDOVA_PLATFORMS,\n  ensureDevBundleDependencies,\n  filterPlatforms,\n} from '../cordova/index.js';\nimport {PlatformList} from \"../project-context\";\n\nfunction createProjectContext(appDir) {\n  import { ProjectContext } from '../project-context.js';\n\n  const projectContext = new ProjectContext({\n    projectDir: appDir\n  });\n  main.captureAndExit('=> Errors while initializing project:', () => {\n    // We're just reading metadata here; we don't need to resolve constraints.\n    projectContext.readProjectMetadata();\n  });\n  return projectContext;\n}\n\nfunction doAddPlatform(options) {\n  import { CordovaProject } from '../cordova/project.js';\n\n  Console.setVerbose(!!options.verbose);\n\n  const projectContext = createProjectContext(options.appDir);\n\n  const platformsToAdd = options.args;\n  let installedPlatforms = projectContext.platformList.getPlatforms();\n\n  main.captureAndExit('', 'adding platforms', () => {\n    for (var platform of platformsToAdd) {\n      if (installedPlatforms.includes(platform)) {\n        buildmessage.error(`${platform}: platform is already added`);\n      } else if (!CORDOVA_PLATFORMS.includes(platform)) {\n        buildmessage.error(`${platform}: no such platform`);\n      }\n    }\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    const cordovaProject = new CordovaProject(projectContext);\n    if (buildmessage.jobHasMessages()) return;\n\n    installedPlatforms = installedPlatforms.concat(platformsToAdd);\n    const cordovaPlatforms = filterPlatforms(installedPlatforms);\n    cordovaProject.ensurePlatformsAreSynchronized(cordovaPlatforms);\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    // Only write the new platform list when we have succesfully synchronized\n    projectContext.platformList.write(installedPlatforms);\n\n    for (var platform of platformsToAdd) {\n      Console.info(`${platform}: added platform`);\n      if (cordovaPlatforms.includes(platform)) {\n        cordovaProject.checkPlatformRequirements(platform);\n      }\n    }\n  });\n}\n\nfunction doRemovePlatform(options) {\n  import { CordovaProject } from '../cordova/project.js';\n  import { PlatformList } from '../project-context.js';\n\n  const projectContext = createProjectContext(options.appDir);\n\n  const platformsToRemove = options.args;\n  let installedPlatforms = projectContext.platformList.getPlatforms();\n\n  main.captureAndExit('', 'removing platforms', () => {\n    for (platform of platformsToRemove) {\n      // Explain why we can't remove server or browser platforms\n      if (PlatformList.DEFAULT_PLATFORMS.includes(platform)) {\n        buildmessage.error(`${platform}: cannot remove platform in this \\\nversion of Meteor`);\n      } else if (!installedPlatforms.includes(platform)) {\n        buildmessage.error(`${platform}: platform is not in this project`);\n      }\n    }\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    installedPlatforms = _.without(installedPlatforms, ...platformsToRemove);\n    projectContext.platformList.write(installedPlatforms);\n\n    for (platform of platformsToRemove) {\n      Console.info(`${platform}: removed platform`);\n    }\n\n    if (process.platform !== 'win32') {\n      const cordovaProject = new CordovaProject(projectContext);\n      if (buildmessage.jobHasMessages()) return;\n      const cordovaPlatforms = filterPlatforms(installedPlatforms);\n      cordovaProject.ensurePlatformsAreSynchronized(cordovaPlatforms);\n    }\n  });\n}\n\n// Add one or more Cordova platforms\nmain.registerCommand({\n  name: 'add-platform',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 1,\n  maxArgs: Infinity,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never(),\n  notOnWindows: false\n}, function (options) {\n  ensureDevBundleDependencies();\n    doAddPlatform(options);\n});\n\n// Remove one or more Cordova platforms\nmain.registerCommand({\n  name: 'remove-platform',\n  minArgs: 1,\n  maxArgs: Infinity,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  ensureDevBundleDependencies();\n  doRemovePlatform(options);\n});\n\nmain.registerCommand({\n  name: 'list-platforms',\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  const projectContext = createProjectContext(options.appDir);\n\n  const installedPlatforms = projectContext.platformList.getPlatforms();\n\n  Console.rawInfo(installedPlatforms.join('\\n') + '\\n');\n});\n\nmain.registerCommand({\n  name: 'install-sdk',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 0,\n  maxArgs: Infinity,\n  catalogRefresh: new catalog.Refresh.Never(),\n  hidden: true,\n  notOnWindows: true\n}, function (options) {\n  Console.setVerbose(!!options.verbose);\n\n  Console.info(\"Please follow the installation instructions in the mobile guide:\");\n  Console.info(Console.url(\"http://guide.meteor.com/cordova.html#installing-prerequisites\"));\n\n  return 0;\n});\n\nmain.registerCommand({\n  name: 'configure-android',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 0,\n  maxArgs: Infinity,\n  catalogRefresh: new catalog.Refresh.Never(),\n  hidden: true,\n  notOnWindows: true\n}, function (options) {\n  Console.setVerbose(!!options.verbose);\n\n  Console.info(`You can launch the Android SDK Manager from within Android \\\nStudio.\nSee`, Console.url(\"http://developer.android.com/tools/help/sdk-manager.html\"), `\nAlternatively, you can launch it by running the 'android' command.\n(This requires that you have set ANDROID_HOME and added ANDROID_HOME/tools \\\nto your PATH.)`);\n\n  return 0;\n});\n\nmain.registerCommand({\n  name: 'ensure-cordova-dependencies',\n  options: {\n    verbose: { type: Boolean, short: \"v\" }\n  },\n  minArgs: 0,\n  maxArgs: Infinity,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never(),\n}, function (options) {\n  Console.setVerbose(!!options.verbose);\n\n  ensureDevBundleDependencies();\n  Console.info(\"Cordova dependencies are installed.\");\n});\n"],"file":"tools/cli/commands-cordova.js.map"}