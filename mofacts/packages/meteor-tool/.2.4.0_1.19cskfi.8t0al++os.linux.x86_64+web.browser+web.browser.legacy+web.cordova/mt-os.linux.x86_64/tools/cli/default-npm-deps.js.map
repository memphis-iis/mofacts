{"version":3,"sources":["/tools/cli/default-npm-deps.js"],"names":["module","export","install","buildmessage","link","default","v","pathJoin","statOrNull","writeFile","unlink","INSTALL_JOB_MESSAGE","appDir","options","packageJsonPath","needTempPackageJson","dependencies","require","JSON","stringify","ok","enterJob","npmCommand","includeDevDependencies","push","runNpmCommand","installResult","success","error"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,OAAO,EAAC,MAAIA;AAAb,CAAd;AAAqC,IAAIC,YAAJ;AAAiBH,MAAM,CAACI,IAAP,CAAY,0BAAZ,EAAuC;AAACC,EAAAA,OAAO,CAACC,CAAD,EAAG;AAACH,IAAAA,YAAY,GAACG,CAAb;AAAe;;AAA3B,CAAvC,EAAoE,CAApE;AAAuE,IAAIC,QAAJ,EAAaC,UAAb,EAAwBC,SAAxB,EAAkCC,MAAlC;AAAyCV,MAAM,CAACI,IAAP,CAAY,aAAZ,EAA0B;AAACG,EAAAA,QAAQ,CAACD,CAAD,EAAG;AAACC,IAAAA,QAAQ,GAACD,CAAT;AAAW,GAAxB;;AAAyBE,EAAAA,UAAU,CAACF,CAAD,EAAG;AAACE,IAAAA,UAAU,GAACF,CAAX;AAAa,GAApD;;AAAqDG,EAAAA,SAAS,CAACH,CAAD,EAAG;AAACG,IAAAA,SAAS,GAACH,CAAV;AAAY,GAA9E;;AAA+EI,EAAAA,MAAM,CAACJ,CAAD,EAAG;AAACI,IAAAA,MAAM,GAACJ,CAAP;AAAS;;AAAlG,CAA1B,EAA8H,CAA9H;AAQtK,MAAMK,mBAAmB,GAAG,6BAA5B;;AAEO,SAAST,OAAT,CAAiBU,MAAjB,EAAyBC,OAAzB,EAAkC;AACvC,QAAMC,eAAe,GAAGP,QAAQ,CAACK,MAAD,EAAS,cAAT,CAAhC;AACA,QAAMG,mBAAmB,GAAG,CAAEP,UAAU,CAACM,eAAD,CAAxC;;AAEA,MAAIC,mBAAJ,EAAyB;AACvB;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAmBC,OAAO,CAAC,0CAAD,CAAhC,CAFuB,CAIvB;AACA;;;AACAR,IAAAA,SAAS,CACPK,eADO,EAEPI,IAAI,CAACC,SAAL,CAAe;AAAEH,MAAAA;AAAF,KAAf,EAAiC,IAAjC,EAAuC,CAAvC,IAA4C,IAFrC,EAGP,MAHO,CAAT;AAKD;;AAED,QAAMI,EAAE,GAAGjB,YAAY,CAACkB,QAAb,CAAsBV,mBAAtB,EAA2C,YAAY;AAChE,UAAMW,UAAU,GAAG,CAAC,SAAD,CAAnB;;AACA,QAAIT,OAAO,IAAIA,OAAO,CAACU,sBAAvB,EAA+C;AAC7CD,MAAAA,UAAU,CAACE,IAAX,CAAgB,oBAAhB;AACD;;AAED,UAAM;AAAEC,MAAAA;AAAF,QAAoBR,OAAO,CAAC,2BAAD,CAAjC;;AACA,UAAMS,aAAa,GAAGD,aAAa,CAACH,UAAD,EAAaV,MAAb,CAAnC;;AACA,QAAI,CAAEc,aAAa,CAACC,OAApB,EAA6B;AAC3BxB,MAAAA,YAAY,CAACyB,KAAb,CACE,2DACEF,aAAa,CAACE,KAFlB;AAIA,aAAO,KAAP;AACD;;AAED,WAAO,IAAP;AACD,GAjBU,CAAX;;AAmBA,MAAIb,mBAAJ,EAAyB;AACvB;AACAL,IAAAA,MAAM,CAACI,eAAD,CAAN;AACD;;AAED,SAAOM,EAAP;AACD","sourcesContent":["import buildmessage from \"../utils/buildmessage.js\";\nimport {\n  pathJoin,\n  statOrNull,\n  writeFile,\n  unlink,\n} from \"../fs/files\";\n\nconst INSTALL_JOB_MESSAGE = \"installing npm dependencies\";\n\nexport function install(appDir, options) {\n  const packageJsonPath = pathJoin(appDir, \"package.json\");\n  const needTempPackageJson = ! statOrNull(packageJsonPath);\n\n  if (needTempPackageJson) {\n    // NOTE we need skel-minimal to pull in jQuery which right now is required for Blaze\n    const { dependencies } = require(\"../static-assets/skel-blaze/package.json\");\n\n    // Write a minimial package.json with the same dependencies as the\n    // default new-app package.json file.\n    writeFile(\n      packageJsonPath,\n      JSON.stringify({ dependencies }, null, 2) + \"\\n\",\n      \"utf8\",\n    );\n  }\n\n  const ok = buildmessage.enterJob(INSTALL_JOB_MESSAGE, function () {\n    const npmCommand = [\"install\"];\n    if (options && options.includeDevDependencies) {\n      npmCommand.push(\"--production=false\");\n    }\n\n    const { runNpmCommand } = require(\"../isobuild/meteor-npm.js\");\n    const installResult = runNpmCommand(npmCommand, appDir);\n    if (! installResult.success) {\n      buildmessage.error(\n        \"Could not install npm dependencies for test-packages: \" +\n          installResult.error);\n\n      return false;\n    }\n\n    return true;\n  });\n\n  if (needTempPackageJson) {\n    // Clean up the temporary package.json file created above.\n    unlink(packageJsonPath);\n  }\n\n  return ok;\n}\n"],"file":"tools/cli/default-npm-deps.js.map"}