{"version":3,"sources":["/tools/cli/commands-aliases.js"],"names":["main","require","catalog","Console","registerCommand","name","maxArgs","Infinity","requiresRelease","requiresApp","pretty","catalogRefresh","Refresh","Never","options","error","command","ExitWithCode"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,WAAD,CAAlB;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,iCAAD,CAArB;;AACA,IAAIE,OAAO,GAAGF,OAAO,CAAC,uBAAD,CAAP,CAAiCE,OAA/C,C,CAEA;AACA;AACA;;;AAEAH,IAAI,CAACI,eAAL,CAAqB;AACnBC,EAAAA,IAAI,EAAE,QADa;AAEnBC,EAAAA,OAAO,EAAEC,QAFU;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,WAAW,EAAE,KAJM;AAKnBC,EAAAA,MAAM,EAAE,KALW;AAMnBC,EAAAA,cAAc,EAAE,IAAIT,OAAO,CAACU,OAAR,CAAgBC,KAApB;AANG,CAArB,EAOG,UAAUC,OAAV,EAAmB;AACpBX,EAAAA,OAAO,CAACY,KAAR,CAAc,kBAAkBZ,OAAO,CAACa,OAAR,CAAgB,cAAhB,CAAlB,GAAoD,GAAlE;AACA,QAAM,IAAIhB,IAAI,CAACiB,YAAT,CAAsB,CAAtB,CAAN;AACD,CAVD;AAYAjB,IAAI,CAACI,eAAL,CAAqB;AACnBC,EAAAA,IAAI,EAAE,SADa;AAEnBC,EAAAA,OAAO,EAAEC,QAFU;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,WAAW,EAAE,KAJM;AAKnBC,EAAAA,MAAM,EAAE,KALW;AAMnBC,EAAAA,cAAc,EAAE,IAAIT,OAAO,CAACU,OAAR,CAAgBC,KAApB;AANG,CAArB,EAOG,UAAUC,OAAV,EAAmB;AACpBX,EAAAA,OAAO,CAACY,KAAR,CAAc,kBAAkBZ,OAAO,CAACa,OAAR,CAAgB,gBAAhB,CAAlB,GAAsD,GAApE;AACA,QAAM,IAAIhB,IAAI,CAACiB,YAAT,CAAsB,CAAtB,CAAN;AACD,CAVD;AAYAjB,IAAI,CAACI,eAAL,CAAqB;AACnBC,EAAAA,IAAI,EAAE,KADa;AAEnBC,EAAAA,OAAO,EAAEC,QAFU;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,WAAW,EAAE,KAJM;AAKnBC,EAAAA,MAAM,EAAE,KALW;AAMnBC,EAAAA,cAAc,EAAE,IAAIT,OAAO,CAACU,OAAR,CAAgBC,KAApB;AANG,CAArB,EAOG,UAAUC,OAAV,EAAmB;AACpBX,EAAAA,OAAO,CAACY,KAAR,CAAc,kBAAkBZ,OAAO,CAACa,OAAR,CAAgB,iBAAhB,CAAlB,GAAuD,GAArE;AACA,QAAM,IAAIhB,IAAI,CAACiB,YAAT,CAAsB,CAAtB,CAAN;AACD,CAVD;AAYAjB,IAAI,CAACI,eAAL,CAAqB;AACnBC,EAAAA,IAAI,EAAE,WADa;AAEnBC,EAAAA,OAAO,EAAEC,QAFU;AAGnBC,EAAAA,eAAe,EAAE,KAHE;AAInBC,EAAAA,WAAW,EAAE,KAJM;AAKnBC,EAAAA,MAAM,EAAE,KALW;AAMnBC,EAAAA,cAAc,EAAE,IAAIT,OAAO,CAACU,OAAR,CAAgBC,KAApB;AANG,CAArB,EAOG,UAAUC,OAAV,EAAmB;AACpBX,EAAAA,OAAO,CAACY,KAAR,CAAc,kBAAkBZ,OAAO,CAACa,OAAR,CAAgB,gBAAhB,CAAlB,GAAsD,GAApE;AACA,QAAM,IAAIhB,IAAI,CAACiB,YAAT,CAAsB,CAAtB,CAAN;AACD,CAVD","sourcesContent":["var main = require('./main.js');\nvar catalog = require('../packaging/catalog/catalog.js');\nvar Console = require('../console/console.js').Console;\n\n///////////////////////////////////////////////////////////////////////////////\n// Command reminders for those more familiar with Rails\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'server',\n  maxArgs: Infinity,\n  requiresRelease: false,\n  requiresApp: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  Console.error(\"Did you mean \" + Console.command(\"'meteor run'\") + \"?\");\n  throw new main.ExitWithCode(1);\n});\n\nmain.registerCommand({\n  name: 'console',\n  maxArgs: Infinity,\n  requiresRelease: false,\n  requiresApp: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  Console.error(\"Did you mean \" + Console.command(\"'meteor shell'\") + \"?\");\n  throw new main.ExitWithCode(1);\n});\n\nmain.registerCommand({\n  name: 'new',\n  maxArgs: Infinity,\n  requiresRelease: false,\n  requiresApp: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  Console.error(\"Did you mean \" + Console.command(\"'meteor create'\") + \"?\");\n  throw new main.ExitWithCode(1);\n});\n\nmain.registerCommand({\n  name: 'dbconsole',\n  maxArgs: Infinity,\n  requiresRelease: false,\n  requiresApp: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  Console.error(\"Did you mean \" + Console.command(\"'meteor mongo'\") + \"?\");\n  throw new main.ExitWithCode(1);\n});\n"],"file":"tools/cli/commands-aliases.js.map"}