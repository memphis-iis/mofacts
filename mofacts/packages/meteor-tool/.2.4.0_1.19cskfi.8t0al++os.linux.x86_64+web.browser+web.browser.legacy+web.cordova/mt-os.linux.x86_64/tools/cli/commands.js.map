{"version":3,"sources":["/tools/cli/commands.js"],"names":["_objectSpread","module","link","default","v","export","parseServerOptionsForRunCommand","parseRunTargets","AVAILABLE_SKELETONS","disableNativeWatcher","ensureDevBundleDependencies","CordovaRunner","iOSRunTarget","AndroidRunTarget","EXAMPLE_REPOSITORIES","main","require","_","files","deploy","buildmessage","auth","config","runLog","utils","httpHelpers","archinfo","catalog","stats","Console","projectContextModule","release","Profile","DEPLOY_ARCH","DEFAULT_PORT","__dirnameConverted","convertToStandardPath","__dirname","qualifySitename","site","indexOf","length","substring","showInvalidArchMsg","arch","info","Object","keys","VALID_ARCHITECTURES","forEach","va","command","options","indent","runTargets","parsedServerUrl","parsePortOption","port","mobileServerOption","parsedMobileServerUrl","parseMobileServerOption","isRunOnDeviceRequested","any","runTarget","isDevice","detectMobileServerUrl","parsedCordovaServerPort","parseCordovaServerPortOption","portOption","parseUrl","error","ExitWithCode","optionName","protocol","hostname","cordovaServerPortOption","parseInt","myIp","ipAddress","message","targets","map","target","targetParts","split","platform","excludableWebArchs","filterWebArchs","webArchs","excludeArchsOption","excludeArchs","trim","filter","includes","registerCommand","name","requiresRelease","pretty","catalogRefresh","Refresh","Never","rawInfo","host","current","appDir","Error","isCheckout","gitLog","runGitInCheckout","getDisplayName","inCheckout","getToolsVersion","inspectOptions","type","String","implicitValue","normalizeInspectOptions","result","create","has","console","log","inspect","runCommandOptions","requiresApp","maxArgs","Infinity","short","Boolean","production","settings","verbose","once","assign","doRunCommand","setVerbose","args","includePackages","projectContext","ProjectContext","projectDir","allowIncompatibleUpdate","lintAppAndLocalPackages","captureAndExit","readProjectMetadata","explicit","releaseFile","fullReleaseName","displayReleaseName","appHost","appPort","appPortMatch","match","warn","setRawLogs","platformList","getWebArchs","isEmpty","push","cordovaRunner","prepareCordovaProject","CordovaProject","cordovaProject","settingsFile","mobileServerUrl","formatUrl","cordovaServerPort","jobHasMessages","checkPlatformsForRunTargets","runAll","run","proxyPort","proxyHost","buildOptions","minifyMode","buildMode","rootUrl","process","env","ROOT_URL","mongoUrl","MONGO_URL","oplogUrl","MONGO_OPLOG_URL","noReleaseCheck","METEOR_NO_RELEASE_CHECK","connect","convertToOSPath","getMeteorShellDirectory","WaitForExit","DEFAULT_SKELETON","list","example","package","bare","minimal","full","blaze","react","vue","typescript","apollo","svelte","packageName","ShowUsage","validatePackageNameOrExit","detailedColonExplanation","fsName","packageDir","pathResolve","inYourApp","exists","transform","x","xn","replace","relString","rel","official","getDefaultReleaseVersion","version","noPrefix","cp_r","pathJoin","transformFilename","f","transformContents","contents","test","Buffer","from","toString","ignore","preserveSymlinks","err","displayPackageDir","pathRelative","cwd","path","forced","latestKnown","SpringboardToLatestRelease","each","repoInfo","branchInfo","branch","repo","branchOption","appPathAsEntered","appPath","findAppDir","appName","pathBasename","nonCodeFileExts","destinationHasCodeFiles","readdir","thisPathCountsAsAFile","filePath","isHidden","stat","isDirectory","ext","pathExtname","toIgnore","skeletonExplicitOption","find","skeleton","alwaysWritePackageMap","write","projectConstraintsFile","updateReleaseConstraints","_manifest","upgraders","finishedUpgraders","appendUpgraders","allUpgraders","prepareProjectForBuild","install","includeDevDependencies","appNameToDisplay","cmd","text","appPathWithQuotesIfSpaces","url","join","buildCommands","minArgs","debug","packageType","directory","architecture","server","headless","platforms","Promise","await","buildCommand","hidden","_bundleOnly","setHeadless","bundleArch","serverArchitectures","uniq","packageMapDelta","displayOnConsole","serverOnly","selectedPlatforms","platformsArray","plat","cordovaPlatforms","getCordovaPlatforms","intersection","without","filteredArchs","undefined","buildDir","getProjectLocalDirectory","outputPath","relative","substr","labelWarn","bundlePath","recordPackages","what","bundler","bundleResult","bundle","serverArch","errors","formatMessages","mkdir_p","outputTar","createTarball","exception","rm_recursive","pluginVersionsFromStarManifest","displayNameForPlatform","enterJob","title","pluginVersions","starManifest","prepareFromAppBundle","buildPath","platformOutputPath","prepareForPlatform","buildForPlatform","argv","writeFile","packageExtension","apkPath","copyFile","requiresAppOrPackage","tempProjectDir","mkdtemp","explicitlyAddedLocalPackageDirs","packageMapFilename","forceIncludeCordovaUnibuild","lintPackageWithSourceRoot","initializeCatalog","versionRecord","localCatalog","getVersionBySourceRoot","constraint","parsePackageConstraint","removeAllPackages","addConstraints","displayName","warnings","usedMeteorAccount","findMongoPort","mongoPort","temporaryMongoUrl","maybePrintRegistrationLink","stdin","pause","runMongo","runMongoShell","isRunning","rm_recursive_async","then","password","Number","free","plan","mongo","owner","allowUnrecognizedOptions","delete","deployCommand","rawOptions","deleteApp","loggedIn","isLoggedIn","registerOrLogIn","buildArch","deployPollingTimeoutMs","isCacheBuildEnabled","isBuildOnly","waitForDeploy","deployResult","bundleAndDeploy","deployToken","leadingNewline","firstTime","add","transfer","remove","pick","pollForRegistrationCompletion","changeAuthorized","listAuthorized","testCommandOptions","ios","android","doTestCommand","global","testCommandMetadata","testRunnerAppDir","testAppPath","absTestAppPath","driverPackage","projectContextOptions","projectDirForLocalPackages","code","packagesByPath","p","packagesToAdd","getTestPackageNames","excludedPackages","exclude","some","excluded","unshift","constraintsToAdd","writeIfModified","isAppTest","isTest","projectLocalDir","copyDirIntoTestRunnerApp","allowSymlink","parts","appDirPath","testDirPath","pathDirname","symlink","platformsForRunTargets","runTestAppForPackages","packageNames","packageNamesSpecifiedExplicitly","getAllPackageNames","testPackages","getLatestVersion","testName","recordPackageUsage","disableOplog","testMetadata","banner","selenium","seleniumBrowser","omitPackageMapDeltaDisplayOnFirstRun","forceRebuildPackages","email","loginCommand","overwriteExistingToken","logoutCommand","whoAmICommand","loggedInAccountsConnectionOrPrompt","action","token","getSessionToken","getAccountsDomain","doUsernamePasswordLogin","retry","conn","loggedInAccountsConnection","getAccountsApiUrl","request","method","useSessionHeader","useAuthHeader","body","JSON","parse","response","statusCode","organizations","pluck","username","call","reason","members","changed","slow","galaxy","browserstack","phantom","history","file","junit","retries","skip","limit","preview","selftest","offline","getUrl","e","OfflineError","compileRegexp","str","RegExp","SyntaxError","testRegexp","fileRegexp","excludeRegexp","listTests","onlyChanged","includeSlowTests","galaxyOnly","clients","puppeteer","runTests","historyLines","listSites","json","minutes","secs","spinner","progress","getCurrentProgressTracker","totalProgress","end","done","i","n","resolve","updateProgress","reportProgress","setTimeout","ething","required","key","stringify"],"mappings":"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","sourcesContent":["var main = require('./main.js');\nvar _ = require('underscore');\nvar files = require('../fs/files');\nvar deploy = require('../meteor-services/deploy.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar auth = require('../meteor-services/auth.js');\nvar config = require('../meteor-services/config.js');\nvar runLog = require('../runners/run-log.js');\nvar utils = require('../utils/utils.js');\nvar httpHelpers = require('../utils/http-helpers.js');\nvar archinfo = require('../utils/archinfo');\nvar catalog = require('../packaging/catalog/catalog.js');\nvar stats = require('../meteor-services/stats.js');\nvar Console = require('../console/console.js').Console;\nvar projectContextModule = require('../project-context.js');\nvar release = require('../packaging/release.js');\n\nconst { Profile } = require(\"../tool-env/profile\");\n\nimport { disableNativeWatcher } from '../fs/safe-watcher';\nimport { ensureDevBundleDependencies } from '../cordova/index.js';\nimport { CordovaRunner } from '../cordova/runner.js';\nimport { iOSRunTarget, AndroidRunTarget } from '../cordova/run-targets.js';\n\nimport { EXAMPLE_REPOSITORIES } from './example-repositories.js';\n\n// The architecture used by Meteor Software's hosted servers; it's the\n// architecture used by 'meteor deploy'.\nvar DEPLOY_ARCH = 'os.linux.x86_64';\n\n// The default port that the development server listens on.\nvar DEFAULT_PORT = '3000';\n\n// __dirname - the location of the current executing file\nvar __dirnameConverted = files.convertToStandardPath(__dirname);\n\n// Given a site name passed on the command line (eg, 'mysite'), return\n// a fully-qualified hostname ('mysite.meteor.com').\n//\n// This is fairly simple for now. It appends 'meteor.com' if the name\n// doesn't contain a dot, and it deletes any trailing dots (the\n// technically legal hostname 'mysite.com.' is canonicalized to\n// 'mysite.com').\n//\n// In the future, you should be able to make this default to some\n// other domain you control, rather than 'meteor.com'.\nvar qualifySitename = function (site) {\n  if (site.indexOf(\".\") === -1) {\n    site = site + \".meteor.com\";\n  }\n  while (site.length && site[site.length - 1] === \".\") {\n    site = site.substring(0, site.length - 1);\n  }\n  return site;\n};\n\n// Display a message showing valid Meteor architectures.\nvar showInvalidArchMsg = function (arch) {\n  Console.info(\"Invalid architecture: \" + arch);\n  Console.info(\"The following are valid Meteor architectures:\");\n  Object.keys(archinfo.VALID_ARCHITECTURES).forEach(function (va) {\n    Console.info(\n      Console.command(va),\n      Console.options({ indent: 2 }));\n  });\n};\n\n// Utility functions to parse options in run/build/test-packages commands\n\nexport function parseServerOptionsForRunCommand(options, runTargets) {\n  const parsedServerUrl = parsePortOption(options.port);\n\n  const mobileServerOption = options['mobile-server'];\n  let parsedMobileServerUrl;\n  if (mobileServerOption) {\n    parsedMobileServerUrl = parseMobileServerOption(mobileServerOption);\n  } else {\n    const isRunOnDeviceRequested = _.any(runTargets,\n      runTarget => runTarget.isDevice);\n    parsedMobileServerUrl = detectMobileServerUrl(parsedServerUrl,\n      isRunOnDeviceRequested);\n  }\n\n  const parsedCordovaServerPort = parseCordovaServerPortOption(options);\n\n  return { parsedServerUrl, parsedMobileServerUrl, parsedCordovaServerPort };\n}\n\nfunction parsePortOption(portOption) {\n  let parsedServerUrl = utils.parseUrl(portOption);\n\n  if (!parsedServerUrl.port) {\n    Console.error(\"--port must include a port.\");\n    throw new main.ExitWithCode(1);\n  }\n\n  return parsedServerUrl;\n}\n\nfunction parseMobileServerOption(mobileServerOption,\n  optionName = 'mobile-server') {\n  let parsedMobileServerUrl = utils.parseUrl(\n    mobileServerOption,\n    { protocol: 'http' });\n\n  if (!parsedMobileServerUrl.hostname) {\n    Console.error(`--${optionName} must include a hostname.`);\n    throw new main.ExitWithCode(1);\n  }\n\n  return parsedMobileServerUrl;\n}\n\nfunction parseCordovaServerPortOption(options = {}) {\n  const cordovaServerPortOption = options['cordova-server-port'];\n  return cordovaServerPortOption ? parseInt(cordovaServerPortOption, 10) : null;\n}\n\nfunction detectMobileServerUrl(parsedServerUrl, isRunOnDeviceRequested) {\n  // Always try to use an auto-detected IP first\n  try {\n    const myIp = utils.ipAddress();\n    return {\n      protocol: 'http',\n      hostname: myIp,\n      port: parsedServerUrl.port\n    };\n  } catch (error) {\n    // Unless we are being asked to run on a device, use localhost as fallback\n    if (isRunOnDeviceRequested) {\n      Console.error(\n`Error detecting IP address for mobile app to connect to:\n${error.message}\nPlease specify the address that the mobile app should connect\nto with --mobile-server.`);\n      throw new main.ExitWithCode(1);\n    } else {\n      return {\n        protocol: 'http',\n        hostname: 'localhost',\n        port: parsedServerUrl.port\n      };\n    }\n  }\n}\n\nexport function parseRunTargets(targets) {\n  return targets.map((target) => {\n    const targetParts = target.split('-');\n    const platform = targetParts[0];\n    const isDevice = targetParts[1] === 'device';\n\n    if (platform == 'ios') {\n      return new iOSRunTarget(isDevice);\n    } else if (platform == 'android') {\n      return new AndroidRunTarget(isDevice);\n    } else {\n      Console.error(`Unknown run target: ${target}`);\n      throw new main.ExitWithCode(1);\n    }\n  });\n};\n\nconst excludableWebArchs = ['web.browser', 'web.browser.legacy', 'web.cordova'];\nfunction filterWebArchs(webArchs, excludeArchsOption) {\n  if (excludeArchsOption) {\n    const excludeArchs = excludeArchsOption.trim().split(/\\s*,\\s*/)\n      .filter(arch => excludableWebArchs.includes(arch));\n    webArchs = webArchs.filter(arch => !excludeArchs.includes(arch));\n  }\n  return webArchs;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// options that act like commands\n///////////////////////////////////////////////////////////////////////////////\n\n// Prints the Meteor architecture name of this host\nmain.registerCommand({\n  name: '--arch',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  Console.rawInfo(archinfo.host() + \"\\n\");\n});\n\n// Prints the current release in use. Note that if there is not\n// actually a specific release, we print to stderr and exit non-zero,\n// while if there is a release we print to stdout and exit zero\n// (making this useful to scripts).\n// XXX: What does this mean in our new release-free world?\nmain.registerCommand({\n  name: '--version',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (release.current === null) {\n    if (! options.appDir) {\n      throw new Error(\"missing release, but not in an app?\");\n    }\n    Console.error(\n      \"This project was created with a checkout of Meteor, rather than an \" +\n      \"official release, and doesn't have a release number associated with \" +\n      \"it. You can set its release with \" +\n      Console.command(\"'meteor update'\") + \".\");\n    return 1;\n  }\n\n  if (release.current.isCheckout()) {\n    var gitLog = utils.runGitInCheckout(\n      'log',\n      '--format=%h%d', '-n 1').trim();\n    Console.error(\"Unreleased, running from a checkout at \" + gitLog);\n    return 1;\n  }\n\n  Console.info(release.current.getDisplayName());\n});\n\n// Internal use only. For automated testing.\nmain.registerCommand({\n  name: '--long-version',\n  requiresRelease: false,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (files.inCheckout()) {\n    Console.error(\"checkout\");\n    return 1;\n  } else if (release.current === null) {\n    // .meteor/release says \"none\" but not in a checkout.\n    Console.error(\"none\");\n    return 1;\n  } else {\n    Console.rawInfo(release.current.name + \"\\n\");\n    Console.rawInfo(files.getToolsVersion() + \"\\n\");\n    return 0;\n  }\n});\n\n// Internal use only. For automated testing.\nmain.registerCommand({\n  name: '--requires-release',\n  requiresRelease: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// run\n///////////////////////////////////////////////////////////////////////////////\n\nconst inspectOptions = {\n  \"inspect\": { type: String, implicitValue: \"9229\" },\n  \"inspect-brk\": { type: String, implicitValue: \"9229\" },\n};\n\nfunction normalizeInspectOptions(options) {\n  const result = Object.create(null);\n\n  if (_.has(options, \"debug-port\")) {\n    console.log(\n      \"The --debug-port option is deprecated; \" +\n        \"please use --inspect-brk=<port> instead.\"\n    );\n\n    if (! _.has(options, \"inspect-brk\")) {\n      options[\"inspect-brk\"] = options[\"debug-port\"];\n    }\n\n    delete options[\"debug-port\"];\n  }\n\n  if (_.has(options, \"inspect-brk\")) {\n    result.inspect = {\n      port: options[\"inspect-brk\"],\n      \"break\": true,\n    };\n\n    if (_.has(options, \"inspect\")) {\n      console.log(\n        \"Both --inspect and --inspect-brk provided; \" +\n          \"ignoring --inspect.\"\n      );\n\n      delete options.inspect;\n    }\n\n  } else if (_.has(options, \"inspect\")) {\n    result.inspect = {\n      port: options.inspect,\n      \"break\": false,\n    };\n  }\n\n  return result;\n}\n\nvar runCommandOptions = {\n  requiresApp: true,\n  maxArgs: Infinity,\n  options: {\n    port: { type: String, short: \"p\", default: DEFAULT_PORT },\n    'mobile-server': { type: String },\n    'cordova-server-port': { type: String },\n    'app-port': { type: String },\n    'debug-port': { type: String },\n    ...inspectOptions,\n    'no-release-check': { type: Boolean },\n    production: { type: Boolean },\n    'raw-logs': { type: Boolean },\n    settings: { type: String, short: \"s\" },\n    verbose: { type: Boolean, short: \"v\" },\n    // With --once, meteor does not re-run the project if it crashes\n    // and does not monitor for file changes. Intentionally\n    // undocumented: intended for automated testing (eg, cli-test.sh),\n    // not end-user use. #Once\n    once: { type: Boolean },\n    // Don't run linter on rebuilds\n    'no-lint': { type: Boolean },\n    // Allow the version solver to make breaking changes to the versions\n    // of top-level dependencies.\n    'allow-incompatible-update': { type: Boolean },\n    'extra-packages': { type: String },\n    'exclude-archs': { type: String }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n};\n\nmain.registerCommand(Object.assign(\n  { name: 'run' },\n  runCommandOptions\n), doRunCommand);\n\nfunction doRunCommand(options) {\n  Console.setVerbose(!!options.verbose);\n\n  // Additional args are interpreted as run targets\n  const runTargets = parseRunTargets(options.args);\n\n  const { parsedServerUrl, parsedMobileServerUrl, parsedCordovaServerPort } =\n    parseServerOptionsForRunCommand(options, runTargets);\n\n  var includePackages = [];\n  if (options['extra-packages']) {\n    includePackages = options['extra-packages'].trim().split(/\\s*,\\s*/);\n  }\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    allowIncompatibleUpdate: options['allow-incompatible-update'],\n    lintAppAndLocalPackages: !options['no-lint'],\n    includePackages: includePackages,\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    // We're just reading metadata here --- we'll wait to do the full build\n    // preparation until after we've started listening on the proxy, etc.\n    projectContext.readProjectMetadata();\n  });\n\n  if (release.explicit) {\n    if (release.current.name !== projectContext.releaseFile.fullReleaseName) {\n      console.log(\"=> Using %s as requested (overriding %s)\",\n                  release.current.getDisplayName(),\n                  projectContext.releaseFile.displayReleaseName);\n      console.log();\n    }\n  }\n\n  let appHost, appPort;\n  if (options['app-port']) {\n    var appPortMatch = options['app-port'].match(/^(?:(.+):)?([0-9]+)?$/);\n    if (!appPortMatch) {\n      Console.error(\n        \"run: --app-port must be a number or be of the form 'host:port' \",\n        \"where port is a number. Try\",\n        Console.command(\"'meteor help run'\") + \" for help.\");\n      return 1;\n    }\n    appHost = appPortMatch[1] || null;\n    // It's legit to specify `--app-port host:` and still let the port be\n    // randomized.\n    appPort = appPortMatch[2] ? parseInt(appPortMatch[2]) : null;\n  }\n\n  if (options.production) {\n    Console.warn(\n      \"Warning: The --production flag should only be used to simulate production \" +\n      \"bundling for testing purposes. Use meteor build to create a bundle for \" +\n      \"production deployment. See: https://guide.meteor.com/deployment.html\"\n    );\n  }\n\n  if (options['raw-logs']) {\n    runLog.setRawLogs(true);\n  }\n\n  let webArchs = projectContext.platformList.getWebArchs();\n  if (! _.isEmpty(runTargets) ||\n      options['mobile-server']) {\n    if (webArchs.indexOf(\"web.cordova\") < 0) {\n      webArchs.push(\"web.cordova\");\n    }\n  }\n  webArchs = filterWebArchs(webArchs, options['exclude-archs']);\n\n  let cordovaRunner;\n  if (!_.isEmpty(runTargets)) {\n\n    function prepareCordovaProject() {\n      import { CordovaProject } from '../cordova/project.js';\n\n      main.captureAndExit('', 'preparing Cordova project', () => {\n        const cordovaProject = new CordovaProject(projectContext, {\n          settingsFile: options.settings,\n          mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n          cordovaServerPort: parsedCordovaServerPort });\n        if (buildmessage.jobHasMessages()) return;\n\n        cordovaRunner = new CordovaRunner(cordovaProject, runTargets);\n        cordovaRunner.checkPlatformsForRunTargets();\n      });\n    }\n\n    ensureDevBundleDependencies();\n    prepareCordovaProject();\n  }\n\n  var runAll = require('../runners/run-all.js');\n  return runAll.run({\n    projectContext: projectContext,\n    proxyPort: parsedServerUrl.port,\n    proxyHost: parsedServerUrl.hostname,\n    appPort: appPort,\n    appHost: appHost,\n    ...normalizeInspectOptions(options),\n    settingsFile: options.settings,\n    buildOptions: {\n      minifyMode: options.production ? 'production' : 'development',\n      buildMode: options.production ? 'production' : 'development',\n      webArchs: webArchs\n    },\n    rootUrl: process.env.ROOT_URL,\n    mongoUrl: process.env.MONGO_URL,\n    oplogUrl: process.env.MONGO_OPLOG_URL,\n    mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n    cordovaServerPort: parsedCordovaServerPort,\n    once: options.once,\n    noReleaseCheck: options['no-release-check'] || process.env.METEOR_NO_RELEASE_CHECK,\n    cordovaRunner: cordovaRunner\n  });\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// debug\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand(Object.assign(\n  { name: 'debug' },\n  runCommandOptions\n), function (options) {\n  options[\"inspect-brk\"] = options[\"inspect-brk\"] || \"9229\";\n  return doRunCommand(options);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// shell\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'shell',\n  requiresRelease: false,\n  requiresApp: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (!options.appDir) {\n    Console.error(\n      \"The \" + Console.command(\"'meteor shell'\") + \" command must be run\",\n      \"in a Meteor app directory.\"\n    );\n  } else {\n    var projectContext = new projectContextModule.ProjectContext({\n      projectDir: options.appDir\n    });\n\n    // Convert to OS path here because shell/server.js doesn't know how to\n    // convert paths, since it exists in the app and in the tool.\n    require('../shell-client').connect(\n      files.convertToOSPath(projectContext.getMeteorShellDirectory())\n    );\n\n    throw new main.WaitForExit;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// create\n///////////////////////////////////////////////////////////////////////////////\nconst DEFAULT_SKELETON = \"react\";\nexport const AVAILABLE_SKELETONS = [\n  \"apollo\",\n  \"bare\",\n  \"blaze\",\n  \"full\",\n  \"minimal\",\n  DEFAULT_SKELETON,\n  \"typescript\",\n  \"vue\",\n  \"svelte\"\n];\n\nmain.registerCommand({\n  name: 'create',\n  maxArgs: 1,\n  options: {\n    list: { type: Boolean },\n    example: { type: String },\n    package: { type: Boolean },\n    bare: { type: Boolean },\n    minimal: { type: Boolean },\n    full: { type: Boolean },\n    blaze: { type: Boolean },\n    react: { type: Boolean },\n    vue: { type: Boolean },\n    typescript: { type: Boolean },\n    apollo: { type: Boolean },\n    svelte: { type: Boolean },\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  disableNativeWatcher();\n\n  // Creating a package is much easier than creating an app, so if that's what\n  // we are doing, do that first. (For example, we don't springboard to the\n  // latest release to create a package if we are inside an app)\n  if (options.package) {\n    var packageName = options.args[0];\n\n    if (options.list || options.example) {\n      Console.error(\"No package examples exist at this time.\");\n      Console.error();\n      throw new main.ShowUsage;\n    }\n\n    if (!packageName) {\n      Console.error(\"Please specify the name of the package.\");\n      throw new main.ShowUsage;\n    }\n\n    utils.validatePackageNameOrExit(\n      packageName, {detailedColonExplanation: true});\n\n    // When we create a package, avoid introducing a colon into the file system\n    // by naming the directory after the package name without the prefix.\n    var fsName = packageName;\n    if (packageName.indexOf(\":\") !== -1) {\n      var split = packageName.split(\":\");\n\n      if (split.length > 2) {\n        // It may seem like this check should be inside package version parser's\n        // validatePackageName, but we decided to name test packages like this:\n        // local-test:prefix:name, so we have to support building packages\n        // with at least two colons. Therefore we will at least try to\n        // discourage people from putting a ton of colons in their package names\n        // here.\n        Console.error(packageName +\n          \": Package names may not have more than one colon.\");\n        return 1;\n      }\n\n      fsName = split[1];\n    }\n\n    var packageDir;\n    if (options.appDir) {\n      packageDir = files.pathResolve(options.appDir, 'packages', fsName);\n    } else {\n      packageDir = files.pathResolve(fsName);\n    }\n\n    var inYourApp = options.appDir ? \" in your app\" : \"\";\n\n    if (files.exists(packageDir)) {\n      Console.error(packageName + \": Already exists\" + inYourApp);\n      return 1;\n    }\n\n    var transform = function (x) {\n      var xn =\n        x.replace(/~name~/g, packageName).replace(/~fs-name~/g, fsName);\n\n      // If we are running from checkout, comment out the line sourcing packages\n      // from a release, with the latest release filled in (in case they do want\n      // to publish later). If we are NOT running from checkout, fill it out\n      // with the current release.\n      var relString;\n      if (release.current.isCheckout()) {\n        xn = xn.replace(/~cc~/g, \"//\");\n        var rel = catalog.official.getDefaultReleaseVersion();\n        // the no-release case should never happen except in tests.\n        relString = rel ? rel.version : \"no-release\";\n      } else {\n        xn = xn.replace(/~cc~/g, \"\");\n        relString = release.current.getDisplayName({noPrefix: true});\n      }\n\n      // If we are not in checkout, write the current release here.\n      return xn.replace(/~release~/g, relString);\n    };\n\n    try {\n      files.cp_r(files.pathJoin(__dirnameConverted, '..', 'static-assets', 'skel-pack'), packageDir, {\n        transformFilename: function (f) {\n          return transform(f);\n        },\n        transformContents: function (contents, f) {\n          if ((/(\\.html|\\.[jt]sx?|\\.css)/).test(f)) {\n            return Buffer.from(transform(contents.toString()));\n          } else {\n            return contents;\n          }\n        },\n        ignore: [/^local$/],\n        preserveSymlinks: true,\n      });\n    } catch (err) {\n      Console.error(\"Could not create package: \" + err.message);\n      return 1;\n    }\n\n    var displayPackageDir =\n      files.convertToOSPath(files.pathRelative(files.cwd(), packageDir));\n\n    // Since the directory can't have colons, the directory name will often not\n    // match the name of the package exactly, therefore we should tell people\n    // where it was created.\n    Console.info(\n      packageName + \": created in\",\n      Console.path(displayPackageDir)\n    );\n\n    return 0;\n  }\n\n  // Suppose you have an app A, and from some directory inside that\n  // app, you run 'meteor create /my/new/app'. The new app should use\n  // the latest available Meteor release, not the release that A\n  // uses. So if we were run from inside an app directory, and the\n  // user didn't force a release with --release, we need to\n  // springboard to the correct release and tools version.\n  //\n  // (In particular, it's not sufficient to create the new app with\n  // this version of the tools, and then stamp on the correct release\n  // at the end.)\n  if (! release.current.isCheckout() && !release.forced) {\n    if (release.current.name !== release.latestKnown()) {\n      throw new main.SpringboardToLatestRelease;\n    }\n  }\n\n  if (options.list) {\n    Console.info(\"Available examples:\");\n    _.each(EXAMPLE_REPOSITORIES, function (repoInfo, name) {\n      const branchInfo = repoInfo.branch ? `/tree/${repoInfo.branch}` : '';\n      Console.info(\n        Console.command(`${name}: ${repoInfo.repo}${branchInfo}`),\n        Console.options({ indent: 2 }));\n    });\n\n    Console.info();\n    Console.info(\"To create an example, simply\", Console.command(\"git clone\"),\n      \"the relevant repository and branch (run\",\n      Console.command(\"'meteor create --example <name>'\"),\n      \" to see the full command).\");\n    return 0;\n  };\n\n  if (options.example) {\n    const repoInfo = EXAMPLE_REPOSITORIES[options.example];\n    if (!repoInfo) {\n      Console.error(`${options.example}: no such example.`);\n      Console.error(\n        \"List available applications with\",\n        Console.command(\"'meteor create --list'\") + \".\");\n      return 1;\n    }\n\n    const branchOption = repoInfo.branch ? ` -b ${repoInfo.branch}` : '';\n    const path = options.args.length === 1 ? ` ${options.args[0]}` : '';\n\n    Console.info(`To create the ${options.example} example, please run:`);\n    Console.info(\n      Console.command(`git clone ${repoInfo.repo}${branchOption}${path}`),\n      Console.options({ indent: 2 }));\n\n    return 0;\n  }\n\n  var appPathAsEntered;\n  if (options.args.length === 1) {\n    appPathAsEntered = options.args[0];\n  } else {\n    throw new main.ShowUsage;\n  }\n  var appPath = files.pathResolve(appPathAsEntered);\n\n  if (files.findAppDir(appPath)) {\n    Console.error(\n      \"You can't create a Meteor project inside another Meteor project.\");\n    return 1;\n  }\n\n  var appName;\n  if (appPathAsEntered === \".\" || appPathAsEntered === \"./\") {\n    // If trying to create in current directory\n    appName = files.pathBasename(files.cwd());\n  } else {\n    appName = files.pathBasename(appPath);\n  }\n\n\n  var transform = function (x) {\n    return x.replace(/~name~/g, appName);\n  };\n\n  // These file extensions are usually metadata, not app code\n  var nonCodeFileExts = ['.txt', '.md', '.json', '.sh'];\n\n  var destinationHasCodeFiles = false;\n\n  // If the directory doesn't exist, it clearly doesn't have any source code\n  // inside itself\n  if (files.exists(appPath)) {\n    destinationHasCodeFiles = _.any(files.readdir(appPath),\n        function thisPathCountsAsAFile(filePath) {\n      // We don't mind if there are hidden files or directories (this includes\n      // .git) and we don't need to check for .meteor here because the command\n      // will fail earlier\n      var isHidden = /^\\./.test(filePath);\n      if (isHidden) {\n        // Not code\n        return false;\n      }\n\n      // We do mind if there are non-hidden directories, because we don't want\n      // to recursively check everything to do some crazy heuristic to see if\n      // we should try to create an app.\n      var stats = files.stat(files.pathJoin(appPath, filePath));\n      if (stats.isDirectory()) {\n        // Could contain code\n        return true;\n      }\n\n      // Check against our file extension white list\n      var ext = files.pathExtname(filePath);\n      if (ext == '' || nonCodeFileExts.includes(ext)) {\n        return false;\n      }\n\n      // Everything not matched above is considered to be possible source code\n      return true;\n    });\n  }\n\n  var toIgnore = [/^local$/, /^\\.id$/];\n  if (destinationHasCodeFiles) {\n    // If there is already source code in the directory, don't copy our\n    // skeleton app code over it. Just create the .meteor folder and metadata\n    toIgnore.push(/(\\.html|\\.js|\\.css)/);\n  }\n\n  const skeletonExplicitOption = AVAILABLE_SKELETONS.find(skeleton =>\n    !!options[skeleton]);\n  const skeleton = skeletonExplicitOption || DEFAULT_SKELETON;\n  files.cp_r(files.pathJoin(__dirnameConverted, '..', 'static-assets',\n    `skel-${skeleton}`), appPath, {\n    transformFilename: function (f) {\n      return transform(f);\n    },\n    transformContents: function (contents, f) {\n      if ((/(\\.html|\\.[jt]sx?|\\.css)/).test(f)) {\n        return Buffer.from(transform(contents.toString()));\n      } else {\n        return contents;\n      }\n    },\n    ignore: toIgnore,\n    preserveSymlinks: true,\n  });\n\n  // We are actually working with a new meteor project at this point, so\n  // set up its context.\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: appPath,\n    // Write .meteor/versions even if --release is specified.\n    alwaysWritePackageMap: true,\n    // examples come with a .meteor/versions file, but we shouldn't take it\n    // too seriously\n    allowIncompatibleUpdate: true\n  });\n\n  main.captureAndExit(\"=> Errors while creating your project\", function () {\n    projectContext.readProjectMetadata();\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    projectContext.releaseFile.write(\n      release.current.isCheckout() ? \"none\" : release.current.name);\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    // Also, write package version constraints from the current release\n    // If we are on a checkout, we don't need to do this as running from\n    // checkout still pins all package versions and if the user updates\n    // to a real release, the packages file will subsequently get updated\n    if (!release.current.isCheckout()) {\n      projectContext.projectConstraintsFile\n        .updateReleaseConstraints(release.current._manifest);\n    }\n\n    // Any upgrader that is in this version of Meteor doesn't need to be run on\n    // this project.\n    var upgraders = require('../upgraders.js');\n    projectContext.finishedUpgraders.appendUpgraders(upgraders.allUpgraders());\n\n    projectContext.prepareProjectForBuild();\n  });\n  // No need to display the PackageMapDelta here, since it would include all of\n  // the packages (or maybe an unpredictable subset based on what happens to be\n  // in the template's versions file).\n\n  // Since some of the project skeletons include npm `devDependencies`, we need\n  // to make sure they're included when running `npm install`.\n  require(\"./default-npm-deps.js\").install(\n    appPath,\n    { includeDevDependencies: true }\n  );\n\n  var appNameToDisplay = appPathAsEntered === \".\" ?\n    \"current directory\" : `'${appPathAsEntered}'`;\n\n  var message = `Created a new Meteor app in ${appNameToDisplay}`;\n\n  message += \".\";\n\n  Console.info(message + \"\\n\");\n\n  // Print a nice message telling people we created their new app, and what to\n  // do next.\n  Console.info(\"To run your new app:\");\n\n  function cmd(text) {\n    Console.info(Console.command(text), Console.options({\n      indent: 2\n    }));\n  }\n\n  if (appPathAsEntered !== \".\") {\n    // Wrap the app path in quotes if it contains spaces\n    const appPathWithQuotesIfSpaces = appPathAsEntered.indexOf(' ') === -1 ?\n      appPathAsEntered :\n      `'${appPathAsEntered}'`;\n\n    // Don't tell people to 'cd .'\n    cmd(\"cd \" + appPathWithQuotesIfSpaces);\n  }\n\n  cmd(\"meteor\");\n\n  Console.info(\"\");\n  Console.info(\"If you are new to Meteor, try some of the learning resources here:\");\n  Console.info(\n    Console.url(\"https://www.meteor.com/tutorials\"),\n      Console.options({ indent: 2 }));\n\n  Console.info(\"\");\n  Console.info(\"When you’re ready to deploy and host your new Meteor application, check out Cloud:\");\n  Console.info(\n    Console.url(\"https://www.meteor.com/cloud\"),\n      Console.options({ indent: 2 }));\n\n  if (!!skeletonExplicitOption) {\n    // Notify people about the skeleton options\n    Console.info([\n      \"\",\n      \"To start with a different app template, try one of the following:\",\n      \"\",\n    ].join(\"\\n\"));\n\n    cmd(\"meteor create --bare       # to create an empty app\");\n    cmd(\"meteor create --minimal    # to create an app with as few Meteor packages as possible\");\n    cmd(\"meteor create --full       # to create a more complete scaffolded app\");\n    cmd(\"meteor create --react      # to create a basic React-based app\");\n    cmd(\"meteor create --vue        # to create a basic Vue-based app\");\n    cmd(\"meteor create --apollo     # to create a basic Apollo + React app\");\n    cmd(\"meteor create --svelte     # to create a basic Svelte app\");\n    cmd(\"meteor create --typescript # to create an app using TypeScript and React\");\n    cmd(\"meteor create --blaze      # to create an app using Blaze\");\n  }\n\n  Console.info(\"\");\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// build\n///////////////////////////////////////////////////////////////////////////////\n\nvar buildCommands = {\n  minArgs: 1,\n  maxArgs: 1,\n  requiresApp: true,\n  options: {\n    debug: { type: Boolean },\n    packageType: { type: String },\n    directory: { type: Boolean },\n    architecture: { type: String },\n    \"server-only\": { type: Boolean },\n    'mobile-settings': { type: String },\n    server: { type: String },\n    \"cordova-server-port\": { type: String },\n    // Indicates whether these build is running headless, e.g. in a\n    // continuous integration building environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    'allow-incompatible-update': { type: Boolean },\n    platforms: { type: String }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n};\n\nmain.registerCommand({\n  name: \"build\",\n  ...buildCommands,\n}, async function (options) {\n  disableNativeWatcher();\n  return Profile.run(\n    \"meteor build\",\n    () => Promise.await(buildCommand(options))\n  );\n});\n\n// Deprecated -- identical functionality to 'build' with one exception: it\n// doesn't output a directory with all builds but rather only one tarball with\n// server/client programs.\n// XXX COMPAT WITH 0.9.1.1\nmain.registerCommand({\n  name: \"bundle\",\n  hidden: true,\n  ...buildCommands,\n}, async function (options) {\n  Console.error(\n    \"This command has been deprecated in favor of \" +\n    Console.command(\"'meteor build'\") + \", which allows you to \" +\n    \"build for multiple platforms and outputs a directory instead of \" +\n    \"a single tarball. See \" + Console.command(\"'meteor help build'\") + \" \" +\n    \"for more information.\");\n  Console.error();\n\n  return Profile.run(\n    \"meteor bundle\",\n    () => Promise.await(buildCommand({\n      ...options,\n      _bundleOnly: true,\n    }))\n  );\n});\n\nvar buildCommand = function (options) {\n  Console.setVerbose(!!options.verbose);\n  if (options.headless) {\n    // There's no point in spinning the spinner when we're running\n    // automated builds.\n    Console.setHeadless(true);\n  }\n  // XXX output, to stderr, the name of the file written to (for human\n  // comfort, especially since we might change the name)\n\n  // XXX name the root directory in the bundle based on the basename\n  // of the file, not a constant 'bundle' (a bit obnoxious for\n  // machines, but worth it for humans)\n\n  // Error handling for options.architecture. See archinfo for more\n  // information on what the architectures are, what they mean, et cetera.\n  if (options.architecture &&\n      !_.has(archinfo.VALID_ARCHITECTURES, options.architecture)) {\n    showInvalidArchMsg(options.architecture);\n    return 1;\n  }\n  var bundleArch = options.architecture || archinfo.host();\n\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    serverArchitectures: _.uniq([bundleArch, archinfo.host()]),\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    // TODO Fix the nested Profile.run warning here, without interfering\n    // with METEOR_PROFILE output for other commands, like `meteor run`.\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  // _bundleOnly implies serverOnly\n  const serverOnly = options._bundleOnly || !!options['server-only'];\n\n  // options['mobile-settings'] is used to set the initial value of\n  // `Meteor.settings` on mobile apps. Pass it on to options.settings,\n  // which is used in this command.\n  if (options['mobile-settings']) {\n    options.settings = options['mobile-settings'];\n  }\n\n  const appName = files.pathBasename(options.appDir);\n  let parsedCordovaServerPort;\n  let selectedPlatforms = null;\n  if (options.platforms) {\n    const platformsArray = options.platforms.split(\",\");\n\n    platformsArray.forEach(plat => {\n      if (![...excludableWebArchs, 'android', 'ios'].includes(plat)) {\n        throw new Error(`Not allowed platform on '--platforms' flag: ${plat}`)\n      }\n    })\n\n    selectedPlatforms = platformsArray;\n  }\n\n  let cordovaPlatforms;\n  let parsedMobileServerUrl;\n  if (!serverOnly) {\n    cordovaPlatforms = projectContext.platformList.getCordovaPlatforms();\n\n    if (selectedPlatforms) {\n      cordovaPlatforms = _.intersection(selectedPlatforms, cordovaPlatforms)\n    }\n\n    if (process.platform !== 'darwin' && cordovaPlatforms.includes('ios')) {\n      cordovaPlatforms = _.without(cordovaPlatforms, 'ios');\n      Console.warn(\"Currently, it is only possible to build iOS apps \\\non an OS X system.\");\n    }\n\n    if (!_.isEmpty(cordovaPlatforms)) {\n      const mobileServerOption = options.server;\n      if (!mobileServerOption) {\n        // For Cordova builds, require '--server'.\n        // XXX better error message?\n        Console.error(\n          \"Supply the server hostname and port in the --server option \" +\n            \"for mobile app builds.\");\n        return 1;\n      }\n      parsedMobileServerUrl = parseMobileServerOption(mobileServerOption,\n        'server');\n      parsedCordovaServerPort = parseCordovaServerPortOption(options);\n    }\n  } else {\n    cordovaPlatforms = [];\n  }\n\n  // If we specified some platforms, we need to build what was specified.\n  // For example, if we want to build only android, there is no need to build\n  // web.browser.\n  let webArchs;\n  if (selectedPlatforms) {\n    const filteredArchs = projectContext.platformList\n      .getWebArchs()\n      .filter(arch => selectedPlatforms.includes(arch));\n\n    if (\n      !_.isEmpty(cordovaPlatforms) &&\n      !filteredArchs.includes('web.cordova')\n    ) {\n      filteredArchs.push('web.cordova');\n    }\n\n    webArchs = filteredArchs.length ? filteredArchs : undefined;\n  }\n\n  var buildDir = projectContext.getProjectLocalDirectory('build_tar');\n  var outputPath = files.pathResolve(options.args[0]); // get absolute path\n\n  // Warn if people try to build inside the app directory.\n  var relative = files.pathRelative(options.appDir, outputPath);\n  // We would like the output path to be outside the app directory, which\n  // means the first step to getting there is going up a level.\n  if (relative.substr(0, 2) !== '..') {\n    Console.warn();\n    Console.labelWarn(`The output directory is under your source tree.\nYour generated files may get interpreted as source code!\nConsider building into a different directory instead\n${Console.command(\"meteor build ../output\")}`,\n      Console.options({ indent: 2 }));\n    Console.warn();\n  }\n\n  var bundlePath = options.directory ?\n      (options._bundleOnly ? outputPath :\n      files.pathJoin(outputPath, 'bundle')) :\n      files.pathJoin(buildDir, 'bundle');\n\n  stats.recordPackages({\n    what: \"sdk.bundle\",\n    projectContext: projectContext\n  });\n\n  var bundler = require('../isobuild/bundler.js');\n  var bundleResult = bundler.bundle({\n    projectContext: projectContext,\n    outputPath: bundlePath,\n    buildOptions: {\n      minifyMode: options.debug ? 'development' : 'production',\n      // XXX is this a good idea, or should linux be the default since\n      //     that's where most people are deploying\n      //     default?  i guess the problem with using DEPLOY_ARCH as default\n      //     is then 'meteor bundle' with no args fails if you have any local\n      //     packages with binary npm dependencies\n      serverArch: bundleArch,\n      buildMode: options.debug ? 'development' : 'production',\n      webArchs,\n    },\n  });\n  if (bundleResult.errors) {\n    Console.error(\"Errors prevented bundling:\");\n    Console.error(bundleResult.errors.formatMessages());\n    return 1;\n  }\n\n  if (!options._bundleOnly) {\n    files.mkdir_p(outputPath);\n  }\n\n  if (!options.directory) {\n    main.captureAndExit('', 'creating server tarball', () => {\n      try {\n        var outputTar = options._bundleOnly ? outputPath :\n          files.pathJoin(outputPath, appName + '.tar.gz');\n\n        files.createTarball(files.pathJoin(buildDir, 'bundle'), outputTar);\n      } catch (err) {\n        buildmessage.exception(err);\n        files.rm_recursive(buildDir);\n      }\n    });\n  }\n\n  if (!_.isEmpty(cordovaPlatforms)) {\n\n    let cordovaProject;\n    main.captureAndExit('', () => {\n\n      import {\n        pluginVersionsFromStarManifest,\n        displayNameForPlatform,\n      } from '../cordova/index.js';\n\n      ensureDevBundleDependencies();\n\n      buildmessage.enterJob({ title: \"preparing Cordova project\" }, () => {\n        import { CordovaProject } from '../cordova/project.js';\n\n        cordovaProject = new CordovaProject(projectContext, {\n          settingsFile: options.settings,\n          mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n          cordovaServerPort: parsedCordovaServerPort });\n        if (buildmessage.jobHasMessages()) return;\n\n        const pluginVersions = pluginVersionsFromStarManifest(\n          bundleResult.starManifest);\n\n        cordovaProject.prepareFromAppBundle(bundlePath, pluginVersions);\n      });\n\n      for (platform of cordovaPlatforms) {\n        buildmessage.enterJob(\n          { title: `building Cordova app for \\\n${displayNameForPlatform(platform)}` }, () => {\n            let buildOptions = { release: !options.debug };\n\n            const buildPath = files.pathJoin(\n              projectContext.getProjectLocalDirectory('cordova-build'),\n              'platforms', platform);\n            const platformOutputPath = files.pathJoin(outputPath, platform);\n\n            // Prepare the project once again to ensure that it is up to date\n            // with current build options.  For example, --server=example.com\n            // is utilized in the Cordova builder to write boilerplate HTML and\n            // various config.xml settings (e.g. access policies)\n            if (platform === 'ios') {\n              cordovaProject.prepareForPlatform(platform, buildOptions);\n            } else if (platform === 'android') {\n              cordovaProject.buildForPlatform(platform, {...buildOptions, argv: [\"--packageType\", options.packageType || \"bundle\"]});\n            }\n\n            // Once prepared, copy the bundle to the final location.\n            files.cp_r(buildPath,\n              files.pathJoin(platformOutputPath, 'project'));\n\n            // Make some platform-specific adjustments to the resulting build.\n            if (platform === 'ios') {\n              files.writeFile(\n                files.pathJoin(platformOutputPath, 'README'),\n`This is an auto-generated XCode project for your iOS application.\n\nInstructions for publishing your iOS app to App Store can be found at:\nhttps://guide.meteor.com/cordova.html#submitting-ios\n`, \"utf8\");\n            } else if (platform === 'android') {\n              const packageType = options.packageType || \"bundle\"\n              const packageExtension = packageType === 'bundle' ? 'aab' : 'apk';\n              const packageName = packageType === 'bundle' ? `app-release` : `app-release-unsigned`;\n              const apkPath = files.pathJoin(buildPath, `app/build/outputs/${packageType}/${options.debug ? 'debug' : 'release'}`,\n                options.debug ? `app-debug.${packageExtension}` : `${packageName}.${packageExtension}`);\n\n              console.log(apkPath)\n              if (files.exists(apkPath)) {\n              files.copyFile(apkPath, files.pathJoin(platformOutputPath,\n                options.debug ? `app-debug.${packageExtension}` : `${packageName}.${packageExtension}`));\n              }\n\n              files.writeFile(\n                files.pathJoin(platformOutputPath, 'README'),\n`This is an auto-generated Gradle project for your Android application.\n\nInstructions for publishing your Android app to Play Store can be found at:\nhttps://guide.meteor.com/cordova.html#submitting-android\n`, \"utf8\");\n            }\n        });\n      }\n    });\n  }\n\n  files.rm_recursive(buildDir);\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// lint\n///////////////////////////////////////////////////////////////////////////////\nmain.registerCommand({\n  name: 'lint',\n  maxArgs: 0,\n  requiresAppOrPackage: true,\n  options: {\n    'allow-incompatible-updates': { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  const {packageDir, appDir} = options;\n\n  let projectContext = null;\n\n  // if the goal is to lint the package, don't include the whole app\n  if (packageDir) {\n    // similar to `meteor publish`, create a fake project\n    const tempProjectDir = files.mkdtemp('meteor-package-build');\n    projectContext = new projectContextModule.ProjectContext({\n      projectDir: tempProjectDir,\n      explicitlyAddedLocalPackageDirs: [packageDir],\n      packageMapFilename: files.pathJoin(packageDir, '.versions'),\n      alwaysWritePackageMap: true,\n      forceIncludeCordovaUnibuild: true,\n      allowIncompatibleUpdate: options['allow-incompatible-update'],\n      lintPackageWithSourceRoot: packageDir\n    });\n\n    main.captureAndExit(\"=> Errors while setting up package:\", () =>\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog()\n    );\n    const versionRecord =\n        projectContext.localCatalog.getVersionBySourceRoot(packageDir);\n    if (! versionRecord) {\n      throw Error(\"explicitly added local package dir missing?\");\n    }\n    const packageName = versionRecord.packageName;\n    const constraint = utils.parsePackageConstraint(packageName);\n    projectContext.projectConstraintsFile.removeAllPackages();\n    projectContext.projectConstraintsFile.addConstraints([constraint]);\n  }\n\n  // linting the app\n  if (! projectContext && appDir) {\n    projectContext = new projectContextModule.ProjectContext({\n      projectDir: appDir,\n      serverArchitectures: [archinfo.host()],\n      allowIncompatibleUpdate: options['allow-incompatible-update'],\n      lintAppAndLocalPackages: true\n    });\n  }\n\n\n  main.captureAndExit(\"=> Errors prevented the build:\", () => {\n    projectContext.prepareProjectForBuild();\n  });\n\n  const bundler = require('../isobuild/bundler.js');\n  const bundle = bundler.bundle({\n    projectContext: projectContext,\n    outputPath: null,\n    buildOptions: {\n      minifyMode: 'development'\n    }\n  });\n\n  const displayName = options.packageDir ? 'package' : 'app';\n  if (bundle.errors) {\n    Console.error(\n      `=> Errors building your ${displayName}:\\n\\n${bundle.errors.formatMessages()}`\n    );\n    throw new main.ExitWithCode(2);\n  }\n\n  if (bundle.warnings) {\n    Console.warn(bundle.warnings.formatMessages());\n    return 1;\n  }\n\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// mongo\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'mongo',\n  maxArgs: 1,\n  options: {\n    url: { type: Boolean, short: 'U' }\n  },\n  requiresApp: function (options) {\n    return options.args.length === 0;\n  },\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  var mongoUrl;\n  var usedMeteorAccount = false;\n\n  if (options.args.length === 0) {\n    // localhost mode\n    var findMongoPort =\n      require('../runners/run-mongo.js').findMongoPort;\n    var mongoPort = findMongoPort(files.pathJoin(options.appDir, \".meteor\", \"local\", \"db\"));\n\n    // XXX detect the case where Meteor is running, but MONGO_URL was\n    // specified?\n\n    if (! mongoPort) {\n      Console.info(\"mongo: Meteor isn't running a local MongoDB server.\");\n      Console.info();\n      Console.info(`\\\nThis command only works while Meteor is running your application locally. \\\nStart your application first with 'meteor' and then run this command in a new \\\nterminal. This error will also occur if you asked Meteor to use a different \\\nMongoDB server with $MONGO_URL when you ran your application.`);\n      Console.info();\n      Console.info(`\\\nIf you're trying to connect to the database of an app you deployed with \\\n${Console.command(\"'meteor deploy'\")}, specify your site's name as an argument \\\nto this command.`);\n      return 1;\n    }\n    mongoUrl = \"mongodb://127.0.0.1:\" + mongoPort + \"/meteor\";\n\n  } else {\n    // remote mode\n    var site = qualifySitename(options.args[0]);\n\n    mongoUrl = deploy.temporaryMongoUrl(site);\n    usedMeteorAccount = true;\n\n    if (! mongoUrl) {\n      // temporaryMongoUrl() will have printed an error message\n      return 1;\n    }\n  }\n  if (options.url) {\n    console.log(mongoUrl);\n  } else {\n    if (usedMeteorAccount) {\n      auth.maybePrintRegistrationLink();\n    }\n    process.stdin.pause();\n    var runMongo = require('../runners/run-mongo.js');\n    runMongo.runMongoShell(mongoUrl);\n    throw new main.WaitForExit;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// reset\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'reset',\n  // Doesn't actually take an argument, but we want to print an custom\n  // error message if they try to pass one.\n  maxArgs: 1,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (options.args.length !== 0) {\n    Console.error(\"meteor reset only affects the locally stored database.\");\n    Console.error();\n    Console.error(\"To reset a deployed application use\");\n    Console.error(\n      Console.command(\"meteor deploy --delete appname\"), Console.options({ indent: 2 }));\n    Console.error(\"followed by\");\n    Console.error(\n      Console.command(\"meteor deploy appname\"), Console.options({ indent: 2 }));\n    return 1;\n  }\n\n  if (process.env.MONGO_URL) {\n    Console.info(\"As a precaution, meteor reset only clears the local database that is \" +\n                 \"provided by meteor run for development. The database specified with \" +\n                 \"MONGO_URL will NOT be reset.\");\n  }\n\n  // XXX detect the case where Meteor is running the app, but\n  // MONGO_URL was set, so we don't see a Mongo process\n  var findMongoPort = require('../runners/run-mongo.js').findMongoPort;\n  var isRunning = !! findMongoPort(files.pathJoin(options.appDir, \".meteor\", \"local\", \"db\"));\n  if (isRunning) {\n    Console.error(\"reset: Meteor is running.\");\n    Console.error();\n    Console.error(\n      \"This command does not work while Meteor is running your application.\",\n      \"Exit the running Meteor development server.\");\n    return 1;\n  }\n\n  return files.rm_recursive_async(\n    files.pathJoin(options.appDir, '.meteor', 'local')\n  ).then(() => {\n    Console.info(\"Project reset.\");\n  });\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// deploy\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'deploy',\n  minArgs: 0,\n  maxArgs: 1,\n  options: {\n    'delete': { type: Boolean, short: 'D' },\n    debug: { type: Boolean },\n    settings: { type: String, short: 's' },\n    // No longer supported, but we still parse it out so that we can\n    // print a custom error message.\n    password: { type: String },\n    // Override architecture to deploy whatever stuff we have locally, even if\n    // it contains binary packages that should be incompatible. A hack to allow\n    // people to deploy from checkout or do other weird shit. We are not\n    // responsible for the consequences.\n    'override-architecture-with-local' : { type: Boolean },\n    'allow-incompatible-update': { type: Boolean },\n    'deploy-polling-timeout': { type: Number },\n    'no-wait': { type: Boolean },\n    // Useful to cache the build between deploys, in some cases people deploy\n    // the same build to different hostnames\n    'cache-build': { type: Boolean },\n    // Useful when you want to build first to have a cache-build and then deploy\n    // many apps\n    'build-only': { type: Boolean },\n    free: { type: Boolean },\n    plan: { type: String },\n    'deploy-token': { type: String },\n    mongo: { type: Boolean },\n    owner: { type: String }\n  },\n  allowUnrecognizedOptions: true,\n  requiresApp: function (options) {\n    return ! options.delete;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, async function (...args) {\n  return Profile.run(\n    \"meteor deploy\",\n    () => Promise.await(deployCommand(...args))\n  );\n});\n\nfunction deployCommand(options, { rawOptions }) {\n  const site = options.args[0];\n\n  if (options.delete) {\n    return deploy.deleteApp(site);\n  }\n\n  if (options.password) {\n    Console.error(\n      \"Setting passwords on apps is no longer supported. Now there are \" +\n        \"user accounts and your apps are associated with your account so \" +\n        \"that only you (and people you designate) can access them. See the \" +\n        Console.command(\"'meteor authorized'\") + \" command.\");\n    return 1;\n  }\n\n  const loggedIn = auth.isLoggedIn();\n  if (! loggedIn && !options[\"deploy-token\"]) {\n    Console.error(\n      \"You must be logged in to deploy, just enter your email address.\");\n    Console.error();\n    if (! auth.registerOrLogIn()) {\n      return 1;\n    }\n  }\n\n  // Override architecture iff applicable.\n  let buildArch = DEPLOY_ARCH;\n  if (options['override-architecture-with-local']) {\n    Console.warn();\n    Console.labelWarn(\n      \"OVERRIDING DEPLOY ARCHITECTURE WITH LOCAL ARCHITECTURE.\",\n      \"If your app contains binary code, it may break in unexpected \" +\n      \"and terrible ways.\");\n    buildArch = archinfo.host();\n  }\n\n  const projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    serverArchitectures: _.uniq([buildArch, archinfo.host()]),\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while initializing project:\", function () {\n    // TODO Fix nested Profile.run warning here, too.\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  const buildOptions = {\n    minifyMode: options.debug ? 'development' : 'production',\n    buildMode: options.debug ? 'development' : 'production',\n    serverArch: buildArch\n  };\n\n  let deployPollingTimeoutMs = null;\n  if (options['deploy-polling-timeout']) {\n    deployPollingTimeoutMs = options['deploy-polling-timeout'];\n  }\n  let plan = null;\n  if (options.plan) {\n    plan = options.plan;\n  }\n\n  const isCacheBuildEnabled = !!options['cache-build'];\n  const isBuildOnly = !!options['build-only'];\n  const waitForDeploy = !options['no-wait'];\n\n  const deployResult = deploy.bundleAndDeploy({\n    projectContext,\n    site,\n    settingsFile: options.settings,\n    free: options.free,\n    deployToken: options['deploy-token'],\n    owner: options.owner,\n    mongo: options.mongo,\n    buildOptions: buildOptions,\n    plan,\n    rawOptions,\n    deployPollingTimeoutMs,\n    waitForDeploy,\n    isCacheBuildEnabled,\n    isBuildOnly,\n  });\n\n  if (deployResult === 0) {\n    auth.maybePrintRegistrationLink({\n      leadingNewline: true,\n      // If the user was already logged in at the beginning of the\n      // deploy, then they've already been prompted to set a password\n      // at least once before, so we use a slightly different message.\n      firstTime: ! loggedIn\n    });\n  }\n\n  return deployResult;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// authorized\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'authorized',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    add: { type: String, short: \"a\" },\n    transfer: { type: String, short: \"t\" },\n    remove: { type: String, short: \"r\" },\n    list: { type: Boolean }\n  },\n  pretty: function (options) {\n    // pretty if we're mutating; plain if we're listing (which is more likely to\n    // be used by scripts)\n    return options.add || options.remove || options.transfer;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  if (Object.keys(_.pick(options, 'add', 'remove', 'transfer', 'list')).length > 1) {\n    Console.error(\n      \"Sorry, you can only perform one authorization operation at a time.\");\n    return 1;\n  }\n\n  auth.pollForRegistrationCompletion();\n  var site = qualifySitename(options.args[0]);\n\n  if (! auth.isLoggedIn()) {\n    Console.error(\n      \"You must be logged in for that. Try \" +\n      Console.command(\"'meteor login'\"));\n    return 1;\n  }\n\n  if (options.add) {\n    return deploy.changeAuthorized(site, \"add\", options.add);\n  } else if (options.remove) {\n    return deploy.changeAuthorized(site, \"remove\", options.remove);\n  } else if (options.transfer) {\n    return deploy.changeAuthorized(site, \"transfer\", options.transfer);\n  } else {\n    return deploy.listAuthorized(site);\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// test and test-packages\n///////////////////////////////////////////////////////////////////////////////\n\ntestCommandOptions = {\n  maxArgs: Infinity,\n  catalogRefresh: new catalog.Refresh.Never(),\n  options: {\n    port: { type: String, short: \"p\", default: DEFAULT_PORT },\n    'mobile-server': { type: String },\n    'cordova-server-port': { type: String },\n    'debug-port': { type: String },\n    ...inspectOptions,\n    'no-release-check': { type: Boolean },\n    deploy: { type: String },\n    production: { type: Boolean },\n    settings: { type: String, short: 's' },\n    // Indicates whether these self-tests are running headless, e.g. in a\n    // continuous integration testing environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    'raw-logs': { type: Boolean },\n\n    // Undocumented. See #Once\n    once: { type: Boolean },\n    // Undocumented. To ensure that QA covers both\n    // PollingObserveDriver and OplogObserveDriver, this option\n    // disables oplog for tests.  (It still creates a replset, it just\n    // doesn't do oplog tailing.)\n    'disable-oplog': { type: Boolean },\n    // Undocumented flag to use a different test driver.\n    'driver-package': { type: String },\n\n    // Sets the path of where the temp app should be created\n    'test-app-path': { type: String },\n\n    // Undocumented, runs tests under selenium\n    'selenium': { type: Boolean },\n    'selenium-browser': { type: String },\n\n    // Undocumented.  Usually we just show a banner saying 'Tests' instead of\n    // the ugly path to the temporary test directory, but if you actually want\n    // to see it you can ask for it.\n    'show-test-app-path': { type: Boolean },\n\n    // hard-coded options with all known Cordova platforms\n    ios: { type: Boolean },\n    'ios-device': { type: Boolean },\n    android: { type: Boolean },\n    'android-device': { type: Boolean },\n\n    // This could theoretically be useful/necessary in conjunction with\n    // --test-app-path.\n    'allow-incompatible-update': { type: Boolean },\n\n    // Don't print linting messages for tested packages\n    'no-lint': { type: Boolean },\n\n    // allow excluding packages when testing all packages.\n    // should be a comma-separated list of package names.\n    'exclude': { type: String },\n\n    // one of the following must be true\n    'test': { type: Boolean, 'default': false },\n    'test-packages': { type: Boolean, 'default': false },\n\n    // For 'test-packages': Run in \"full app\" mode\n    'full-app': { type: Boolean, 'default': false },\n\n    'extra-packages': { type: String },\n\n    'exclude-archs': { type: String }\n  }\n};\n\nmain.registerCommand(Object.assign({\n  name: 'test',\n  requiresApp: true\n}, testCommandOptions), function (options) {\n  options['test'] = true;\n  return doTestCommand(options);\n});\n\nmain.registerCommand(Object.assign(\n  { name: 'test-packages' },\n  testCommandOptions\n), function (options) {\n  options['test-packages'] = true;\n  return doTestCommand(options);\n});\n\nfunction doTestCommand(options) {\n  // This \"metadata\" is accessed in a few places. Using a global\n  // variable here was more expedient than navigating the many layers\n  // of abstraction across the the build process.\n  //\n  // As long as the Meteor CLI runs a single command as part of each\n  // process, this should be safe.\n  global.testCommandMetadata = {};\n\n  Console.setVerbose(!!options.verbose);\n  if (options.headless) {\n    Console.setHeadless(true);\n  }\n\n  const runTargets = parseRunTargets(_.intersection(\n    Object.keys(options), ['ios', 'ios-device', 'android', 'android-device']));\n\n  const { parsedServerUrl, parsedMobileServerUrl, parsedCordovaServerPort } =\n    parseServerOptionsForRunCommand(options, runTargets);\n\n  // Make a temporary app dir (based on the test runner app). This will be\n  // cleaned up on process exit. Using a temporary app dir means that we can\n  // run multiple \"test-packages\" commands in parallel without them stomping\n  // on each other.\n  let testRunnerAppDir;\n  const testAppPath = options['test-app-path'];\n  if (testAppPath) {\n    const absTestAppPath = files.pathResolve(testAppPath);\n    try {\n      if (files.mkdir_p(absTestAppPath, 0o700)) {\n        testRunnerAppDir = absTestAppPath;\n      } else {\n        Console.error(\n          'The specified --test-app-path directory could not be used, as ' +\n          `\"${testAppPath}\" already exists and it is not a directory.`\n        );\n        return 1;\n      }\n    } catch (error) {\n      Console.error(\n        'Unable to create the specified --test-app-path directory of ' +\n        `\"${testAppPath}\".`\n      );\n      throw error;\n    }\n  }\n\n  if (!testRunnerAppDir) {\n    testRunnerAppDir = files.mkdtemp('meteor-test-run');\n  }\n\n  // Download packages for our architecture, and for the deploy server's\n  // architecture if we're deploying.\n  var serverArchitectures = [archinfo.host()];\n  if (options.deploy && DEPLOY_ARCH !== archinfo.host()) {\n    serverArchitectures.push(DEPLOY_ARCH);\n  }\n\n  if (options['raw-logs']) {\n    runLog.setRawLogs(true);\n  }\n\n  var includePackages = [];\n  if (options['extra-packages']) {\n    includePackages = options['extra-packages'].trim().split(/\\s*,\\s*/);\n  }\n\n  if (options['driver-package']) {\n    includePackages.push(\n      global.testCommandMetadata.driverPackage =\n        options['driver-package'].trim()\n    );\n  } else if (options[\"test-packages\"]) {\n    includePackages.push(\n      global.testCommandMetadata.driverPackage = \"test-in-browser\"\n    );\n  }\n\n  var projectContextOptions = {\n    serverArchitectures: serverArchitectures,\n    allowIncompatibleUpdate: options['allow-incompatible-update'],\n    lintAppAndLocalPackages: !options['no-lint'],\n    includePackages: includePackages\n  };\n  var projectContext;\n\n  if (options[\"test-packages\"]) {\n    projectContextOptions.projectDir = testRunnerAppDir;\n    projectContextOptions.projectDirForLocalPackages = options.appDir;\n\n    try {\n      require(\"./default-npm-deps.js\").install(testRunnerAppDir);\n    } catch (error) {\n      if (error.code === 'EACCES' && options['test-app-path']) {\n        Console.error(\n          'The specified --test-app-path directory of ' +\n          `\"${testRunnerAppDir}\" exists, but the current user does not have ` +\n          `read/write permission in it.`\n        );\n      }\n      throw error;\n    }\n\n    if (buildmessage.jobHasMessages()) {\n      return;\n    }\n\n    // Find any packages mentioned by a path instead of a package name. We will\n    // load them explicitly into the catalog.\n    var packagesByPath = _.filter(options.args, function (p) {\n      return p.indexOf('/') !== -1;\n    });\n    // If we're currently in an app, we still want to use the real app's\n    // packages subdirectory, not the test runner app's empty one.\n    projectContextOptions.explicitlyAddedLocalPackageDirs = packagesByPath;\n\n    // XXX Because every run uses a new app with its own IsopackCache directory,\n    //     this always does a clean build of all packages. Maybe we can speed up\n    //     repeated test-packages calls with some sort of shared or semi-shared\n    //     isopack cache that's specific to test-packages?  See #3012.\n    projectContext = new projectContextModule.ProjectContext(projectContextOptions);\n\n    main.captureAndExit(\"=> Errors while initializing project:\", function () {\n      // We're just reading metadata here --- we'll wait to do the full build\n      // preparation until after we've started listening on the proxy, etc.\n      projectContext.readProjectMetadata();\n    });\n\n    main.captureAndExit(\"=> Errors while setting up tests:\", function () {\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog();\n    });\n\n    // Overwrite .meteor/release.\n    projectContext.releaseFile.write(\n      release.current.isCheckout() ? \"none\" : release.current.name);\n\n    var packagesToAdd = getTestPackageNames(projectContext, options.args);\n\n    // filter out excluded packages\n    var excludedPackages = options.exclude && options.exclude.split(',');\n    if (excludedPackages) {\n      packagesToAdd = _.filter(packagesToAdd, function (p) {\n        return ! _.some(excludedPackages, function (excluded) {\n          return p.replace(/^local-test:/, '') === excluded;\n        });\n      });\n    }\n\n    // Use the driver package if running `meteor test-packages`. For\n    // `meteor test`, the driver package is expected to already\n    // have been added to the app.\n    packagesToAdd.unshift(global.testCommandMetadata.driverPackage);\n\n    // Also, add `autoupdate` so that you don't have to manually refresh the tests\n    packagesToAdd.unshift(\"autoupdate\");\n\n    var constraintsToAdd = _.map(packagesToAdd, function (p) {\n      return utils.parsePackageConstraint(p);\n    });\n    // Add the packages to our in-memory representation of .meteor/packages.  (We\n    // haven't yet resolved constraints, so this will affect constraint\n    // resolution.)  This will get written to disk once we prepareProjectForBuild,\n    // either in the Cordova code below, right before deploying below, or in the\n    // app runner.  (Note that removeAllPackages removes any comments from\n    // .meteor/packages, but that's OK since this isn't a real user project.)\n    projectContext.projectConstraintsFile.removeAllPackages();\n    projectContext.projectConstraintsFile.addConstraints(constraintsToAdd);\n    // Write these changes to disk now, so that if the first attempt to prepare\n    // the project for build hits errors, we don't lose them on\n    // projectContext.reset.\n    projectContext.projectConstraintsFile.writeIfModified();\n  } else if (options[\"test\"]) {\n    if (!options['driver-package']) {\n      throw new Error(\"You must specify a driver package with --driver-package\");\n    }\n\n    global.testCommandMetadata.driverPackage = options['driver-package'];\n\n    global.testCommandMetadata.isAppTest = options['full-app'];\n    global.testCommandMetadata.isTest = !global.testCommandMetadata.isAppTest;\n\n    projectContextOptions.projectDir = options.appDir;\n    projectContextOptions.projectLocalDir = files.pathJoin(testRunnerAppDir, '.meteor', 'local');\n\n    // Copy the existing build and isopacks to speed up the initial start\n    function copyDirIntoTestRunnerApp(allowSymlink, ...parts) {\n      // Depending on whether the user has run `meteor run` or other commands, they\n      // may or may not exist yet\n      const appDirPath = files.pathJoin(options.appDir, ...parts);\n      const testDirPath = files.pathJoin(testRunnerAppDir, ...parts);\n\n      files.mkdir_p(appDirPath);\n      files.mkdir_p(files.pathDirname(testDirPath));\n\n      if (allowSymlink) {\n        // Windows can create junction links without administrator\n        // privileges since both paths refer to directories.\n        files.symlink(appDirPath, testDirPath, \"junction\");\n      } else {\n        files.cp_r(appDirPath, testDirPath, {\n          preserveSymlinks: true\n        });\n      }\n    }\n\n    copyDirIntoTestRunnerApp(false, '.meteor', 'local', 'build');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'bundler-cache');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'isopacks');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'plugin-cache');\n    copyDirIntoTestRunnerApp(true, '.meteor', 'local', 'shell');\n\n    projectContext = new projectContextModule.ProjectContext(projectContextOptions);\n\n    main.captureAndExit(\"=> Errors while setting up tests:\", function () {\n      // Read metadata and initialize catalog.\n      projectContext.initializeCatalog();\n    });\n  } else {\n    throw new Error(\"Unexpected: neither test-packages nor test\");\n  }\n\n  // The rest of the projectContext preparation process will happen inside the\n  // runner, once the proxy is listening. The changes we made were persisted to\n  // disk, so projectContext.reset won't make us forget anything.\n\n  let cordovaRunner;\n\n  if (!_.isEmpty(runTargets)) {\n    function prepareCordovaProject() {\n      main.captureAndExit('', 'preparing Cordova project', () => {\n        import { CordovaProject } from '../cordova/project.js';\n\n        const cordovaProject = new CordovaProject(projectContext, {\n          settingsFile: options.settings,\n          mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n          cordovaServerPort: parsedCordovaServerPort });\n        if (buildmessage.jobHasMessages()) return;\n\n        cordovaRunner = new CordovaRunner(cordovaProject, runTargets);\n        projectContext.platformList.write(cordovaRunner.platformsForRunTargets);\n        cordovaRunner.checkPlatformsForRunTargets();\n      });\n    }\n\n    ensureDevBundleDependencies();\n    prepareCordovaProject();\n  }\n\n  options.cordovaRunner = cordovaRunner;\n\n  return runTestAppForPackages(projectContext, Object.assign(\n    options,\n    {\n      mobileServerUrl: utils.formatUrl(parsedMobileServerUrl),\n      cordovaServerPort: parsedCordovaServerPort,\n      proxyPort: parsedServerUrl.port,\n      proxyHost: parsedServerUrl.hostname,\n    }\n  ));\n}\n\n// Returns the \"local-test:*\" package names for the given package names (or for\n// all local packages if packageNames is empty/unspecified).\nvar getTestPackageNames = function (projectContext, packageNames) {\n  var packageNamesSpecifiedExplicitly = ! _.isEmpty(packageNames);\n  if (_.isEmpty(packageNames)) {\n    // If none specified, test all local packages. (We don't have tests for\n    // non-local packages.)\n    packageNames = projectContext.localCatalog.getAllPackageNames();\n  }\n  var testPackages = [];\n  main.captureAndExit(\"=> Errors while collecting tests:\", function () {\n    _.each(packageNames, function (p) {\n      buildmessage.enterJob(\"trying to test package `\" + p + \"`\", function () {\n        // If it's a package name, look it up the normal way.\n        if (p.indexOf('/') === -1) {\n          if (p.indexOf('@') !== -1) {\n            buildmessage.error(\n              \"You may not specify versions for local packages: \" + p );\n            return;  // recover by ignoring\n          }\n          // Check to see if this is a real local package, and if it is a real\n          // local package, if it has tests.\n          var version = projectContext.localCatalog.getLatestVersion(p);\n          if (! version) {\n            buildmessage.error(\"Not a known local package, cannot test\");\n          } else if (version.testName) {\n            testPackages.push(version.testName);\n          } else if (packageNamesSpecifiedExplicitly) {\n            // It's only an error to *ask* to test a package with no tests, not\n            // to come across a package with no tests when you say \"test all\n            // packages\".\n            buildmessage.error(\"Package has no tests\");\n          }\n        } else {\n          // Otherwise, it's a directory; find it by source root.\n          version = projectContext.localCatalog.getVersionBySourceRoot(\n            files.pathResolve(p));\n          if (! version) {\n            buildmessage.error(\"Package not found in local catalog\");\n            return;\n          }\n          if (version.testName) {\n            testPackages.push(version.testName);\n          }\n          // It is not an error to mention a package by directory that is a\n          // package but has no tests; this means you can run `meteor\n          // test-packages $APP/packages/*` without having to worry about the\n          // packages that don't have tests.\n        }\n      });\n    });\n  });\n\n  return testPackages;\n};\n\nvar runTestAppForPackages = function (projectContext, options) {\n  var buildOptions = {\n    minifyMode: options.production ? 'production' : 'development'\n  };\n  buildOptions.buildMode = \"test\";\n  let webArchs = projectContext.platformList.getWebArchs();\n  if (options.cordovaRunner) {\n    webArchs.push(\"web.cordova\");\n  }\n  buildOptions.webArchs = filterWebArchs(webArchs, options['exclude-archs']);\n\n  if (options.deploy) {\n    // Run the constraint solver and build local packages.\n    main.captureAndExit(\"=> Errors while initializing project:\", function () {\n      projectContext.prepareProjectForBuild();\n    });\n    // No need to display the PackageMapDelta here, since it would include all\n    // of the packages!\n\n    buildOptions.serverArch = DEPLOY_ARCH;\n    return deploy.bundleAndDeploy({\n      projectContext: projectContext,\n      site: options.deploy,\n      settingsFile: options.settings,\n      buildOptions: buildOptions,\n      recordPackageUsage: false\n    });\n  } else {\n    var runAll = require('../runners/run-all.js');\n    return runAll.run({\n      projectContext: projectContext,\n      proxyPort: options.proxyPort,\n      proxyHost: options.proxyHost,\n      ...normalizeInspectOptions(options),\n      disableOplog: options['disable-oplog'],\n      settingsFile: options.settings,\n      testMetadata: global.testCommandMetadata,\n      banner: options['show-test-app-path'] ? null : \"Tests\",\n      buildOptions: buildOptions,\n      rootUrl: process.env.ROOT_URL,\n      mongoUrl: process.env.MONGO_URL,\n      oplogUrl: process.env.MONGO_OPLOG_URL,\n      mobileServerUrl: options.mobileServerUrl,\n      once: options.once,\n      noReleaseCheck: options['no-release-check'] || process.env.METEOR_NO_RELEASE_CHECK,\n      recordPackageUsage: false,\n      selenium: options.selenium,\n      seleniumBrowser: options['selenium-browser'],\n      cordovaRunner: options.cordovaRunner,\n      // On the first run, we shouldn't display the delta between \"no packages\n      // in the temp app\" and \"all the packages we're testing\". If we make\n      // changes and reload, though, it's fine to display them.\n      omitPackageMapDeltaDisplayOnFirstRun: true\n    });\n  }\n};\n\n\n\n///////////////////////////////////////////////////////////////////////////////\n// rebuild\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'rebuild',\n  maxArgs: Infinity,\n  hidden: true,\n  requiresApp: true,\n  catalogRefresh: new catalog.Refresh.Never(),\n  'allow-incompatible-update': { type: Boolean }\n}, function (options) {\n  var projectContextModule = require('../project-context.js');\n  var projectContext = new projectContextModule.ProjectContext({\n    projectDir: options.appDir,\n    forceRebuildPackages: options.args.length ? options.args : true,\n    allowIncompatibleUpdate: options['allow-incompatible-update']\n  });\n\n  main.captureAndExit(\"=> Errors while rebuilding packages:\", function () {\n    projectContext.prepareProjectForBuild();\n  });\n  projectContext.packageMapDelta.displayOnConsole();\n\n  Console.info(\"Packages rebuilt.\");\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// login\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'login',\n  options: {\n    email: { type: Boolean }\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return auth.loginCommand(Object.assign({\n    overwriteExistingToken: true\n  }, options));\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// logout\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'logout',\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  return auth.logoutCommand(options);\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// whoami\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'whoami',\n  catalogRefresh: new catalog.Refresh.Never(),\n  pretty: false\n}, function (options) {\n  return auth.whoAmICommand(options);\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// organizations\n///////////////////////////////////////////////////////////////////////////////\n\nvar loggedInAccountsConnectionOrPrompt = function (action) {\n  var token = auth.getSessionToken(config.getAccountsDomain());\n  if (! token) {\n    Console.error(\"You must be logged in to \" + action + \".\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n  }\n\n  token = auth.getSessionToken(config.getAccountsDomain());\n  var conn = auth.loggedInAccountsConnection(token);\n  if (conn === null) {\n    // Server rejected our token.\n    Console.error(\"You must be logged in to \" + action + \".\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n    token = auth.getSessionToken(config.getAccountsDomain());\n    conn = auth.loggedInAccountsConnection(token);\n  }\n\n  return conn;\n};\n\n// List the organizations of which the current user is a member.\nmain.registerCommand({\n  name: 'admin list-organizations',\n  minArgs: 0,\n  maxArgs: 0,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  var token = auth.getSessionToken(config.getAccountsDomain());\n  if (! token) {\n    Console.error(\"You must be logged in to list your organizations.\");\n    auth.doUsernamePasswordLogin({ retry: true });\n    Console.info();\n  }\n\n  var url = config.getAccountsApiUrl() + \"/organizations\";\n  try {\n    var result = httpHelpers.request({\n      url: url,\n      method: \"GET\",\n      useSessionHeader: true,\n      useAuthHeader: true\n    });\n    var body = JSON.parse(result.body);\n  } catch (err) {\n    Console.error(\"Error listing organizations.\");\n    return 1;\n  }\n\n  if (result.response.statusCode === 401 &&\n      body && body.error === \"invalid_credential\") {\n    Console.error(\"You must be logged in to list your organizations.\");\n    // XXX It would be nice to do a username/password prompt here like\n    // we do for the other orgs commands.\n    return 1;\n  }\n\n  if (result.response.statusCode !== 200 ||\n      ! body || ! body.organizations) {\n    Console.error(\"Error listing organizations.\");\n    return 1;\n  }\n\n  if (body.organizations.length === 0) {\n    Console.info(\"You are not a member of any organizations.\");\n  } else {\n    Console.rawInfo(_.pluck(body.organizations, \"name\").join(\"\\n\") + \"\\n\");\n  }\n  return 0;\n});\n\nmain.registerCommand({\n  name: 'admin members',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    add: { type: String },\n    remove: { type: String },\n    list: { type: Boolean }\n  },\n  pretty: function (options) {\n    // pretty if we're mutating; plain if we're listing (which is more likely to\n    // be used by scripts)\n    return options.add || options.remove;\n  },\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n\n  if (options.add && options.remove) {\n    Console.error(\n      \"Sorry, you can only add or remove one member at a time.\");\n    throw new main.ShowUsage;\n  }\n\n  var username = options.add || options.remove;\n\n  var conn = loggedInAccountsConnectionOrPrompt(\n    username ? \"edit organizations\" : \"show an organization's members\");\n\n  if (username ) {\n    // Adding or removing members\n    try {\n      conn.call(\n        options.add ? \"addOrganizationMember\": \"removeOrganizationMember\",\n        options.args[0], username);\n    } catch (err) {\n      Console.error(\"Error \" +\n                    (options.add ? \"adding\" : \"removing\") +\n                    \" member: \" + err.reason);\n      return 1;\n    }\n\n    Console.info(username + \" \" +\n                         (options.add ? \"added to\" : \"removed from\") +\n                         \" organization \" + options.args[0] + \".\");\n  } else {\n    // Showing the members of an org\n    try {\n      var result = conn.call(\"showOrganization\", options.args[0]);\n    } catch (err) {\n      Console.error(\"Error showing organization: \" + err.reason);\n      return 1;\n    }\n\n    var members = _.pluck(result, \"username\");\n    Console.rawInfo(members.join(\"\\n\") + \"\\n\");\n  }\n\n  return 0;\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// self-test\n///////////////////////////////////////////////////////////////////////////////\n\n// XXX we should find a way to make self-test fully self-contained, so that it\n// ignores \"packageDirs\" (ie, it shouldn't fail just because you happen to be\n// sitting in an app with packages that don't build)\n\nmain.registerCommand({\n  name: 'self-test',\n  minArgs: 0,\n  maxArgs: 1,\n  options: {\n    changed: { type: Boolean },\n    'force-online': { type: Boolean },\n    slow: { type: Boolean },\n    galaxy: { type: Boolean },\n    browserstack: { type: Boolean },\n    phantom: { type: Boolean },\n    // Indicates whether these self-tests are running headless, e.g. in a\n    // continuous integration testing environment, where visual niceties\n    // like progress bars and spinners are unimportant.\n    headless: { type: Boolean },\n    history: { type: Number },\n    list: { type: Boolean },\n    file: { type: String },\n    exclude: { type: String },\n    // Skip tests w/ this tag\n    'without-tag': { type: String },\n    // Only run tests with this tag\n    'with-tag': { type: String },\n    junit: { type: String },\n    retries: { type: Number, default: 2 },\n    // Skip tests, after filter\n    skip: { type: Number },\n    // Limit tests, after filter\n    limit: { type: Number },\n    // Don't run tests, just show the plan after filter, skip and limit\n    preview: { type: Boolean },\n  },\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  if (! files.inCheckout()) {\n    Console.error(\"self-test is only supported running from a checkout\");\n    return 1;\n  }\n\n  var selftest = require('../tool-testing/selftest.js');\n\n  // Auto-detect whether to skip 'net' tests, unless --force-online is passed.\n  var offline = false;\n  if (!options['force-online']) {\n    try {\n      require('../utils/http-helpers.js').getUrl(\"http://www.google.com/\");\n    } catch (e) {\n      if (e instanceof files.OfflineError) {\n        offline = true;\n      }\n    }\n  }\n\n  var compileRegexp = function (str) {\n    try {\n      return new RegExp(str);\n    } catch (e) {\n      if (!(e instanceof SyntaxError)) {\n        throw e;\n      }\n      Console.error(\"Bad regular expression: \" + str);\n      return null;\n    }\n  };\n\n  var testRegexp = undefined;\n  if (options.args.length) {\n    testRegexp = compileRegexp(options.args[0]);\n    if (! testRegexp) {\n      return 1;\n    }\n  }\n\n  var fileRegexp = undefined;\n  if (options.file) {\n    fileRegexp = compileRegexp(options.file);\n    if (! fileRegexp) {\n      return 1;\n    }\n  }\n\n  var excludeRegexp = undefined;\n  if (options.exclude) {\n    excludeRegexp = compileRegexp(options.exclude);\n    if (! excludeRegexp) {\n      return 1;\n    }\n  }\n\n  if (options.list) {\n    selftest.listTests({\n      onlyChanged: options.changed,\n      offline: offline,\n      includeSlowTests: options.slow,\n      galaxyOnly: options.galaxy,\n      testRegexp: testRegexp,\n      fileRegexp: fileRegexp,\n      'without-tag': options['without-tag'],\n      'with-tag': options['with-tag']\n    });\n\n    return 0;\n  }\n\n  const clients = {\n    puppeteer: true, // Puppeteer is always enabled.\n    phantom: options.phantom,\n    browserstack: options.browserstack,\n  };\n\n  if (options.headless) {\n    // There's no point in spinning the spinner when we're running\n    // continuous integration tests.\n    Console.setHeadless(true);\n  }\n\n  return selftest.runTests({\n    // filtering options\n    onlyChanged: options.changed,\n    offline: offline,\n    includeSlowTests: options.slow,\n    galaxyOnly: options.galaxy,\n    testRegexp: testRegexp,\n    fileRegexp: fileRegexp,\n    excludeRegexp: excludeRegexp,\n    // other options\n    retries: options.retries,\n    historyLines: options.history,\n    clients: clients,\n    junit: options.junit && files.pathResolve(options.junit),\n    'without-tag': options['without-tag'],\n    'with-tag': options['with-tag'],\n    skip: options.skip,\n    limit: options.limit,\n    preview: options.preview,\n  });\n\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// list-sites\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'list-sites',\n  minArgs: 0,\n  maxArgs: 0,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  auth.pollForRegistrationCompletion();\n  if (! auth.isLoggedIn()) {\n    Console.error(\n      \"You must be logged in for that. Try \" +\n      Console.command(\"'meteor login'\") + \".\");\n    return 1;\n  }\n\n  return deploy.listSites();\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// admin get-machine\n///////////////////////////////////////////////////////////////////////////////\n\nmain.registerCommand({\n  name: 'admin get-machine',\n  minArgs: 1,\n  maxArgs: 1,\n  options: {\n    json: { type: Boolean },\n    verbose: { type: Boolean, short: \"v\" },\n    // By default, we give you a machine for 5 minutes. You can request up to\n    // 15. (Meteor Software can reserve machines for longer than that.)\n    minutes: { type: Number }\n  },\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  Console.warn();\n  Console.warn(\"The 'meteor admin get-machine' command has been disabled and\",\n    \"the build farm has been discontinued.\");\n  Console.warn();\n  Console.info(\"As of Meteor 1.4, packages with binary dependencies are\",\n    \"automatically compiled when they are installed in an application,\",\n    \"assuming the target machine has a basic compiler toolchain.\");\n  Console.info();\n  Console.info(\"To see the requirements for this compilation step,\",\n    \"consult the platform requirements for 'node-gyp':\");\n  Console.info(\n    Console.url(\"https://github.com/nodejs/node-gyp\"),\n    Console.options({ indent: 2 })\n  );\n  Console.info();\n  return 1;\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// admin progressbar-test\n///////////////////////////////////////////////////////////////////////////////\n\n// A test command to print a progressbar. Useful for manual testing.\nmain.registerCommand({\n  name: 'admin progressbar-test',\n  options: {\n    secs: { type: Number, default: 20 },\n    spinner: { type: Boolean, default: false }\n  },\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  buildmessage.enterJob({ title: \"A test progressbar\" }, function () {\n    var progress = buildmessage.getCurrentProgressTracker();\n    var totalProgress = { current: 0, end: options.secs, done: false };\n    var i = 0;\n    var n = options.secs;\n\n    if (options.spinner) {\n      totalProgress.end = undefined;\n    }\n\n    new Promise(function (resolve) {\n      function updateProgress() {\n        i++;\n        if (! options.spinner) {\n          totalProgress.current = i;\n        }\n\n        if (i === n) {\n          totalProgress.done = true;\n          progress.reportProgress(totalProgress);\n          resolve();\n        } else {\n          progress.reportProgress(totalProgress);\n          setTimeout(updateProgress, 1000);\n        }\n      }\n\n      setTimeout(updateProgress);\n    }).await();\n  });\n});\n\n\n///////////////////////////////////////////////////////////////////////////////\n// dummy\n///////////////////////////////////////////////////////////////////////////////\n\n// Dummy test command. Used for automated testing of the command line\n// option parser.\n\nmain.registerCommand({\n  name: 'dummy',\n  options: {\n    ething: { type: String, short: \"e\", required: true },\n    port: { type: Number, short: \"p\", default: DEFAULT_PORT },\n    url: { type: Boolean, short: \"U\" },\n    'delete': { type: Boolean, short: \"D\" },\n    changed: { type: Boolean }\n  },\n  maxArgs: 2,\n  hidden: true,\n  pretty: false,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function (options) {\n  var p = function (key) {\n    if (_.has(options, key)) {\n      return JSON.stringify(options[key]);\n    }\n    return 'none';\n  };\n\n  Console.info(p('ething') + \" \" + p('port') + \" \" + p('changed') +\n                       \" \" + p('args'));\n  if (options.url) {\n    Console.info('url');\n  }\n  if (options['delete']) {\n    Console.info('delete');\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// throw-error\n///////////////////////////////////////////////////////////////////////////////\n\n// Dummy test command. Used to test that stack traces work from an installed\n// Meteor tool.\n\nmain.registerCommand({\n  name: 'throw-error',\n  hidden: true,\n  catalogRefresh: new catalog.Refresh.Never()\n}, function () {\n  throw new Error(\"testing stack traces!\"); // #StackTraceTest this line is found in tests/source-maps.js\n});\n"],"file":"tools/cli/commands.js.map"}