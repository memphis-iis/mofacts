{"version":3,"sources":["/tools/cli/dev-bundle-helpers.js"],"names":["module","export","ensureDependencies","pathJoin","getDevBundle","statOrNull","link","v","installNpmModule","deps","devBundleLib","devBundleNodeModules","needToInstall","Object","create","keys","forEach","dep","pkgDir","pkgStat","alreadyInstalled","isDirectory","versionToInstall"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,kBAAkB,EAAC,MAAIA;AAAxB,CAAd;AAA2D,IAAIC,QAAJ,EAAaC,YAAb,EAA0BC,UAA1B;AAAqCL,MAAM,CAACM,IAAP,CAAY,aAAZ,EAA0B;AAACH,EAAAA,QAAQ,CAACI,CAAD,EAAG;AAACJ,IAAAA,QAAQ,GAACI,CAAT;AAAW,GAAxB;;AAAyBH,EAAAA,YAAY,CAACG,CAAD,EAAG;AAACH,IAAAA,YAAY,GAACG,CAAb;AAAe,GAAxD;;AAAyDF,EAAAA,UAAU,CAACE,CAAD,EAAG;AAACF,IAAAA,UAAU,GAACE,CAAX;AAAa;;AAApF,CAA1B,EAAgH,CAAhH;AAAmH,IAAIC,gBAAJ;AAAqBR,MAAM,CAACM,IAAP,CAAY,2BAAZ,EAAwC;AAACE,EAAAA,gBAAgB,CAACD,CAAD,EAAG;AAACC,IAAAA,gBAAgB,GAACD,CAAjB;AAAmB;;AAAxC,CAAxC,EAAkF,CAAlF;;AAGjO,SAASL,kBAAT,CAA4BO,IAA5B,EAAkC;AACvC,QAAMC,YAAY,GAAGP,QAAQ,CAACC,YAAY,EAAb,EAAiB,KAAjB,CAA7B;AACA,QAAMO,oBAAoB,GAAGR,QAAQ,CAACO,YAAD,EAAe,cAAf,CAArC,CAFuC,CAIvC;AACA;;AACA,QAAME,aAAa,GAAGC,MAAM,CAACC,MAAP,CAAc,IAAd,CAAtB;AACAD,EAAAA,MAAM,CAACE,IAAP,CAAYN,IAAZ,EAAkBO,OAAlB,CAA0BC,GAAG,IAAI;AAC/B,UAAMC,MAAM,GAAGf,QAAQ,CAACQ,oBAAD,EAAuBM,GAAvB,CAAvB;AACA,UAAME,OAAO,GAAGd,UAAU,CAACa,MAAD,CAA1B;AACA,UAAME,gBAAgB,GAAGD,OAAO,IAAIA,OAAO,CAACE,WAAR,EAApC;;AACA,QAAI,CAACD,gBAAL,EAAuB;AACrB,YAAME,gBAAgB,GAAGb,IAAI,CAACQ,GAAD,CAA7B;AACAL,MAAAA,aAAa,CAACK,GAAD,CAAb,GAAqBK,gBAArB;AACD;AACF,GARD,EAPuC,CAiBvC;;AACAT,EAAAA,MAAM,CAACE,IAAP,CAAYH,aAAZ,EAA2BI,OAA3B,CAAmCC,GAAG,IAAI;AACxCT,IAAAA,gBAAgB,CAACS,GAAD,EAAML,aAAa,CAACK,GAAD,CAAnB,EAA0BP,YAA1B,CAAhB;AACD,GAFD;AAGD","sourcesContent":["import { pathJoin, getDevBundle, statOrNull } from '../fs/files';\nimport { installNpmModule } from '../isobuild/meteor-npm.js';\n\nexport function ensureDependencies(deps) {\n  const devBundleLib = pathJoin(getDevBundle(), 'lib');\n  const devBundleNodeModules = pathJoin(devBundleLib, 'node_modules');\n\n  // Check if each of the requested dependencies resolves, if not\n  // mark them for installation.\n  const needToInstall = Object.create(null);\n  Object.keys(deps).forEach(dep => {\n    const pkgDir = pathJoin(devBundleNodeModules, dep);\n    const pkgStat = statOrNull(pkgDir);\n    const alreadyInstalled = pkgStat && pkgStat.isDirectory();\n    if (!alreadyInstalled) {\n      const versionToInstall = deps[dep];\n      needToInstall[dep] = versionToInstall;\n    }\n  });\n\n  // Install each of the requested modules.\n  Object.keys(needToInstall).forEach(dep => {\n    installNpmModule(dep, needToInstall[dep], devBundleLib);\n  });\n}\n"],"file":"tools/cli/dev-bundle-helpers.js.map"}