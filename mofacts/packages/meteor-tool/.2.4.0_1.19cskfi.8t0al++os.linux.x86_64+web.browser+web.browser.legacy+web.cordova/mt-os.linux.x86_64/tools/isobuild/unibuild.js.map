{"version":3,"sources":["/tools/isobuild/unibuild.js"],"names":["module","export","Unibuild","_","link","default","v","files","WatchSet","sha1","NodeModulesDirectory","archinfo","SourceResource","rejectBadPath","p","indexOf","Error","nextBuildId","constructor","isopack","kind","arch","uses","implies","watchSet","nodeModulesDirectories","declaredExports","resources","pkg","id","name","some","nmd","nodeModulesPath","local","fromJSON","unibuildJson","unibuildBasePath","format","JSON","stringify","unibuildHasPrelink","each","resource","file","data","readBufferWithLengthAndOffset","pathJoin","length","offset","type","prelinkResource","extension","path","servePath","hash","usesDefaultSourceProcessor","legacyPrelink","packageVariables","sourceMap","readFile","push","fileOptions","includes","undefined","pv","testOnly","readDirsFromJSON","node_modules","packageName","sourceRoot","rebuildBinaries","matches","host","toJSON","builder","unibuildDir","usesModules","npmDirsToCopy","unibuild","map","u","package","constraint","unordered","weak","isEmpty","bundlePath","has","sourcePath","getPreferredBundlePath","preferredPaths","Object","keys","concat","head","body","Buffer","from","lazy","parts","write","_data","generatedFilename","writeToGeneratedFilename","_hash","getLegacyJsResources","legacyJsResources","forEach","_getServePath","bare"],"mappings":"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","sourcesContent":["\"use strict\";\n\nimport _ from \"underscore\";\nimport files from \"../fs/files\";\nimport { WatchSet, sha1 } from \"../fs/watch\";\nimport { NodeModulesDirectory } from \"./bundler.js\";\nimport * as archinfo from \"../utils/archinfo\";\nimport { SourceResource } from './compiler';\n\nfunction rejectBadPath(p) {\n  if (p.indexOf(\"..\") >= 0) {\n    throw new Error(\"bad path: \" + p);\n  }\n}\n\nlet nextBuildId = 1;\n\nexport class Unibuild {\n  constructor(isopack, {\n    kind, // required (main/plugin/app)\n    arch, // required\n    uses,\n    implies,\n    watchSet,\n    nodeModulesDirectories,\n    declaredExports,\n    resources,\n  }) {\n    this.pkg = isopack;\n    this.kind = kind;\n    this.arch = arch;\n    this.uses = uses;\n    this.implies = implies || [];\n\n    // This WatchSet will end up having the watch items from the\n    // SourceArch (such as package.js or .meteor/packages), plus all of\n    // the actual source files for the unibuild (including items that we\n    // looked at to find the source files, such as directories we\n    // scanned).\n    this.watchSet = watchSet || new WatchSet();\n\n    // Each Unibuild is given a unique id when it's loaded (it is not\n    // saved to disk). This is just a convenience to make it easier to\n    // keep track of Unibuilds in a map; it's used by bundler and\n    // compiler. We put some human readable info in here too to make\n    // debugging easier.\n    this.id = this.pkg.name + \".\" + this.kind + \"@\" + this.arch + \"#\" +\n      (nextBuildId ++);\n\n    // 'declaredExports' are the variables which are exported from this\n    // package.  A list of objects with keys 'name' (required) and\n    // 'testOnly' (boolean, defaults to false).\n    this.declaredExports = declaredExports;\n\n    // All of the data provided for eventual inclusion in the bundle,\n    // other than JavaScript that still needs to be fed through the final\n    // link stage. A list of objects with these keys:\n    //\n    // type: \"source\", \"head\", \"body\", \"asset\". (resources produced by\n    // legacy source handlers can also be \"js\" or \"css\".\n    //\n    // data: The contents of this resource, as a Buffer. For example, for\n    // \"head\", the data to insert in <head>; for \"js\", the JavaScript\n    // source code (which may be subject to further processing such as\n    // minification); for \"asset\", the contents of a static resource such\n    // as an image.\n    //\n    // servePath: The (absolute) path at which the resource would prefer\n    // to be served. Interpretation varies by type. For example, always\n    // honored for \"asset\", ignored for \"head\" and \"body\", sometimes\n    // honored for CSS but ignored if we are concatenating.\n    //\n    // sourceMap: Allowed only for \"js\". If present, a string.\n    //\n    // fileOptions: for \"source\", the options passed to `api.addFiles`.\n    // plugin-specific.\n    //\n    // extension: for \"source\", the file extension that this matched\n    // against at build time. null if matched against a specific filename.\n    this.resources = resources;\n\n    // Map from absolute paths of node_modules directories to\n    // NodeModulesDirectory objects.\n    this.nodeModulesDirectories = nodeModulesDirectories;\n\n    // Provided for backwards compatibility; please use\n    // unibuild.nodeModulesDirectories instead!\n    _.some(this.nodeModulesDirectories, (nmd, nodeModulesPath) => {\n      if (! nmd.local) {\n        this.nodeModulesPath = nodeModulesPath;\n        return true;\n      }\n    });\n  }\n\n  static fromJSON(unibuildJson, {\n    isopack,\n    // At some point we stopped writing 'kind's to the metadata file, so\n    // default to main.\n    kind = \"main\",\n    arch,\n    unibuildBasePath,\n    watchSet,\n  }) {\n    if (unibuildJson.format !== \"unipackage-unibuild-pre1\" &&\n        unibuildJson.format !== \"isopack-2-unibuild\") {\n      throw new Error(\"Unsupported isopack unibuild format: \" +\n                      JSON.stringify(unibuildJson.format));\n    }\n\n    // Is this unibuild the legacy pre-\"compiler plugin\" format which contains\n    // \"prelink\" resources of pre-processed JS files (as well as the\n    // \"packageVariables\" field) instead of individual \"source\" resources (and\n    // a \"declaredExports\" field)?\n    const unibuildHasPrelink =\n      unibuildJson.format === \"unipackage-unibuild-pre1\";\n\n    const resources = [];\n\n    _.each(unibuildJson.resources, function (resource) {\n      rejectBadPath(resource.file);\n\n      const data = files.readBufferWithLengthAndOffset(\n        files.pathJoin(unibuildBasePath, resource.file),\n        resource.length,\n        resource.offset,\n      );\n\n      if (resource.type === \"prelink\") {\n        if (! unibuildHasPrelink) {\n          throw Error(\"Unexpected prelink resource in \" +\n                      unibuildJson.format + \" at \" + unibuildBasePath);\n        }\n\n        // We found a \"prelink\" resource, because we're processing a package\n        // published with an older version of Meteor which did not create\n        // isopack-2 isopacks and which always preprocessed and linked all JS\n        // files instead of leaving that until bundle time.  Let's pretend it\n        // was just a single js source file, but leave a \"legacyPrelink\" field\n        // on it so we can not re-link that part (and not re-analyze for\n        // assigned variables).\n        const prelinkResource = {\n          type: \"source\",\n          extension: \"js\",\n          data: data,\n          path: resource.servePath,\n          // It's a shame to have to calculate the hash here instead of having\n          // it on disk, but this only runs for legacy packages anyway.\n          hash: sha1(data),\n          // Legacy prelink files definitely don't have a source processor!\n          // They were created by an Isobuild that didn't even know about\n          // source processors!\n          usesDefaultSourceProcessor: true,\n          legacyPrelink: {\n            packageVariables: unibuildJson.packageVariables || []\n          }\n        };\n\n        if (resource.sourceMap) {\n          rejectBadPath(resource.sourceMap);\n          prelinkResource.legacyPrelink.sourceMap = files.readFile(\n            files.pathJoin(unibuildBasePath, resource.sourceMap), 'utf8');\n        }\n\n        resources.push(prelinkResource);\n\n      } else if (resource.type === \"source\") {\n        resources.push(new SourceResource({\n          extension: resource.extension,\n          usesDefaultSourceProcessor:\n          !! resource.usesDefaultSourceProcessor,\n          data: data,\n          path: resource.path,\n          hash: resource.hash,\n          fileOptions: resource.fileOptions\n        }));\n      } else if ([\"head\", \"body\", \"css\", \"js\", \"asset\"].includes(resource.type)) {\n        resources.push({\n          type: resource.type,\n          data: data,\n          servePath: resource.servePath || undefined,\n          path: resource.path || undefined\n        });\n\n      } else {\n        throw new Error(\"bad resource type in isopack: \" +\n                        JSON.stringify(resource.type));\n      }\n    });\n\n    let declaredExports = unibuildJson.declaredExports || [];\n\n    if (unibuildHasPrelink) {\n      // Legacy unibuild; it stores packageVariables and says some of them\n      // are exports.\n      declaredExports = [];\n\n      _.each(unibuildJson.packageVariables, function (pv) {\n        if (pv.export) {\n          declaredExports.push({\n            name: pv.name,\n            testOnly: pv.export === \"tests\",\n          });\n        }\n      });\n    }\n\n    const nodeModulesDirectories =\n      NodeModulesDirectory.readDirsFromJSON(unibuildJson.node_modules, {\n        packageName: isopack.name,\n        sourceRoot: unibuildBasePath,\n        // Rebuild binary npm packages if unibuild arch matches host arch.\n        rebuildBinaries: archinfo.matches(archinfo.host(), arch)\n      });\n\n    return new this(isopack, {\n      kind,\n      arch,\n      uses: unibuildJson.uses,\n      implies: unibuildJson.implies,\n      watchSet,\n      nodeModulesDirectories,\n      declaredExports: declaredExports,\n      resources: resources,\n    });\n  }\n\n  toJSON({\n    builder,\n    unibuildDir,\n    usesModules,\n    npmDirsToCopy,\n  }) {\n    const unibuild = this;\n    const unibuildJson = {\n      format: \"isopack-2-unibuild\",\n      declaredExports: unibuild.declaredExports,\n      uses: _.map(unibuild.uses, u => ({\n        'package': u.package,\n        // For cosmetic value, leave false values for these options out of\n        // the JSON file.\n        constraint: u.constraint || undefined,\n        unordered: u.unordered || undefined,\n        weak: u.weak || undefined,\n      })),\n      implies: (_.isEmpty(unibuild.implies) ? undefined : unibuild.implies),\n      resources: [],\n    };\n\n    // Figure out where the npm dependencies go.\n    let node_modules = {};\n    _.each(unibuild.nodeModulesDirectories, nmd => {\n      const bundlePath = _.has(npmDirsToCopy, nmd.sourcePath)\n      // We already have this npm directory from another unibuild.\n        ? npmDirsToCopy[nmd.sourcePath]\n        : npmDirsToCopy[nmd.sourcePath] =\n            nmd.getPreferredBundlePath(\"isopack\");\n      node_modules[bundlePath] = nmd.toJSON();\n    });\n\n    const preferredPaths = Object.keys(node_modules);\n    if (preferredPaths.length === 1) {\n      // For backwards compatibility, if there's only one node_modules\n      // directory, store it as a single string.\n      node_modules = preferredPaths[0];\n    }\n\n    if (preferredPaths.length > 0) {\n      // If there are no node_modules directories, don't confuse older\n      // versions of Meteor by storing an empty object.\n      unibuildJson.node_modules = node_modules;\n    }\n\n    // Output 'head', 'body' resources nicely\n    const concat = { head: [], body: [] };\n    const offset = { head: 0, body: 0 };\n\n    _.each(unibuild.resources, function (resource) {\n      if ([\"head\", \"body\"].includes(resource.type)) {\n        if (concat[resource.type].length) {\n          concat[resource.type].push(Buffer.from(\"\\n\", \"utf8\"));\n          offset[resource.type]++;\n        }\n        if (! (resource.data instanceof Buffer)) {\n          throw new Error(\"Resource data must be a Buffer\");\n        }\n\n        if (! usesModules &&\n            resource.fileOptions &&\n            resource.fileOptions.lazy) {\n          // Omit lazy resources from the unibuild JSON file.\n          return;\n        }\n\n        unibuildJson.resources.push({\n          type: resource.type,\n          file: files.pathJoin(unibuildDir, resource.type),\n          length: resource.data.length,\n          offset: offset[resource.type]\n        });\n\n        concat[resource.type].push(resource.data);\n        offset[resource.type] += resource.data.length;\n      }\n    });\n\n    _.each(concat, function (parts, type) {\n      if (parts.length) {\n        builder.write(files.pathJoin(unibuildDir, type), {\n          data: Buffer.concat(concat[type], offset[type])\n        });\n      }\n    });\n\n    // Output other resources each to their own file\n    _.each(unibuild.resources, function (resource) {\n      if ([\"head\", \"body\"].includes(resource.type)) {\n        // already did this one\n        return;\n      }\n\n      let data;\n      if (resource.type === 'source') {\n        data = resource.legacyPrelink ? resource.data : resource._data;\n      } else {\n        data = resource.data;\n      }\n\n      const generatedFilename =\n        builder.writeToGeneratedFilename(\n          files.pathJoin(\n            unibuildDir,\n            resource.servePath || resource.path,\n          ),\n          { data }\n        );\n\n      if (! usesModules &&\n          resource.fileOptions &&\n          resource.fileOptions.lazy) {\n        // Omit lazy resources from the unibuild JSON file, but only after\n        // they are copied into the bundle (immediately above).\n        return;\n      }\n\n      unibuildJson.resources.push({\n        type: resource.type,\n        extension: resource.extension,\n        file: generatedFilename,\n        length: data.length,\n        offset: 0,\n        usesDefaultSourceProcessor:\n          resource.usesDefaultSourceProcessor || undefined,\n        servePath: resource.servePath || undefined,\n        path: resource.path || undefined,\n        hash: resource._hash || resource.hash || undefined,\n        fileOptions: resource.fileOptions || undefined\n      });\n    });\n\n    return unibuildJson;\n  }\n\n  getLegacyJsResources() {\n    const legacyJsResources = [];\n\n    this.resources.forEach(resource => {\n      if (resource.type === \"source\" &&\n          resource.extension === \"js\") {\n        legacyJsResources.push({\n          data: resource.data,\n          hash: resource.hash,\n          servePath: this.pkg._getServePath(resource.path),\n          bare: resource.fileOptions && resource.fileOptions.bare,\n          sourceMap: resource.sourceMap,\n          // If this file was actually read from a legacy isopack and is\n          // itself prelinked, this will be an object with some metadata\n          // about it, and we can skip re-running prelink later.\n          legacyPrelink: resource.legacyPrelink\n        });\n      }\n    });\n\n    return legacyJsResources;\n  }\n}\n"],"file":"tools/isobuild/unibuild.js.map"}