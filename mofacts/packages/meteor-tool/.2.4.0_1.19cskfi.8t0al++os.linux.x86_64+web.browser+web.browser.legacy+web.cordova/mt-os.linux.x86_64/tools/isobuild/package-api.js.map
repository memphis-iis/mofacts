{"version":3,"sources":["/tools/isobuild/package-api.js"],"names":["_objectSpread","module1","link","default","v","export","PackageAPI","pathRelative","convertToPosixPath","_","require","buildmessage","utils","compiler","archinfo","catalog","toArray","x","isArray","toArchArray","arch","Array","ALL_ARCHES","seen","Object","create","splice","forEach","where","push","mapWhereToArches","i","length","inputArch","isMatch","any","map","actualArch","matches","error","useMyCaller","forAllMatchingArchs","archs","f","matchArch","some","constructor","options","buildingIsopackets","files","exports","uses","implies","each","assets","sources","main","releaseRecords","use","names","self","isObject","unordered","weak","name","parsed","parsePackageConstraint","e","versionParserError","message","a","package","constraint","constraintString","imply","debugOnly","prodOnly","testOnly","isIsobuildFeaturePackage","addFiles","paths","fileOptions","isAsset","_addFiles","mainModule","path","errors","filesForArch","source","relPath","oldMain","has","lazy","old","_forbidExportWithLazyMain","JSON","stringify","addAssets","type","Error","p","indexOf","filesOfType","typeName","versionsFrom","releases","release","DEFAULT_TRACK","relInf","split","releaseRecord","official","getReleaseVersion","tags","refreshCouldHelp","symbols","symbol","match","w"],"mappings":"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","sourcesContent":["var _ = require(\"underscore\");\nvar buildmessage = require('../utils/buildmessage.js');\nvar utils = require('../utils/utils.js');\nvar compiler = require('./compiler.js');\nvar archinfo = require('../utils/archinfo');\nvar catalog = require('../packaging/catalog/catalog.js');\n\n// It's important that we import these functions individually instead of\n// importing the whole files.* namespace, because now it's easier to tell\n// that this module doesn't actually touch the file system.\nimport {\n  pathRelative,\n  convertToPosixPath,\n} from \"../fs/files\";\n\nfunction toArray (x) {\n  if (_.isArray(x)) {\n    return x;\n  }\n  return x ? [x] : [];\n}\n\nfunction toArchArray(arch) {\n  if (! Array.isArray(arch)) {\n    arch = arch ? [arch] : compiler.ALL_ARCHES;\n  }\n\n  const seen = Object.create(null);\n\n  arch.splice(0).forEach(where => {\n    if (seen[where]) return;\n    seen[where] = true;\n    arch.push(...archinfo.mapWhereToArches(where));\n  });\n\n  // avoid using _.each so as to not add more frames to skip\n  for (var i = 0; i < arch.length; ++i) {\n    var inputArch = arch[i];\n    var isMatch = _.any(_.map(compiler.ALL_ARCHES, function (actualArch) {\n      return archinfo.matches(actualArch, inputArch);\n    }));\n    if (! isMatch) {\n      buildmessage.error(\n        \"Invalid 'where' argument: '\" + inputArch + \"'\",\n        // skip toArchArray in addition to the actual API function\n        {useMyCaller: 1});\n    }\n  }\n  return arch;\n}\n\n// Iterates over the list of target archs and calls f(arch) for all archs\n// that match an element of self.allarchs.\nfunction forAllMatchingArchs (archs, f) {\n  compiler.ALL_ARCHES.forEach(matchArch => {\n    archs.some(arch => {\n      if (archinfo.matches(matchArch, arch)) {\n        f(matchArch);\n        return true;\n      }\n    });\n  });\n}\n\n/**\n * @name  PackageAPI\n * @class PackageAPI\n * @instanceName api\n * @showInstanceName true\n * @global\n * @summary Type of the API object passed into the `Package.onUse` function.\n */\nexport class PackageAPI {\n  constructor(options) {\n    options = options || {};\n\n    this.buildingIsopackets = !!options.buildingIsopackets;\n\n    // source files used.\n    // It's a multi-level map structured as:\n    //   arch -> sources|assets -> relPath -> {relPath, fileOptions}\n    this.files = {};\n\n    // symbols exported\n    this.exports = {};\n\n    // packages used and implied (keys are 'package', 'unordered', and\n    // 'weak').  an \"implied\" package is a package that will be used by a unibuild\n    // which uses us.\n    this.uses = {};\n    this.implies = {};\n\n    _.each(compiler.ALL_ARCHES, arch => {\n      this.files[arch] = {\n        assets: [],\n        sources: [],\n        main: null,\n      };\n\n      this.exports[arch] = [];\n      this.uses[arch] = [];\n      this.implies[arch] = [];\n    });\n\n    this.releaseRecords = [];\n  }\n\n  // Called when this package wants to make another package be\n  // used. Can also take literal package objects, if you have\n  // anonymous packages you want to use (eg, app packages)\n  //\n  // @param arch 'web', 'web.browser', 'web.cordova', 'server',\n  // or an array of those.\n  // The default is ['web', 'server'].\n  //\n  // options can include:\n  //\n  // - unordered: if true, don't require this package to load\n  //   before us -- just require it to be loaded anytime. If\n  //   false, override a true value specified in\n  //   a previous call to use for this package name. (A\n  //   limitation of the current implementation is that this\n  //   flag is not tracked per-environment or per-role.)  This\n  //   option can be used to resolve circular dependencies in\n  //   exceptional circumstances, eg, the 'meteor' package\n  //   depends on 'handlebars', but all packages (including\n  //   'handlebars') have an implicit dependency on\n  //   'meteor'. Internal use only -- future support of this\n  //   is not guaranteed. #UnorderedPackageReferences\n  //\n  // - weak: if true, don't require this package to load at all, but if\n  //   it's going to load, load it before us.  Don't bring this\n  //   package's imports into our namespace and don't allow us to use\n  //   its plugins. (Has the same limitation as \"unordered\" that this\n  //   flag is not tracked per-environment or per-role; this may\n  //   change.)\n\n  /**\n   * @memberOf PackageAPI\n   * @instance\n   * @summary Depend on package `packagename`.\n   * @locus package.js\n   * @param {String|String[]} packageNames Packages being depended on.\n   * Package names may be suffixed with an @version tag.\n   *\n   * In general, you must specify a package's version (e.g.,\n   * `'accounts@1.0.0'` to use version 1.0.0 or a higher\n   * compatible version (ex: 1.0.1, 1.5.0, etc.)  of the\n   * `accounts` package). If you are sourcing core\n   * packages from a Meteor release with `versionsFrom`, you may leave\n   * off version names for core packages. You may also specify constraints,\n   * such as `my:forms@=1.0.0` (this package demands `my:forms` at `1.0.0` exactly),\n   * or `my:forms@1.0.0 || =2.0.1` (`my:forms` at `1.x.y`, or exactly `2.0.1`).\n   * @param {String|String[]} [architecture] If you only use the package on the\n   * server (or the client), you can pass in the second argument (e.g.,\n   * `'server'`, `'client'`, `'web.browser'`, `'web.cordova'`) to specify\n   * what architecture the package is used with. You can specify multiple\n   * architectures by passing in an array, for example `['web.cordova', 'os.linux']`.\n   * @param {Object} [options]\n   * @param {Boolean} options.weak Establish a weak dependency on a\n   * package. If package A has a weak dependency on package B, it means\n   * that including A in an app does not force B to be included too — but,\n   * if B is included or by another package, then B will load before A.\n   * You can use this to make packages that optionally integrate with or\n   * enhance other packages if those packages are present.\n   * When you weakly depend on a package you don't see its exports.\n   * You can detect if the possibly-present weakly-depended-on package\n   * is there by seeing if `Package.foo` exists, and get its exports\n   * from the same place.\n   * @param {Boolean} options.unordered It's okay to load this dependency\n   * after your package. (In general, dependencies specified by `api.use`\n   * are loaded before your package.) You can use this option to break\n   * circular dependencies.\n   */\n  use(names, arch, options) {\n    var self = this;\n\n    // Support `api.use(package, {weak: true})` without arch.\n    if (_.isObject(arch) && !_.isArray(arch) && !options) {\n      options = arch;\n      arch = null;\n    }\n    options = options || {};\n\n    names = toArray(names);\n    arch = toArchArray(arch);\n\n    // A normal dependency creates an ordering constraint and a \"if I'm\n    // used, use that\" constraint. Unordered dependencies lack the\n    // former; weak dependencies lack the latter. There's no point to a\n    // dependency that lacks both!\n    if (options.unordered && options.weak) {\n      buildmessage.error(\n        \"A dependency may not be both unordered and weak.\",\n        { useMyCaller: true });\n      // recover by ignoring\n      return;\n    }\n\n    // using for loop rather than underscore to help with useMyCaller\n    for (var i = 0; i < names.length; ++i) {\n      var name = names[i];\n      try {\n        var parsed = utils.parsePackageConstraint(name);\n      } catch (e) {\n        if (!e.versionParserError) {\n          throw e;\n        }\n        buildmessage.error(e.message, {useMyCaller: true});\n        // recover by ignoring\n        continue;\n      }\n\n      forAllMatchingArchs(arch, function (a) {\n        self.uses[a].push({\n          package: parsed.package,\n          constraint: parsed.constraintString,\n          unordered: options.unordered || false,\n          weak: options.weak || false\n        });\n      });\n    }\n  }\n\n  // Called when this package wants packages using it to also use\n  // another package.  eg, for umbrella packages which want packages\n  // using them to also get symbols or plugins from their components.\n\n  /**\n   *\n   * @memberOf PackageAPI\n   * @summary Give users of this package access to another package (by passing\n   * in the string `packagename`) or a collection of packages (by passing in\n   * an array of strings [`packagename1`, `packagename2`]\n   * @locus package.js\n   * @instance\n   * @param {String|String[]} packageNames Name of a package, or array of\n   * package names, with an optional @version component for each.\n   * @param {String|String[]} [architecture] If you only use the package on\n   * the server (or the client), you can pass in the second argument (e.g.,\n   * `'server'`, `'client'`, `'web.browser'`, `'web.cordova'`) to specify what\n   * architecture the package is used with. You can specify multiple\n   * architectures by passing in an array, for example `['web.cordova',\n   * 'os.linux']`.\n   */\n  imply(names, arch) {\n    var self = this;\n\n    // We currently disallow build plugins in\n    // debugOnly/prodOnly/testOnly packages; but if you could use\n    // imply in a debugOnly package, you could pull in the build\n    // plugin from an implied package, which would have the same\n    // problem as allowing build plugins directly in the package. So\n    // no imply either!\n    if (self.debugOnly || self.prodOnly || self.testOnly) {\n      buildmessage.error(\"can't use imply in packages that are debugOnly, prodOnly or testOnly\");\n      // recover by ignoring\n      return;\n    }\n\n    names = toArray(names);\n    arch = toArchArray(arch);\n\n    // using for loop rather than underscore to help with useMyCaller\n    for (var i = 0; i < names.length; ++i) {\n      var name = names[i];\n      try {\n        var parsed = utils.parsePackageConstraint(name);\n      } catch (e) {\n        if (!e.versionParserError) {\n          throw e;\n        }\n        buildmessage.error(e.message, {useMyCaller: true});\n        // recover by ignoring\n        continue;\n      }\n\n      // api.imply('isobuild:compiler-plugin') doesn't really make any sense. If\n      // we change our mind and think it makes sense, we can always implement it\n      // later...\n      if (compiler.isIsobuildFeaturePackage(parsed.package)) {\n        buildmessage.error(\n          `to declare that your package requires the build tool feature ` +\n            `'{parsed.package}', use 'api.use', not 'api.imply'`);\n        // recover by ignoring\n        continue;\n      }\n\n      forAllMatchingArchs(arch, function (a) {\n        // We don't allow weak or unordered implies, since the main\n        // purpose of imply is to provide imports and plugins.\n        self.implies[a].push({\n          package: parsed.package,\n          constraint: parsed.constraintString\n        });\n      });\n    }\n  }\n\n  // Top-level call to add a source file to a package. It will\n  // be processed according to its extension (eg, *.coffee\n  // files will be compiled to JavaScript).\n\n  /**\n   * @memberOf PackageAPI\n   * @instance\n   * @summary Specify source code files for your package.\n   * @locus package.js\n   * @param {String|String[]} filenames Paths to the source files.\n   * @param {String|String[]} [architecture] If you only want to use the file\n   * on the server (or the client), you can pass this argument\n   * (e.g., 'server', 'legacy', 'client', 'web.browser', 'web.cordova') to specify\n   * what architecture the file is used with. You can call api.addFiles(files, \"legacy\")\n   * in your package.js configuration file to add extra files to the legacy bundle,\n   * or api.addFiles(files, \"client\") to add files to all client bundles,\n   * or api.addFiles(files, \"web.browser\") to add files only to the modern bundle.\n   * You can specify multiple\n   * architectures by passing in an array, for example\n   * `['web.cordova', 'os.linux']`. By default, the file will be loaded on both\n   * server and client.\n   * @param {Object} [options] Options that will be passed to build\n   * plugins.\n   * @param {Boolean} [options.bare] If this file is JavaScript code or will\n   * be compiled into JavaScript code by a build plugin, don't wrap the\n   * resulting file in a closure. Has the same effect as putting a file into the\n   * `client/compatibility` directory in an app.\n   */\n  addFiles(paths, arch, fileOptions) {\n    if (fileOptions && fileOptions.isAsset) {\n      // XXX it would be great to print a warning here, see the issue:\n      // https://github.com/meteor/meteor/issues/5495\n      this._addFiles(\"assets\", paths, arch);\n      return;\n    }\n\n    // Watch out - we rely on the levels of stack traces inside this\n    // function so don't wrap it in another function without changing that logic\n    this._addFiles(\"sources\", paths, arch, fileOptions);\n  }\n\n  mainModule(path, arch, fileOptions = {}) {\n    arch = toArchArray(arch);\n\n    const errors = [];\n\n    forAllMatchingArchs(arch, a => {\n      const filesForArch = this.files[a];\n      const source = {\n        relPath: pathRelative(\".\", path),\n        fileOptions: {\n          ...fileOptions,\n          mainModule: true\n        }\n      };\n\n      const oldMain = filesForArch.main;\n      if (oldMain) {\n        // It's not an error to call api.mainModule multiple times, but\n        // the last call takes precedence over the earlier calls.\n        oldMain.fileOptions.mainModule = false;\n\n        if (! _.has(oldMain.fileOptions, \"lazy\")) {\n          // If the laziness of the old main module was not explicitly\n          // specified, then it would have been implicitly eager just\n          // because it was the main module. Since we are revoking its\n          // status as main module now, we should also explicitly revoke\n          // the eagerness that came with that status.\n          oldMain.fileOptions.lazy = true;\n        }\n      }\n\n      if (filesForArch.sources.some(old => source.relPath === old.relPath)) {\n        errors.push(`Duplicate api.mainModule: ${path}`);\n      }\n\n      filesForArch.main = source;\n      filesForArch.sources.push(source);\n\n      this._forbidExportWithLazyMain(a);\n    });\n\n    errors.forEach(error => {\n      buildmessage.error(error, { useMyCaller: 1 });\n    });\n  }\n\n  _forbidExportWithLazyMain(arch) {\n    const filesForArch = this.files[arch];\n    if (filesForArch.main &&\n        filesForArch.main.fileOptions.lazy &&\n        this.exports[arch].length > 0) {\n      buildmessage.error(\n        \"Architecture \" + JSON.stringify(arch) + \" cannot both \" +\n          \"export symbols and have a lazy main module\"\n      );\n    }\n  }\n\n  /**\n   * @memberOf PackageAPI\n   * @instance\n   * @summary Specify asset files for your package. They can be accessed via\n   * the [Assets API](#assets) from the server, or at the URL\n   * `/packages/username_package-name/file-name` from the client, depending on the\n   * architecture passed.\n   * @locus package.js\n   * @param {String|String[]} filenames Paths to the asset files.\n   * @param {String|String[]} architecture Specify where this asset should be\n   * available (e.g., 'server', 'client', 'web.browser', 'web.cordova'). You can\n   * specify multiple architectures by passing in an array, for example\n   * `['web.cordova', 'os.linux']`.\n   */\n  addAssets(paths, arch) {\n    if(!arch) {\n      buildmessage.error('addAssets requires a second argument specifying ' +\n        'where the asset should be available. For example: \"client\", ' +\n        '\"server\", or [\"client\", \"server\"].', { useMyCaller: true });\n      return;\n    }\n\n    // Watch out - we rely on the levels of stack traces inside this\n    // function so don't wrap it in another function without changing that logic\n    this._addFiles(\"assets\", paths, arch);\n  }\n\n  /**\n   * Internal method used by addFiles and addAssets.\n   */\n  _addFiles(type, paths, arch, fileOptions) {\n    if (type !== \"sources\" && type !== \"assets\") {\n      throw new Error(`Can only handle sources and assets, not '${type}'.`);\n    }\n\n    var self = this;\n\n    paths = toArray(paths);\n    arch = toArchArray(arch);\n\n    // Convert Dos-style paths to Unix-style paths.\n    // XXX it is possible to convert an already Unix-style path by mistake\n    // and break it. e.g.: 'some\\folder/anotherFolder' is a valid path\n    // consisting of two components. #WindowsPathApi\n    paths = _.map(paths, function (p) {\n      // Normalize ./foo.js to foo.js.\n      p = pathRelative(\".\", p);\n\n      if (p.indexOf('/') !== -1) {\n        // it is already a Unix-style path most likely\n        return p;\n      }\n\n      return convertToPosixPath(p, true);\n    });\n\n    var errors = [];\n    _.each(paths, function (path) {\n      forAllMatchingArchs(arch, function (a) {\n        const filesOfType = self.files[a][type];\n\n        // Check if we have already added a file at this path\n        if (filesOfType.some(source => source.relPath === path)) {\n          // We want the singular form of the file type\n          const typeName = {\n            sources: 'source',\n            assets: 'asset'\n          }[type];\n\n          errors.push(`Duplicate ${typeName} file: ${path}`);\n          return;\n        }\n\n        const source = {\n          relPath: path\n        };\n\n        if (fileOptions) {\n          source.fileOptions = fileOptions;\n        }\n\n        filesOfType.push(source);\n      });\n    });\n\n    // Spit out all the errors at the end, where the number of stack frames to\n    // skip is just 2 (this function and its callers) instead of something like\n    // 7 from forAllMatchingArchs and _.each.  Avoid using _.each here to keep\n    // stack predictable.\n    for (var i = 0; i < errors.length; ++i) {\n      buildmessage.error(errors[i], { useMyCaller: 1 });\n    }\n  }\n\n  // Use this release to resolve unclear dependencies for this package. If\n  // you don't fill in dependencies for some of your implies/uses, we will\n  // look at the packages listed in the release to figure that out.\n\n  /**\n   * @memberOf PackageAPI\n   * @instance\n   * @summary Use versions of core packages from a release. Unless provided,\n   * all packages will default to the versions released along with\n   * `meteorRelease`. This will save you from having to figure out the exact\n   * versions of the core packages you want to use. For example, if the newest\n   * release of meteor is `METEOR@0.9.0` and it includes `jquery@1.0.0`, you\n   * can write `api.versionsFrom('METEOR@0.9.0')` in your package, and when you\n   * later write `api.use('jquery')`, it will be equivalent to\n   * `api.use('jquery@1.0.0')`. You may specify an array of multiple releases,\n   * in which case the default value for constraints will be the \"or\" of the\n   * versions from each release: `api.versionsFrom(['METEOR@0.9.0',\n   * 'METEOR@0.9.5'])` may cause `api.use('jquery')` to be interpreted as\n   * `api.use('jquery@1.0.0 || 2.0.0')`.\n   * @locus package.js\n   * @param {String | String[]} meteorRelease Specification of a release:\n   * track@version. Just 'version' (e.g. `\"0.9.0\"`) is sufficient if using the\n   * default release track `METEOR`. Can be an array of specifications.\n   */\n  versionsFrom(releases) {\n    var self = this;\n\n    // Packages in isopackets really ought to be in the core release, by\n    // definition, so saying that they should use versions from another\n    // release doesn't make sense. Moreover, if we're running from a\n    // checkout, we build isopackets before we initialize catalog.official\n    // (since we may need the ddp isopacket to refresh catalog.official),\n    // so we wouldn't actually be able to interpret the release name\n    // anyway.\n    if (self.buildingIsopackets) {\n      buildmessage.error(\n        \"packages in isopackets may not use versionsFrom\");\n      // recover by ignoring\n      return;\n    }\n\n    releases = toArray(releases);\n\n    // using for loop rather than underscore to help with useMyCaller\n    for (var i = 0; i < releases.length; ++i) {\n      var release = releases[i];\n\n      // If you don't specify a track, use our default.\n      if (release.indexOf('@') === -1) {\n        release = catalog.DEFAULT_TRACK + \"@\" + release;\n      }\n\n      var relInf = release.split('@');\n      if (relInf.length !== 2) {\n        buildmessage.error(\"Release names in versionsFrom may not contain '@'.\",\n                           { useMyCaller: true });\n        return;\n      }\n      var releaseRecord = catalog.official.getReleaseVersion(\n        relInf[0], relInf[1]);\n      if (!releaseRecord) {\n        buildmessage.error(\"Unknown release \"+ release,\n                           { tags: { refreshCouldHelp: true } });\n      } else {\n        self.releaseRecords.push(releaseRecord);\n      }\n    }\n  }\n\n  // Export symbols from this package.\n  //\n  // @param symbols String (eg \"Foo\") or array of String\n  // @param arch 'web', 'server', 'web.browser', 'web.cordova'\n  // or an array of those.\n  // The default is ['web', 'server'].\n  // @param options 'testOnly', boolean.\n\n  /**\n   *\n   * @memberOf PackageAPI\n   * @instance\n   * @summary Export package-level variables in your package. The specified\n   * variables (declared without `var` in the source code) will be available\n   * to packages that use your package. If your package sets the `debugOnly`,\n   * `prodOnly` or `testOnly` options to `true` when it calls\n   * `Package.describe()`, then packages that use your package will need to use\n   * `Package[\"package-name\"].ExportedVariableName` to access the value of an\n   * exported variable.\n   * @locus package.js\n   * @param {String|String[]} exportedObjects Name of the object to export, or\n   * an array of object names.\n   * @param {String|String[]} [architecture] If you only want to export the\n   * object on the server (or the client), you can pass in the second argument\n   * (e.g., 'server', 'client', 'web.browser', 'web.cordova') to specify what\n   * architecture the export is used with. You can specify multiple\n   * architectures by passing in an array, for example `['web.cordova',\n   * 'os.linux']`.\n   * @param {Object} [exportOptions]\n   * @param {Boolean} exportOptions.testOnly If true, this symbol will only be\n   * exported when running tests for this package.\n   */\n  \"export\"(symbols, arch, options) {\n    var self = this;\n\n    // Support `api.export(\"FooTest\", {testOnly: true})` without\n    // arch.\n    if (_.isObject(arch) && !_.isArray(arch) && !options) {\n      options = arch;\n      arch = null;\n    }\n    options = options || {};\n\n    symbols = toArray(symbols);\n    arch = toArchArray(arch);\n\n    _.each(symbols, function (symbol) {\n      // XXX be unicode-friendlier\n      if (!symbol.match(/^([_$a-zA-Z][_$a-zA-Z0-9]*)$/)) {\n        buildmessage.error(\"Bad exported symbol: \" + symbol,\n                           { useMyCaller: true });\n        // recover by ignoring\n        return;\n      }\n\n      forAllMatchingArchs(arch, function (w) {\n        self.exports[w].push({\n          name: symbol,\n          testOnly: !! options.testOnly,\n        });\n\n        self._forbidExportWithLazyMain(w);\n      });\n    });\n  }\n}\n"],"file":"tools/isobuild/package-api.js.map"}