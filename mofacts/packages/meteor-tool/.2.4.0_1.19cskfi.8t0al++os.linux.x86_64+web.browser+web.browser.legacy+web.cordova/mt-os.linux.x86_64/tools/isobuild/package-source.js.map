{"version":3,"sources":["/tools/isobuild/package-source.js"],"names":["_objectSpread","module1","link","default","v","_defineProperty","Builder","SourceArch","PackageNamespace","PackageNpm","PackageCordova","PackageAPI","TEST_FILENAME_REGEXPS","APP_TEST_FILENAME_REGEXPS","isTestFilePath","convertColonsInPath","convert","optimisticReadFile","optimisticHashOrNull","optimisticStatOrNull","optimisticReadMeteorIgnore","optimisticLookupPackageJsonArray","_","require","sourcemap","files","utils","watch","buildmessage","meteorNpm","archinfo","catalog","packageVersionParser","compiler","Profile","AUTO_TEST_PREFIX","isTestName","name","nameStart","slice","length","genTestName","loadOrderSort","sourceProcessorSet","arch","isTemplate","memoize","filename","classification","classifyFilename","type","sourceProcessors","Error","legacyIsTemplate","a","b","aBasename","pathBasename","bBasename","isTemplate_a","isTemplate_b","ismain_a","indexOf","ismain_b","islib_a","pathSep","islib_b","a_parts","split","b_parts","len_a","len_b","i","a_part","b_part","splitConstraint","c","parsed","parsePackageConstraint","package","constraint","constraintString","getExcerptFromReadme","text","commonmark","reader","DocParser","parse","relevantNodes","any","children","child","isHeader","t","push","isEmpty","textLines","start","start_line","stop","last","end_line","excerpt","join","replace","SymlinkLoopChecker","constructor","sourceRoot","relDir","absPath","pathJoin","_realSourceRoot","lstat","isSymbolicLink","result","realpath","_cache","set","parentDir","pathDirname","parentEntry","get","_seenPaths","Map","check","quietly","realPath","_realpath","e","code","has","error","PackageSource","self","serveRoot","metadata","docsExplicitlyProvided","version","versionExplicitlyProvided","architectures","pluginInfo","pluginWatchSet","WatchSet","npmDependencies","npmDiscards","npmCacheDirectory","cordovaDependencies","testName","isTest","debugOnly","prodOnly","testOnly","includeTool","isCore","deprecated","deprecatedMessage","undefined","Object","assign","prototype","initEmpty","initFromOptions","options","sources","ensureOnlyValidVersions","forCordova","isString","npmDir","map","source","relPath","sourceArch","kind","uses","use","getFiles","localNodeModulesDirs","_checkCrossUnibuildVersionConstraints","initFromPackageDir","dir","pop","assertInCapture","isPortable","initFromPackageDirOptions","documentation","inCheckout","packDir","getCurrentToolsDir","exists","packageFileHashes","create","packageJsPath","packageJsCode","pkgJsonPath","pkgJsonStat","isFile","watchPackageFiles","watchSet","each","hash","path","addFile","Package","Npm","Cordova","runJavaScript","toString","symbols","exception","_fileAndDepLoader","_dependencies","validatePackageName","versionParserError","message","api","buildingIsopackets","markBoundary","console","log","stack","ALL_ARCHES","assets","doNotDepOnSelf","dep","label","implies","releaseRecords","setFromRel","newConstraint","releaseRecord","packages","reduce","x","y","pathResolve","_discards","process","env","NO_METEOR_PACKAGE","alreadyDependsOnMeteor","find","u","unshift","relPathToSourceObj","forEach","_findSources","isApp","fileOptions","lazy","declaredExports","exports","_hasTests","_readAndWatchDirectory","include","exclude","names","contents","readDirectory","addDirectory","initFromAppDir","projectContext","ignoreFiles","appDir","projectDir","projectConstraintsFile","eachConstraint","projectWatchSet","getProjectWatchSet","mainModulesByArch","meteorConfig","getMainModulesByArch","testModulesByArch","getTestModulesByArch","nodeModulesToRecompileByArch","getNodeModulesToRecompileByArch","merge","platformList","getCordovaPlatforms","mainModule","getMainModule","testModule","getTestModule","nodeModulesToRecompile","getNodeModulesToRecompile","findOptions","missingMainModule","sort","_inferAppFileOptions","_findAssets","origAppDir","getOriginalAppDirForTestPackages","origNodeModulesDir","origNodeModulesStat","statOrNull","isDirectory","sourcePath","local","isAppTest","global","testCommandMetadata","isTestFile","dirs","matches","endsWith","bare","_findSourcesCache","Set","loopChecker","isWeb","sourceReadOptions","appReadDirectoryOptions","controlFiles","anyLevelExcludes","topLevelExcludes","nodeModulesReadOptions","concat","baseCacheKey","JSON","stringify","excludes","key","value","isRegExp","flags","makeCacheKey","dotMeteorIgnoreFiles","removeIgnoredFilesFrom","array","keys","ignoreDir","ignore","target","item","pathRelative","startsWith","ignores","depth","inNodeModules","cache","cacheKey","absDir","readOptions","pkgJsonArray","pkgJson","difference","subdirectories","nodeModulesDir","subdir","test","withCache","assetDir","assetDirs","isEqual","shift","substr","assetsAndSubdirs","normalize","containsPlugins","getDependencyMetadata","ret","_computeDependencyMetadata","logError","getPackagesToLoadFirst","packageMap","processUse","weak","unordered","isIsobuildFeaturePackage","packageInfo","getInfo","info","spec","parsedSpec","getExports","exp","arches","processReadme","assertInJob","fullReadme","readFile","err","errorMessage","sha256","dependencies","allConstraints","failed","implied","skipWeak","skipUnordered","references","d","reference","withoutSpecificOs","partial","constraints","uniq","displayName","module"],"mappings":"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","sourcesContent":["var _ = require('underscore');\nvar sourcemap = require('source-map');\n\nvar files = require('../fs/files');\nvar utils = require('../utils/utils.js');\nvar watch = require('../fs/watch');\nvar buildmessage = require('../utils/buildmessage.js');\nvar meteorNpm = require('./meteor-npm.js');\nimport Builder from './builder.js';\nvar archinfo = require('../utils/archinfo');\nvar catalog = require('../packaging/catalog/catalog.js');\nvar packageVersionParser = require('../packaging/package-version-parser.js');\nvar compiler = require('./compiler.js');\nvar Profile = require('../tool-env/profile').Profile;\n\nimport SourceArch from './source-arch.js';\nimport { PackageNamespace } from \"./package-namespace.js\";\nimport { PackageNpm } from \"./package-npm.js\";\nimport { PackageCordova } from \"./package-cordova.js\";\nimport { PackageAPI } from \"./package-api.js\";\n\nimport {\n  TEST_FILENAME_REGEXPS,\n  APP_TEST_FILENAME_REGEXPS,\n  isTestFilePath,\n} from './test-files';\n\nimport {\n  convert as convertColonsInPath\n} from '../utils/colon-converter.js';\n\nimport {\n  optimisticReadFile,\n  optimisticHashOrNull,\n  optimisticStatOrNull,\n  optimisticReadMeteorIgnore,\n  optimisticLookupPackageJsonArray,\n} from \"../fs/optimistic\";\n\n// XXX: This is a medium-term hack, to avoid having the user set a package name\n// & test-name in package.describe. We will change this in the new control file\n// world in some way.\nvar AUTO_TEST_PREFIX = \"local-test:\";\nvar isTestName = function (name) {\n  var nameStart = name.slice(0, AUTO_TEST_PREFIX.length);\n  return nameStart === AUTO_TEST_PREFIX;\n};\nvar genTestName = function (name) {\n  return AUTO_TEST_PREFIX + name;\n};\n\n// Returns a sort comparator to order files into load order.\nvar loadOrderSort = function (sourceProcessorSet, arch) {\n  const isTemplate = _.memoize((filename) => {\n    const classification = sourceProcessorSet.classifyFilename(filename, arch);\n    switch (classification.type) {\n    case 'extension':\n    case 'filename':\n      if (! classification.sourceProcessors) {\n        // This is *.js, not a template. #HardcodeJs\n        return false;\n      }\n      if (classification.sourceProcessors.length > 1) {\n        throw Error(\"conflicts in compiler?\");\n      }\n      return classification.sourceProcessors[0].isTemplate;\n\n    case 'legacy-handler':\n      return classification.legacyIsTemplate;\n\n    case 'wrong-arch':\n    case 'unmatched':\n    case 'meteor-ignore':\n      return false;\n\n    default:\n      throw Error(`Surprising type ${classification.type} for ${filename}`);\n    }\n  });\n\n  return function (a, b) {\n    const aBasename = files.pathBasename(a);\n    const bBasename = files.pathBasename(b);\n\n    // XXX MODERATELY SIZED HACK --\n    // push template files ahead of everything else. this is\n    // important because the user wants to be able to say\n    //   Template.foo.events = { ... }\n    // in a JS file and not have to worry about ordering it\n    // before the corresponding .html file.\n    //\n    // maybe all of the templates should go in one file?\n    var isTemplate_a = isTemplate(aBasename);\n    var isTemplate_b = isTemplate(bBasename);\n    if (isTemplate_a !== isTemplate_b) {\n      return (isTemplate_a ? -1 : 1);\n    }\n\n    // main.* loaded last\n    var ismain_a = (aBasename.indexOf('main.') === 0);\n    var ismain_b = (bBasename.indexOf('main.') === 0);\n    if (ismain_a !== ismain_b) {\n      return (ismain_a ? 1 : -1);\n    }\n\n    // /lib/ loaded first\n    var islib_a = (a.indexOf(files.pathSep + 'lib' + files.pathSep) !== -1 ||\n                   a.indexOf('lib' + files.pathSep) === 0);\n    var islib_b = (b.indexOf(files.pathSep + 'lib' + files.pathSep) !== -1 ||\n                   b.indexOf('lib' + files.pathSep) === 0);\n    if (islib_a !== islib_b) {\n      return (islib_a ? -1 : 1);\n    }\n\n    var a_parts = a.split(files.pathSep);\n    var b_parts = b.split(files.pathSep);\n\n    // deeper paths loaded first.\n    var len_a = a_parts.length;\n    var len_b = b_parts.length;\n    if (len_a < len_b) {\n      return 1;\n    }\n    if (len_b < len_a) {\n      return -1;\n    }\n\n    // Otherwise compare path components lexicographically.\n    for (var i = 0; i < len_a; ++i) {\n      var a_part = a_parts[i];\n      var b_part = b_parts[i];\n      if (a_part < b_part) {\n        return -1;\n      }\n      if (b_part < a_part) {\n        return 1;\n      }\n    }\n\n    // Never reached unless there are somehow duplicate paths.\n    return 0;\n  };\n};\n\nvar splitConstraint = function (c) {\n  // XXX print error better (w/ buildmessage?)?\n  var parsed = utils.parsePackageConstraint(c);\n  return { package: parsed.package,\n           constraint: parsed.constraintString || null };\n};\n\n// Given the text of a README.md file, excerpts the text between the first and\n// second heading.\n//\n// Specifically - if there is text between the document name, and the first\n// subheading, it will take that text. If there is no text there, and only text\n// after the first subheading, it will take that text. It won't look any deeper\n// than that (in case the user intentionally wants to leave the section blank\n// for some reason). Skips lines that start with an exclamation point.\nvar getExcerptFromReadme = function (text) {\n  // Don't waste time parsing if the document is empty.\n  if (! text) {\n    return \"\";\n  }\n\n  // Split into lines with Commonmark.\n  var commonmark = require('commonmark');\n  var reader = new commonmark.DocParser();\n  var parsed = reader.parse(text);\n\n  // Commonmark will parse the Markdown into an array of nodes. These are the\n  // nodes that represent the text between the first and second heading.\n  var relevantNodes = [];\n\n  // Go through the document until we get the nodes that we are looking for,\n  // then stop.\n  _.any(parsed.children, function (child) {\n    var isHeader = (child.t === \"Header\");\n    // Don't excerpt anything before the first header.\n    if (! isHeader) {\n      // If we are currently in the middle of excerpting, continue doing that\n      // until we hit hit a header (and this is not a header). Otherwise, if\n      // this is text, we should begin to excerpt it.\n      relevantNodes.push(child);\n    } else if (! _.isEmpty(relevantNodes) && isHeader) {\n      // We have been excerpting, and came across a header. That means\n      // that we are done.\n      return true;\n    }\n    return false;\n  });\n\n  // If we have not found anything, we are done.\n  if (_.isEmpty(relevantNodes)) {\n    return \"\";\n  }\n\n  // For now, we will do the simple thing of just taking the raw markdown from\n  // the start of the excerpt to the end.\n  var textLines = text.split(\"\\n\");\n  var start = relevantNodes[0].start_line - 1;\n  var stop = _.last(relevantNodes).end_line;\n  // XXX: There is a bug in commonmark that happens when processing the last\n  // node in the document. Here is the github issue:\n  // https://github.com/jgm/CommonMark/issues/276\n  // Remove this workaround when the issue is fixed.\n  if (stop === _.last(parsed.children).end_line) {\n    stop++;\n  }\n  var excerpt = textLines.slice(start, stop).join(\"\\n\");\n\n  // Strip the preceding and trailing new lines.\n  return excerpt.replace(/^\\n+|\\n+$/g, \"\");\n};\n\nclass SymlinkLoopChecker {\n  constructor(sourceRoot) {\n    this.sourceRoot = sourceRoot;\n    this._realSourceRoot = files.realpath(sourceRoot);\n    this._seenPaths = {};\n    this._cache = new Map();\n  }\n\n  // Avoids running realpath unless necessary\n  // since it is relatively slow on windows\n  _realpath = Profile('_realpath', function (relDir) {\n    const absPath = files.pathJoin(this._realSourceRoot, relDir);\n\n    if (files.lstat(absPath).isSymbolicLink()) {\n      const result = files.realpath(absPath);\n      this._cache.set(relDir, result);\n\n      return result;\n  }\n\n    let result;\n    const parentDir = files.pathDirname(relDir);\n    const parentEntry = this._cache.get(parentDir);\n    if (parentDir === '.') {\n      result = absPath;\n    } else if (parentEntry) {\n      result = files.pathJoin(parentEntry, files.pathBasename(relDir));\n    } else {\n      // The parent dir was never checked, which prevents us from\n      // skipping realpath\n      result = files.realpath(absPath);\n    }\n\n    this._cache.set(relDir, result);\n    return result;\n  })\n\n  check(relDir, quietly = true) {\n\n    try {\n      var realPath = this._realpath(relDir);\n    } catch (e) {\n      if (!e || e.code !== 'ELOOP') {\n        throw e;\n      }\n      // else leave realPath undefined\n    }\n\n    if (! realPath || _.has(this._seenPaths, realPath)) {\n      if (! quietly) {\n        buildmessage.error(\"Symlink cycle detected at \" + relDir);\n      }\n\n      return true;\n    }\n\n    this._seenPaths[realPath] = true;\n\n    return false;\n  }\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// PackageSource\n///////////////////////////////////////////////////////////////////////////////\n\nvar PackageSource = function () {\n  var self = this;\n\n  // The name of the package, or null for an app pseudo-package or\n  // collection. The package's exports will reside in Package.<name>.\n  // When it is null it is linked like an application instead of like\n  // a package.\n  self.name = null;\n\n  // The path relative to which all source file paths are interpreted\n  // in this package. Also used to compute the location of the\n  // package's .npm directory (npm shrinkwrap state).\n  self.sourceRoot = null;\n\n  // Path that will be prepended to the URLs of all resources emitted\n  // by this package (assuming they don't end up getting\n  // concatenated). For non-web targets, the only effect this will\n  // have is to change the actual on-disk paths of the files in the\n  // bundle, for those that care to open up the bundle and look (but\n  // it's still nice to get it right).\n  self.serveRoot = null;\n\n  // Package metadata. Keys are 'summary', 'git' and 'documentation'. Currently\n  // all of these are optional.\n  self.metadata = {};\n  self.docsExplicitlyProvided = false;\n\n  // Package version as a meteor-version string. Optional; not all packages\n  // (for example, the app) have versions.\n  // XXX when we have names, maybe we want to say that all packages\n  // with names have versions? certainly the reverse is true\n  self.version = null;\n  self.versionExplicitlyProvided = false;\n\n  // Available architectures of this package. Array of SourceArch.\n  self.architectures = [];\n\n  // The information necessary to build the plugins in this\n  // package. Map from plugin name to object with keys 'name', 'use',\n  // 'sources', and 'npmDependencies'.\n  self.pluginInfo = {};\n\n  // Analogous to watchSet in SourceArch but for plugins. At this\n  // stage will typically contain just 'package.js'.\n  self.pluginWatchSet = new watch.WatchSet;\n\n  // npm packages used by this package (on os.* architectures only).\n  // Map from npm package name to the required version of the package\n  // as a string.\n  self.npmDependencies = {};\n\n  // Files to be stripped from the installed NPM dependency tree. See the\n  // Npm.strip comment below for further usage information.\n  self.npmDiscards = null;\n\n  // Absolute path to a directory on disk that serves as a cache for\n  // the npm dependencies, so we don't have to fetch them on every\n  // build. Required not just if we have npmDependencies, but if we\n  // ever could have had them in the past.\n  self.npmCacheDirectory = null;\n\n  // cordova plugins used by this package (on os.* architectures only).\n  // Map from cordova plugin name to the required version of the package\n  // as a string.\n  self.cordovaDependencies = {};\n\n  // If this package has a corresponding test package (for example,\n  // underscore-test), defined in the same package.js file, store its value\n  // here.\n  self.testName = null;\n\n  // Test packages are dealt with differently in the linker (and not published\n  // to the catalog), so we need to keep track of them.\n  self.isTest = false;\n\n  // Some packages belong to a test framework and should never be bundled into\n  // production. A package with this flag should not be picked up by the bundler\n  // for production builds.\n  self.debugOnly = false;\n\n  // A package marked prodOnly is ONLY picked up by the bundler for production\n  // builds.\n  self.prodOnly = false;\n\n  // A package marked testOnly is ONLY picked up by the bundler as\n  // part of the `meteor test` command.\n  self.testOnly = false;\n\n  // If this is set, we will take the currently running git checkout and bundle\n  // the meteor tool from it inside this package as a tool. We will include\n  // built copies of all known isopackets.\n  self.includeTool = false;\n\n  // Is this a core package? Core packages don't record version files, because\n  // core packages are only ever run from checkout. For the preview release,\n  // core packages do not need to specify their versions at publication (since\n  // there isn't likely to be any exciting version skew yet), but we will\n  // specify the correct restrictions at 0.90.\n  // XXX: 0.90 package versions.\n  self.isCore = false;\n\n  // Flags for Atmosphere and developers to mark if deprecated packages\n  // and provide additional info.\n  self.deprecated = false;\n  self.deprecatedMessage = undefined;\n};\n\n\nObject.assign(PackageSource.prototype, {\n  // Make a dummy (empty) packageSource that contains nothing of interest.\n  // XXX: Do we need this\n  initEmpty: function (name) {\n    var self = this;\n    self.name = name;\n  },\n\n  // Programmatically initialize a PackageSource from scratch.\n  //\n  // Unlike user-facing methods of creating a package\n  // (initFromPackageDir, initFromAppDir) this does not implicitly add\n  // a dependency on the 'meteor' package. If you want such a\n  // dependency then you must add it yourself.\n  //\n  // If called inside a buildmessage job, it will keep going if things\n  // go wrong. Be sure to call jobHasMessages to see if it actually\n  // succeeded.\n  //\n  // The architecture is hardcoded to be \"os\".\n  //\n  // Note that this does not set a version on the package!\n  //\n  // Options:\n  // - sourceRoot (required if sources present)\n  // - serveRoot (required if sources present)\n  // - use\n  // - sources (array of paths or relPath/fileOptions objects), note that this\n  // doesn't support assets at this time. If you want to pass assets here, you\n  // should add a new option to this function called `assets`.\n  // - npmDependencies\n  // - cordovaDependencies\n  // - npmDir\n  // - localNodeModulesDirs\n  initFromOptions: function (name, options) {\n    var self = this;\n    self.name = name;\n\n    if (options.sources && ! _.isEmpty(options.sources) &&\n        (! options.sourceRoot || ! options.serveRoot)) {\n      throw new Error(\"When source files are given, sourceRoot and \" +\n                      \"serveRoot must be specified\");\n    }\n\n    // sourceRoot is a relative file system path, one slash identifies a root\n    // relative to some starting location\n    self.sourceRoot = options.sourceRoot || files.pathSep;\n    // serveRoot is actually a part of a url path, root here is a forward slash\n    self.serveRoot = options.serveRoot || '/';\n\n    utils.ensureOnlyValidVersions(options.npmDependencies, {forCordova: false});\n    self.npmDependencies = options.npmDependencies;\n\n    // If options.npmDir is a string, make sure it contains no colons.\n    self.npmCacheDirectory = _.isString(options.npmDir)\n      ? convertColonsInPath(options.npmDir)\n      : options.npmDir;\n\n    utils.ensureOnlyValidVersions(options.cordovaDependencies, {forCordova: true});\n    self.cordovaDependencies = options.cordovaDependencies;\n\n    const sources = options.sources.map((source) => {\n      if (typeof source === \"string\") {\n        return {\n          relPath: source\n        };\n      }\n\n      return source;\n    });\n\n    const sourceArch = new SourceArch(self, {\n      kind: options.kind,\n      arch: \"os\",\n      sourceRoot: self.sourceRoot,\n      uses: _.map(options.use, splitConstraint),\n      getFiles() {\n        // TODO We might want to call _findSources here, if we want plugins to\n        // be able to import compiled files that were not explicitly included in\n        // the sources array passed to Package.registerBuildPlugin.\n        return {\n          sources: sources\n        }\n      }\n    });\n\n    if (options.localNodeModulesDirs) {\n      Object.assign(sourceArch.localNodeModulesDirs,\n               options.localNodeModulesDirs);\n    }\n\n    self.architectures.push(sourceArch);\n\n    if (! self._checkCrossUnibuildVersionConstraints()) {\n      throw new Error(\"only one unibuild, so how can consistency check fail?\");\n    }\n  },\n\n  // Initialize a PackageSource from a package.js-style package directory. Uses\n  // the name field provided and the name/test fields in the package.js file to\n  // figre out if this is a test package (load from onTest) or a use package\n  // (load from onUse).\n  //\n  // name: name of the package.\n  // dir: location of directory on disk.\n  // options:\n  // - name: override the name of this package with a different name.\n  // - buildingIsopackets: true if this is being scanned in the process\n  //   of building isopackets\n  initFromPackageDir: Profile((dir, options) => {\n    return `PackageSource#initFromPackageDir for ${\n      options?.name || dir.split(files.pathSep).pop()\n    }`;\n  }, function (dir, options) {\n    var self = this;\n    buildmessage.assertInCapture();\n    var isPortable = true;\n    options = options || {};\n    var initFromPackageDirOptions = options;\n\n    // If we know what package we are initializing, we pass in a\n    // name. Otherwise, we are intializing the base package specified by 'name:'\n    // field in Package.Describe. In that case, it is clearly not a test\n    // package. (Though we could be initializing a specific package without it\n    // being a test, for a variety of reasons).\n    if (options.name) {\n      self.isTest = isTestName(options.name);\n      self.name = options.name;\n    }\n\n    // Give the package a default version. We do not set\n    // versionExplicitlyProvided unless the package configuration file actually\n    // sets a version.\n    self.version = \"0.0.0\";\n\n    // To make the transition to using README.md files in Isobuild easier, we\n    // initialize the documentation directory to README.md by default.\n    self.metadata.documentation = \"README.md\";\n\n    self.sourceRoot = dir;\n\n    // If we are running from checkout we may be looking at a core package. If\n    // we are, let's remember this for things like not recording version files.\n    if (files.inCheckout()) {\n      var packDir = files.pathJoin(files.getCurrentToolsDir(), 'packages');\n      if (files.pathDirname(self.sourceRoot) === packDir) {\n        self.isCore = true;\n      }\n    }\n    if (! files.exists(self.sourceRoot)) {\n      throw new Error(\"putative package directory \" + dir + \" doesn't exist?\");\n    }\n\n    const packageFileHashes = Object.create(null);\n    const packageJsPath = files.pathJoin(self.sourceRoot, 'package.js');\n    const packageJsCode = optimisticReadFile(packageJsPath);\n    packageFileHashes[packageJsPath] =\n      optimisticHashOrNull(packageJsPath);\n\n    const pkgJsonPath = files.pathJoin(self.sourceRoot, 'package.json');\n    const pkgJsonStat = optimisticStatOrNull(pkgJsonPath);\n    if (pkgJsonStat &&\n        pkgJsonStat.isFile()) {\n      packageFileHashes[pkgJsonPath] =\n        optimisticHashOrNull(pkgJsonPath);\n    }\n\n    function watchPackageFiles(watchSet) {\n      _.each(packageFileHashes, (hash, path) => {\n        watchSet.addFile(path, hash);\n      });\n    }\n\n    // Any package that depends on us needs to be rebuilt if our package.js file\n    // changes, because a change to package.js might add or remove a plugin,\n    // which could change a file from being handled by plugin vs treated as\n    // an asset.\n    watchPackageFiles(self.pluginWatchSet);\n\n    /**\n     * @global\n     * @name  Package\n     * @summary The Package object in package.js\n     * @namespace\n     * @locus package.js\n     */\n    const Package = new PackageNamespace(this);\n\n    /**\n     * @namespace Npm\n     * @global\n     * @summary The Npm object in package.js and package source files.\n     */\n    const Npm = new PackageNpm();\n\n    /**\n     * @namespace Cordova\n     * @global\n     * @summary The Cordova object in package.js.\n     */\n    const Cordova = new PackageCordova();\n\n    try {\n      files.runJavaScript(packageJsCode.toString('utf8'), {\n        filename: 'package.js',\n        symbols: { Package, Npm, Cordova }\n      });\n    } catch (e) {\n      buildmessage.exception(e);\n\n      // Could be a syntax error or an exception. Recover by\n      // continuing as if package.js is empty. (Pressing on with\n      // whatever handlers were registered before the exception turns\n      // out to feel pretty disconcerting -- definitely violates the\n      // principle of least surprise.) Leave the metadata if we have\n      // it, though.\n      Package._fileAndDepLoader = null;\n      self.pluginInfo = {};\n      Npm._dependencies = null;\n      Cordova._dependencies = null;\n    }\n\n    // In the past, we did not require a Package.Describe.name field. So, it is\n    // possible that we are initializing a package that doesn't use it and\n    // expects us to be implicit about it.\n    if (!self.name) {\n      // For backwards-compatibility, we will take the package name from the\n      // directory of the package. That was what we used to do: in fact, we used\n      // to only do that.\n      self.name = files.pathBasename(dir);\n    }\n\n    // Check to see if our name is valid.\n\n    try {\n      utils.validatePackageName(self.name);\n    } catch (e) {\n      if (!e.versionParserError) {\n        throw e;\n      }\n      buildmessage.error(e.message);\n      // recover by ignoring\n    }\n\n    // We want the \"debug mode\" to be a property of the *bundle* operation\n    // (turning a set of packages, including the app, into a star), not the\n    // *compile* operation (turning a package source into an isopack). This is\n    // so we don't have to publish two versions of each package. But we have no\n    // way to mark a file in an isopack as being the result of running a plugin\n    // from a debugOnly dependency, and so there is no way to tell which files\n    // to exclude in production mode from a published package. Eventually, we'll\n    // add such a flag to the isopack format, but until then we'll sidestep the\n    // issue by disallowing build plugins in debugOnly packages.\n    if ((self.debugOnly || self.prodOnly || self.testOnly) && !_.isEmpty(self.pluginInfo)) {\n      buildmessage.error(\n        \"can't register build plugins in debugOnly, prodOnly or testOnly packages\");\n      // recover by ignoring\n    }\n\n    // For this old-style, onUse/onTest/where-based package, figure\n    // out its dependencies by calling its on_xxx functions and seeing\n    // what it does.\n    //\n    // We have a simple strategy. Call its on_xxx handler with no\n    // 'where', which is what happens when the package is added\n    // directly to an app, and see what files it adds to the client\n    // and the server. When a package is used, include it in both the client\n    // and the server by default. This simple strategy doesn't capture even\n    // 10% of the complexity possible with onUse, onTest, and where, but\n    // probably is sufficient for virtually all packages that actually\n    // exist in the field, if not every single one. #OldStylePackageSupport\n\n    var api = new PackageAPI({\n      buildingIsopackets: !! initFromPackageDirOptions.buildingIsopackets\n    });\n\n    if (Package._fileAndDepLoader) {\n      try {\n        buildmessage.markBoundary(Package._fileAndDepLoader)(api);\n      } catch (e) {\n        console.log(e.stack); // XXX should we keep this here -- or do we want broken\n                              // packages to fail silently?\n        buildmessage.exception(e);\n\n        // Recover by ignoring all of the source files in the\n        // packages and any remaining handlers. It violates the\n        // principle of least surprise to half-run a handler\n        // and then continue.\n        api.files = {};\n        _.each(compiler.ALL_ARCHES, function (arch) {\n          api.files[arch] = {\n            sources: [],\n            assets: []\n          };\n        });\n\n        Package._fileAndDepLoader = null;\n        self.pluginInfo = {};\n        Npm._dependencies = null;\n        Cordova._dependencies = null;\n      }\n    }\n\n    // By the way, you can't depend on yourself.\n    var doNotDepOnSelf = function (dep) {\n      if (dep.package === self.name) {\n        buildmessage.error(\"Circular dependency found: \"\n                           + self.name +\n                           \" depends on itself.\\n\");\n      }\n    };\n    _.each(compiler.ALL_ARCHES, function (label) {\n      _.each(api.uses[label], doNotDepOnSelf);\n      _.each(api.implies[label], doNotDepOnSelf);\n    });\n\n    // Cause packages that use `prodOnly` to automatically depend on the\n    // `isobuild:prod-only` feature package, which will cause an error\n    // when a package using `prodOnly` is run by a version of the tool\n    // that doesn't support the feature.  The choice of 'os' architecture\n    // is arbitrary, as the version solver combines the dependencies of all\n    // arches.\n    if (self.prodOnly) {\n      api.uses['os'].push({\n        package: 'isobuild:prod-only', constraint: '1.0.0'\n      });\n    }\n\n    // If we have specified some release, then we should go through the\n    // dependencies and fill in the unspecified constraints with the versions in\n    // the releases (if possible).\n    if (!_.isEmpty(api.releaseRecords)) {\n\n      // Given a dependency object with keys package (the name of the package)\n      // and constraint (the version constraint), if the constraint is null,\n      // look in the packages field in the release record and fill in from\n      // there.\n      var setFromRel = function (dep) {\n        if (dep.constraint) {\n          return dep;\n        }\n        var newConstraint = [];\n        _.each(api.releaseRecords, function (releaseRecord) {\n          var packages = releaseRecord.packages;\n          if(_.has(packages, dep.package)) {\n            newConstraint.push(packages[dep.package]);\n          }\n        });\n        if (_.isEmpty(newConstraint)) {\n          return dep;\n        }\n        dep.constraint = _.reduce(newConstraint,\n          function(x, y) {\n            return x + \" || \" + y;\n          });\n        return dep;\n      };\n\n      // For all api.implies and api.uses, fill in the unspecified dependencies from the\n      // release.\n      _.each(compiler.ALL_ARCHES, function (label) {\n        api.uses[label] = _.map(api.uses[label], setFromRel);\n        api.implies[label] = _.map(api.implies[label], setFromRel);\n      });\n     };\n\n    // Make sure that if a dependency was specified in multiple\n    // unibuilds, the constraint is exactly the same.\n    if (! self._checkCrossUnibuildVersionConstraints()) {\n      // A build error was written. Recover by ignoring the\n      // fact that we have differing constraints.\n    }\n\n    // Save information about npm dependencies. To keep metadata\n    // loading inexpensive, we won't actually fetch them until build\n    // time.\n\n    // We used to put the cache directly in .npm, but in linker-land,\n    // the package's own NPM dependencies go in .npm/package and build\n    // plugin X's goes in .npm/plugin/X. Notably, the former is NOT an\n    // ancestor of the latter, so that a build plugin does NOT see the\n    // package's node_modules.  XXX maybe there should be separate NPM\n    // dirs for use vs test?\n    self.npmCacheDirectory =\n      files.pathResolve(files.pathJoin(self.sourceRoot, '.npm', 'package'));\n    self.npmDependencies = Npm._dependencies;\n    self.npmDiscards = Npm._discards;\n\n    self.cordovaDependencies = Cordova._dependencies;\n\n    // Create source architectures, one for the server and one for each web\n    // arch.\n    _.each(compiler.ALL_ARCHES, function (arch) {\n      // Everything depends on the package 'meteor', which sets up\n      // the basic environment) (except 'meteor' itself).\n      if (self.name !== \"meteor\" && !process.env.NO_METEOR_PACKAGE) {\n        // Don't add the dependency if one already exists. This allows the\n        // package to create an unordered dependency and override the one that\n        // we'd add here. This is necessary to resolve the circular dependency\n        // between meteor and underscore (underscore has an unordered\n        // dependency on meteor dating from when the .js extension handler was\n        // in the \"meteor\" package).\n        var alreadyDependsOnMeteor =\n              !! _.find(api.uses[arch], function (u) {\n                return u.package === \"meteor\";\n              });\n        if (! alreadyDependsOnMeteor) {\n          api.uses[arch].unshift({ package: \"meteor\" });\n        }\n      }\n\n      // Each unibuild has its own separate WatchSet. This is so that, eg, a test\n      // unibuild's dependencies doesn't end up getting merged into the\n      // pluginWatchSet of a package that uses it: only the use unibuild's\n      // dependencies need to go there!\n      var watchSet = new watch.WatchSet();\n      watchPackageFiles(watchSet);\n\n      self.architectures.push(new SourceArch(self, {\n        kind: \"main\",\n        arch: arch,\n        sourceRoot: self.sourceRoot,\n        uses: api.uses[arch],\n        implies: api.implies[arch],\n        getFiles(sourceProcessorSet, watchSet) {\n          const result = api.files[arch];\n          const relPathToSourceObj = Object.create(null);\n          const sources = result.sources;\n\n          // Files explicitly passed to api.addFiles remain at the\n          // beginning of api.files[arch].sources in their given order.\n          sources.forEach(source => {\n            relPathToSourceObj[source.relPath] = source;\n          });\n\n          self._findSources({\n            sourceProcessorSet,\n            watchSet,\n            sourceArch: this,\n            isApp: false\n          }).forEach(relPath => {\n            const source = relPathToSourceObj[relPath];\n\n            if (source) {\n              const fileOptions = source.fileOptions ||\n                (source.fileOptions = Object.create(null));\n\n              // Since this file was explicitly added with api.addFiles or\n              // api.mainModule, it should be loaded eagerly unless the\n              // caller specified a boolean fileOptions.lazy value.\n              if (typeof fileOptions.lazy !== \"boolean\") {\n                fileOptions.lazy = false;\n              }\n\n            } else {\n              const fileOptions = Object.create(null);\n\n              // Since this file was not explicitly added with\n              // api.addFiles, it should not be evaluated eagerly.\n              fileOptions.lazy = true;\n\n              sources.push(relPathToSourceObj[relPath] = {\n                relPath,\n                fileOptions,\n              });\n            }\n          });\n\n          return result;\n        },\n        declaredExports: api.exports[arch],\n        watchSet: watchSet\n      }));\n    });\n\n    // Serve root of the package.\n    self.serveRoot = files.pathJoin('/packages/', self.name);\n\n    // Name of the test.\n    if (Package._hasTests) {\n      self.testName = genTestName(self.name);\n    }\n  }),\n\n  _readAndWatchDirectory(relDir, watchSet, {include, exclude, names}) {\n    const options = {\n      absPath: files.pathJoin(this.sourceRoot, relDir),\n      include, exclude, names\n    };\n\n    const contents = watch.readDirectory(options);\n\n    if (watchSet) {\n      watchSet.addDirectory({\n        contents,\n        ...options\n      });\n    }\n\n    return contents.map(name => files.pathJoin(relDir, name));\n  },\n\n  // Initialize a package from an application directory (has .meteor/packages).\n  initFromAppDir: Profile(\"initFromAppDir\", function (projectContext, ignoreFiles) {\n    var self = this;\n    var appDir = projectContext.projectDir;\n    self.name = null;\n    self.sourceRoot = appDir;\n    self.serveRoot = '/';\n\n    // Determine used packages. Note that these are the same for all arches,\n    // because there's no way to specify otherwise in .meteor/packages.\n    var uses = [];\n    projectContext.projectConstraintsFile.eachConstraint(function (constraint) {\n      uses.push({ package: constraint.package,\n                  constraint: constraint.constraintString });\n    });\n\n    const projectWatchSet = projectContext.getProjectWatchSet();\n\n    const mainModulesByArch =\n      projectContext.meteorConfig.getMainModulesByArch();\n\n    const testModulesByArch =\n      projectContext.meteorConfig.getTestModulesByArch();\n\n    const nodeModulesToRecompileByArch =\n      projectContext.meteorConfig.getNodeModulesToRecompileByArch();\n\n    projectWatchSet.merge(projectContext.meteorConfig.watchSet);\n\n    _.each(compiler.ALL_ARCHES, function (arch) {\n      // We don't need to build a Cordova SourceArch if there are no Cordova\n      // platforms.\n      if (arch === 'web.cordova' &&\n          _.isEmpty(projectContext.platformList.getCordovaPlatforms())) {\n        return;\n      }\n\n      const mainModule = projectContext.meteorConfig\n        .getMainModule(arch, mainModulesByArch);\n\n      const testModule = projectContext.meteorConfig\n        .getTestModule(arch, testModulesByArch);\n\n      const nodeModulesToRecompile = projectContext.meteorConfig\n        .getNodeModulesToRecompile(arch, nodeModulesToRecompileByArch);\n\n      // XXX what about /web.browser/* etc, these directories could also\n      // be for specific client targets.\n\n      // Create unibuild\n      var sourceArch = new SourceArch(self, {\n        kind: 'app',\n        arch: arch,\n        sourceRoot: self.sourceRoot,\n        uses: uses,\n        getFiles(sourceProcessorSet, watchSet) {\n          sourceProcessorSet.watchSet = watchSet;\n\n          const findOptions = {\n            sourceProcessorSet,\n            watchSet,\n            sourceArch: this,\n            ignoreFiles,\n            isApp: true,\n            testModule,\n            nodeModulesToRecompile,\n          };\n\n          // If this architecture has a mainModule defined in\n          // package.json, it's an error if _findSources doesn't find that\n          // module. If no mainModule is defined, anything goes.\n          let missingMainModule = !! mainModule;\n\n          const sources = self._findSources(findOptions).sort(\n            loadOrderSort(sourceProcessorSet, arch)\n          ).map(relPath => {\n            if (relPath === mainModule) {\n              missingMainModule = false;\n            }\n\n            const fileOptions = self._inferAppFileOptions(relPath, {\n              arch,\n              mainModule,\n              testModule,\n            });\n\n            return {\n              relPath,\n              fileOptions,\n            };\n          });\n\n          if (missingMainModule) {\n            buildmessage.error([\n              \"Could not find mainModule for '\" + arch + \"' architecture: \" + mainModule,\n              'Check the \"meteor\" section of your package.json file?'\n            ].join(\"\\n\"));\n          }\n\n          const assets = self._findAssets(findOptions);\n\n          return {\n            sources,\n            assets,\n          };\n        }\n      });\n\n      const origAppDir = projectContext.getOriginalAppDirForTestPackages();\n\n      const origNodeModulesDir = origAppDir &&\n        files.pathJoin(origAppDir, \"node_modules\");\n\n      const origNodeModulesStat = origNodeModulesDir &&\n        files.statOrNull(origNodeModulesDir);\n\n      if (origNodeModulesStat &&\n          origNodeModulesStat.isDirectory()) {\n        sourceArch.localNodeModulesDirs[\"node_modules\"] = {\n          // Override these properties when calling\n          // addNodeModulesDirectory in compileUnibuild.\n          sourceRoot: origAppDir,\n          sourcePath: origNodeModulesDir,\n          local: false,\n        };\n      }\n\n      self.architectures.push(sourceArch);\n\n      // sourceArch's WatchSet should include all the project metadata files\n      // read by the ProjectContext.\n      sourceArch.watchSet.merge(projectWatchSet);\n    });\n\n    if (! self._checkCrossUnibuildVersionConstraints()) {\n      // should never happen since we created the unibuilds from\n      // .meteor/packages, which doesn't have a way to express\n      // different constraints for different unibuilds\n      throw new Error(\"conflicting constraints in a package?\");\n    }\n  }),\n\n  _inferAppFileOptions(relPath, {\n    arch,\n    mainModule,\n    testModule,\n  }) {\n    const fileOptions = Object.create(null);\n    const {\n      isTest = false,\n      isAppTest = false,\n    } = global.testCommandMetadata || {};\n\n    let isTestFile = false;\n    if (isTest || isAppTest) {\n      if (typeof testModule === \"undefined\") {\n        // If a testModule was not configured in the \"meteor\" section of\n        // package.json for this architecture, then isTestFilePath should\n        // determine whether this file loads eagerly.\n        isTestFile = isTestFilePath(relPath);\n      } else if (relPath === testModule) {\n        // If testModule is a string === relPath, then it is the entry\n        // point for tests, and should be loaded eagerly.\n        isTestFile = true;\n        fileOptions.lazy = false;\n        fileOptions.testModule = true;\n      } else {\n        // If testModule was defined but !== relPath, this file should not\n        // be loaded eagerly during tests. Setting fileOptions.testModule\n        // to false indicates that a testModule was configured, but this\n        // was not it. ResourceSlot#_isLazy (in compiler-plugin.js) will\n        // use this information (together with fileOptions.mainModule) to\n        // make the final call as to whether this file should be loaded\n        // eagerly or lazily.\n        isTestFile = false;\n        fileOptions.testModule = false;\n      }\n    }\n\n    // If running in test mode (`meteor test`), all files other than\n    // test files should be loaded lazily.\n    if (isTest && ! isTestFile) {\n      fileOptions.lazy = true;\n      // Ignore any meteor.mainModule that was specified, since we're\n      // running `meteor test` without the --full-app option.\n      mainModule = void 0;\n    }\n\n    const dirs = files.pathDirname(relPath).split(files.pathSep);\n\n    for (var i = 0; i < dirs.length; ++i) {\n      let dir = dirs[i];\n\n      if (dir === \"node_modules\") {\n        fileOptions.lazy = true;\n\n        // We used to disable transpilation for modules within node_modules,\n        // mostly for build performance reasons, but now that we have a lazy\n        // compilation system, we no longer need to worry about build times\n        // for unused modules, which unlocks opportunities such as compiling\n        // ECMAScript import/export syntax in npm packages.\n        // fileOptions.transpile = false;\n\n        // Return immediately so that we don't apply special meanings to\n        // client or server directories inside node_modules directories.\n        return fileOptions;\n      }\n\n      // Files in `imports/` and `tests/` directories should be lazily\n      // loaded *apart* from tests.\n      if ((dir === \"imports\" || dir === \"tests\") && ! isTestFile) {\n        fileOptions.lazy = true;\n      }\n\n      // If the file is restricted to the opposite architecture, make sure\n      // it is not evaluated eagerly.\n      if (archinfo.matches(arch, \"os\")) {\n        if (dir === \"client\") {\n          fileOptions.lazy = true;\n        }\n      } else if (dir === \"server\") {\n        fileOptions.lazy = true;\n      }\n\n      // Special case: in app code on the client, JavaScript files in a\n      // `client/compatibility` directory don't get wrapped in a closure.\n      if (i > 0 &&\n          dirs[i - 1] === \"client\" &&\n          dir === \"compatibility\" &&\n          archinfo.matches(arch, \"web\") &&\n          relPath.endsWith(\".js\")) {\n        fileOptions.bare = true;\n      }\n    }\n\n    if (typeof mainModule !== \"undefined\") {\n      // Note: if mainModule === false, no JavaScript modules will be\n      // loaded eagerly unless explicitly added with !fileOptions.lazy by\n      // a compiler plugin. This can be useful for building an app that\n      // does not run any application JS on the client (or the server). Of\n      // course, Meteor packages may still run JS on startup, but they\n      // have their own rules for lazy/eager loading of modules.\n      if (relPath === mainModule) {\n        fileOptions.lazy = false;\n        fileOptions.mainModule = true;\n      } else {\n        // Used in ResourceSlot#_isLazy (in compiler-plugin.js) to make a\n        // final determination of whether the file should be lazy.\n        fileOptions.mainModule = false;\n      }\n    }\n\n    return fileOptions;\n  },\n\n  // This cache survives for the duration of the process, and stores the\n  // complete list of source files for directories within node_modules.\n  _findSourcesCache: Object.create(null),\n\n  _findSources: Profile(({ sourceArch }) => `PackageSource#_findSources for ${sourceArch.arch}`, function ({\n    sourceProcessorSet,\n    watchSet,\n    isApp,\n    sourceArch,\n    testModule,\n    nodeModulesToRecompile = new Set,\n    loopChecker = new SymlinkLoopChecker(this.sourceRoot),\n    ignoreFiles = []\n  }) {\n    const self = this;\n    const arch = sourceArch.arch;\n    const isWeb = archinfo.matches(arch, \"web\");\n    const sourceReadOptions =\n      sourceProcessorSet.appReadDirectoryOptions(arch);\n\n    // Adding, removing, or modifying a .meteorignore file should trigger\n    // a rebuild with the new rules applied.\n    sourceReadOptions.names.push(\".meteorignore\");\n\n    // Ignore files starting with dot (unless they are explicitly in\n    // sourceReadOptions.names, e.g. .meteorignore, added above).\n    sourceReadOptions.exclude.push(/^\\./);\n\n    // Ignore the usual ignorable files.\n    sourceReadOptions.exclude.push(...ignoreFiles);\n\n    // Read top-level source files, excluding control files that were not\n    // explicitly included.\n    const controlFiles = ['mobile-config.js'];\n\n    if (! isApp) {\n      controlFiles.push('package.js');\n    }\n\n    const anyLevelExcludes = [];\n\n    if (testModule || !isApp) {\n      // If we have a meteor.testModule from package.json, then we don't\n      // need to exclude tests/ directories or *.tests.js files from the\n      // search, because we trust meteor.testModule to identify a single\n      // test entry point. Likewise, in packages (!isApp), test files are\n      // added explicitly, and thus do not need to be excluded here.\n    } else {\n      anyLevelExcludes.push(/^tests\\/$/);\n\n      const {\n        isTest = false,\n        isAppTest = false,\n      } = global.testCommandMetadata || {};\n\n      if (isTest || isAppTest) {\n        // If we're running `meteor test` without the --full-app option,\n        // ignore app-test-only files like *.app-tests.js.\n        if (! isAppTest) {\n          sourceReadOptions.exclude.push(\n            ...APP_TEST_FILENAME_REGEXPS,\n          );\n        }\n\n        // If we're running `meteor test` with the --full-app option,\n        // ignore non-app-test files like *.tests.js. The wisdom of this\n        // behavior is debatable, since you might want to run non-app\n        // tests even when you're using the --full-app option, but it's\n        // legacy behavior at this point, and it doesn't matter if you're\n        // using meteor.testModule anyway (recommended).\n        if (! isTest) {\n          sourceReadOptions.exclude.push(\n            ...TEST_FILENAME_REGEXPS,\n          );\n        }\n\n      } else {\n        // If we're not running `meteor test` (and meteor.testModule is\n        // not defined in package.json), ignore all test files.\n        sourceReadOptions.exclude.push(\n          ...APP_TEST_FILENAME_REGEXPS,\n          ...TEST_FILENAME_REGEXPS,\n        );\n      }\n    }\n\n    if (isApp) {\n      // In the app, server/ directories are ignored by client builds, and\n      // client/ directories are ignored by server builds. In packages,\n      // these directories should not matter (#10393).\n      anyLevelExcludes.push(\n        archinfo.matches(arch, \"os\")\n          ? /^client\\/$/\n          : /^server\\/$/\n      );\n    }\n\n    anyLevelExcludes.push(\n      ...sourceReadOptions.exclude,\n    );\n\n    const topLevelExcludes = isApp ? [\n      ...anyLevelExcludes,\n      /^packages\\/$/,\n      /^programs\\/$/,\n      /^public\\/$/, /^private\\/$/,\n      /^cordova-build-override\\/$/,\n      /^acceptance-tests\\/$/,\n    ] : anyLevelExcludes;\n\n    const nodeModulesReadOptions = {\n      ...sourceReadOptions,\n      // When we're in a node_modules directory, we can avoid collecting\n      // .js and .json files, because (unlike .less or .coffee files) they\n      // are allowed to be imported later by the ImportScanner, as they do\n      // not require custom processing by compiler plugins.\n      exclude: sourceReadOptions.exclude.concat(/\\.js(on)?$/i),\n    };\n\n    const baseCacheKey = JSON.stringify({\n      isApp,\n      sourceRoot: self.sourceRoot,\n      excludes: anyLevelExcludes,\n      names: sourceReadOptions.names,\n      include: sourceReadOptions.include,\n      // stringify does not work on Set\n      nodeModulesToRecompile: [...nodeModulesToRecompile],\n    }, (key, value) => {\n      if (_.isRegExp(value)) {\n        return [value.source, value.flags];\n      }\n      return value;\n    });\n\n    function makeCacheKey(dir) {\n      return baseCacheKey + \"\\0\" + dir;\n    }\n\n    const dotMeteorIgnoreFiles = Object.create(null);\n\n    function removeIgnoredFilesFrom(array) {\n      Object.keys(dotMeteorIgnoreFiles).forEach(ignoreDir => {\n        const ignore = dotMeteorIgnoreFiles[ignoreDir];\n        let target = 0;\n\n        array.forEach(item => {\n          let relPath = files.pathRelative(ignoreDir, item);\n\n          if (! relPath.startsWith(\"..\")) {\n            if (item.endsWith(\"/\")) {\n              // The trailing slash is discarded by files.pathRelative.\n              relPath += \"/\";\n            }\n\n            if (ignore.ignores(relPath)) {\n              return;\n            }\n          }\n\n          array[target++] = item;\n        });\n\n        array.length = target;\n      });\n\n      return array;\n    }\n\n    function find(dir, depth, { inNodeModules = false, cache = false } = {}) {\n      // Remove trailing slash.\n      dir = dir.replace(/\\/$/, \"\");\n\n      // If we're in a node_modules directory, cache the results of the\n      // find function for the duration of the process.\n      let cacheKey = inNodeModules && cache && makeCacheKey(dir);\n      if (cacheKey &&\n          cacheKey in self._findSourcesCache) {\n        return self._findSourcesCache[cacheKey];\n      }\n\n      if (loopChecker.check(dir)) {\n        // Pretend we found no files.\n        return [];\n      }\n\n      const absDir = files.pathJoin(self.sourceRoot, dir);\n      if (! inNodeModules) {\n        const ignore = optimisticReadMeteorIgnore(absDir);\n        if (ignore) {\n          dotMeteorIgnoreFiles[dir] = ignore;\n        }\n      }\n\n      let readOptions = sourceReadOptions;\n      if (inNodeModules) {\n        // This is an array because (in some rare cases) an npm package\n        // may have nested package.json files with additional properties.\n        const pkgJsonArray = optimisticLookupPackageJsonArray(self.sourceRoot, dir);\n\n        // If a package.json file with a \"name\" property is found, it will\n        // always be the first in the array.\n        const pkgJson = pkgJsonArray[0];\n\n        if (pkgJson && pkgJson.name &&\n            nodeModulesToRecompile.has(pkgJson.name)) {\n          // Avoid caching node_modules code recompiled by Meteor.\n          cacheKey = false;\n        } else {\n          readOptions = nodeModulesReadOptions;\n        }\n      }\n\n      const sources = _.difference(\n        self._readAndWatchDirectory(dir, inNodeModules ? null : watchSet, readOptions),\n        depth > 0 ? [] : controlFiles\n      );\n\n      const subdirectories = self._readAndWatchDirectory(\n        dir,\n        inNodeModules ? null : watchSet,\n        {\n          include: [/\\/$/],\n          exclude: depth > 0\n          ? anyLevelExcludes\n          : topLevelExcludes\n      });\n\n      removeIgnoredFilesFrom(sources);\n      removeIgnoredFilesFrom(subdirectories);\n\n      let nodeModulesDir;\n\n      subdirectories.forEach(subdir => {\n        if (/(^|\\/)node_modules\\/$/.test(subdir)) {\n          // Defer handling node_modules until after we handle all other\n          // subdirectories, so that we know whether we need to descend\n          // further. If sources is still empty after we handle everything\n          // else in dir, then nothing in this node_modules subdir can be\n          // imported by anthing outside of it, so we can ignore it.\n          nodeModulesDir = subdir;\n\n          // A \"local\" node_modules directory is one that's managed by the\n          // application developer using npm, rather than by Meteor using\n          // Npm.depends, which is available only in Meteor packages, and\n          // installs its dependencies into .npm/*/node_modules. Local\n          // node_modules directories may contain other nested node_modules\n          // directories, but we care about recording only the top-level\n          // node_modules directories here (hence !inNodeModules).\n          if (!inNodeModules && (isApp || !subdir.startsWith(\".npm/\"))) {\n            sourceArch.localNodeModulesDirs[subdir] = true;\n          }\n\n        } else {\n          sources.push(...find(subdir, depth + 1, { inNodeModules, cache: !inNodeModules }));\n        }\n      });\n\n      if (nodeModulesDir && (!inNodeModules || sources.length > 0)) {\n        // If we found a node_modules subdirectory above, and either we\n        // are not already inside another node_modules directory or we\n        // found source files elsewhere in this directory or its other\n        // subdirectories, continue searching this node_modules directory,\n        // so that any non-.js(on) files it contains can be imported by\n        // the app (#6037).\n        sources.push(...find(nodeModulesDir, depth + 1, { inNodeModules: true, cache: !inNodeModules}));\n      }\n\n      delete dotMeteorIgnoreFiles[dir];\n\n      if (cacheKey) {\n        self._findSourcesCache[cacheKey] = sources;\n      }\n\n      return sources;\n    }\n\n    return files.withCache(() => find(\"\", 0, false));\n  }),\n\n  _findAssets({\n    sourceProcessorSet,\n    watchSet,\n    isApp,\n    sourceArch,\n    loopChecker = new SymlinkLoopChecker(this.sourceRoot),\n    ignoreFiles = [],\n  }) {\n    // Now look for assets for this unibuild.\n    const arch = sourceArch.arch;\n    const assetDir = archinfo.matches(arch, \"web\") ? \"public/\" : \"private/\";\n    var assetDirs = this._readAndWatchDirectory('', watchSet, {\n      names: [assetDir]\n    });\n\n    const assets = [];\n\n    if (!_.isEmpty(assetDirs)) {\n      if (!_.isEqual(assetDirs, [assetDir])) {\n        throw new Error(\"Surprising assetDirs: \" + JSON.stringify(assetDirs));\n      }\n\n      while (!_.isEmpty(assetDirs)) {\n        var dir = assetDirs.shift();\n        // remove trailing slash\n        dir = dir.substr(0, dir.length - 1);\n\n        if (loopChecker.check(dir)) {\n          // pretend we found no files\n          return [];\n        }\n\n        // Find asset files in this directory.\n        var assetsAndSubdirs = this._readAndWatchDirectory(dir, watchSet, {\n          include: [/.?/],\n          // we DO look under dot directories here\n          exclude: ignoreFiles\n        });\n\n        _.each(assetsAndSubdirs, function (item) {\n          if (item[item.length - 1] === '/') {\n            // Recurse on this directory.\n            assetDirs.push(item);\n          } else {\n            // This file is an asset. Make sure filenames are Unicode\n            // normalized.\n            assets.push({\n              relPath: item.normalize('NFC')\n            });\n          }\n        });\n      }\n    }\n\n    return assets;\n  },\n\n  // True if the package defines any plugins.\n  containsPlugins: function () {\n    var self = this;\n    return ! _.isEmpty(self.pluginInfo);\n  },\n\n  // Return dependency metadata for all unibuilds, in the format needed\n  // by the package catalog.\n  //\n  // This *DOES* include isobuild:* pseudo-packages!\n  //\n  // Options:\n  // - logError: if true, if something goes wrong, log a buildmessage\n  //   and return null rather than throwing an exception.\n  // - skipWeak: omit weak dependencies\n  // - skipUnordered: omit unordered dependencies\n  getDependencyMetadata: function (options) {\n    var self = this;\n    options = options || {};\n    var ret = self._computeDependencyMetadata(options);\n    if (! ret) {\n      if (options.logError) {\n        return null;\n      } else {\n        throw new Error(\"inconsistent dependency constraint across unibuilds?\");\n      }\n    }\n    return ret;\n  },\n\n  // Returns a list of package names which should be loaded before building this\n  // package. This is all the packages that we directly depend on in a unibuild\n  // or from a plugin.\n  //\n  // (It's possible that we could do something slightly fancier where we only\n  // need to load those dependencies (including implied dependencies) which we\n  // know contain plugins first, plus the transitive closure of all the packages\n  // we depend on which contain a plugin. This seems good enough, though.)\n  //\n  // Note that this method filters out isobuild:* pseudo-packages, so it is NOT\n  // to be used to create input to Version Solver (see\n  // _computeDependencyMetadata for that).\n  //\n  // Note also that \"load\" here specifically means \"load into the IsopackCache\n  // at build time\", not \"load into a running Meteor app at run\n  // time\". Specifically, weak constraints do create a run-time load order\n  // dependency (if the package is in the app at all) but they do not create a\n  // build-time IsopackCache load order dependency (because weak dependencies do\n  // not provide plugins).\n  getPackagesToLoadFirst: function (packageMap) {\n    var self = this;\n    var packages = {};\n    var processUse = function (use) {\n      // We don't have to build weak or unordered deps first (eg they can't\n      // contribute to a plugin).\n      if (use.weak || use.unordered) {\n        return;\n      }\n      // Only include real packages, not isobuild:* pseudo-packages.\n      if (compiler.isIsobuildFeaturePackage(use.package)) {\n        return;\n      }\n\n      var packageInfo = packageMap.getInfo(use.package);\n      if (! packageInfo) {\n        throw Error(\"Depending on unknown package \" + use.package);\n      }\n      packages[use.package] = true;\n    };\n\n    _.each(self.architectures, function (arch) {\n      // We need to iterate over both uses and implies, since implied packages\n      // also constitute dependencies. We don't have to include the dependencies\n      // of implied packages directly here, since their own\n      // getPackagesToLoadFirst will include those.\n      _.each(arch.uses, processUse);\n      _.each(arch.implies, processUse);\n    });\n\n    _.each(self.pluginInfo, function (info) {\n      // info.use is currently just an array of strings, and there's\n      // no way to specify weak/unordered. Much like an app.\n      _.each(info.use, function (spec) {\n        var parsedSpec = splitConstraint(spec);\n        if (! compiler.isIsobuildFeaturePackage(parsedSpec.package)) {\n          packages[parsedSpec.package] = true;\n        }\n      });\n    });\n    return Object.keys(packages);\n  },\n\n  // Returns an array of objects, representing this package's public\n  // exports. Each object has the following keys:\n  //  - name: export name (ex: \"Accounts\")\n  //  - arch: an array of strings representing architectures for which this\n  //    export is declared.\n  //\n  // This ignores testOnly exports.\n  getExports: function () {\n    var self = this;\n    var ret = {};\n    // Go over all of the architectures, and aggregate the exports together.\n    _.each(self.architectures, function (arch) {\n      _.each(arch.declaredExports, function (exp) {\n        // Skip testOnly exports -- the flag is intended for use in testing\n        // only, so it is not of any interest outside this package.\n        if (exp.testOnly) {\n          return;\n        }\n        // Add the export to the export map.\n        if (! _.has(ret, exp.name)) {\n          ret[exp.name] = [arch.arch];\n        } else {\n          ret[exp.name].push(arch.arch);\n        }\n     });\n    });\n    return _.map(ret, function (arches, name) {\n      return { name: name, architectures: arches };\n    });\n   },\n\n  // Processes the documentation provided in Package.describe. Returns an object\n  // with the following keys:\n  //   - path: full filepath to the Readme file\n  //   - excerpt: the subsection between the first and second heading of the\n  //     Readme, to be used as a longform package description.\n  //   - hash: hash of the full text of this Readme, or \"\" if the Readme is\n  //     blank.\n  //\n  // Returns null if the documentation is marked as null, or throws a\n  // buildmessage error if the documentation could not be read.\n  //\n  // This function reads and performs string operations on a (potentially) long\n  // file. We do not call it unless we actually need this information.\n  processReadme: function () {\n    var self = this;\n    buildmessage.assertInJob();\n    if (! self.metadata.documentation) {\n      return null;\n    }\n\n    // To ensure atomicity, we want to copy the README to a temporary file.\n    var ret = {};\n    ret.path =\n      files.pathJoin(self.sourceRoot, self.metadata.documentation);\n    // Read in the text of the Readme.\n    try {\n      var fullReadme = files.readFile(ret.path);\n    } catch (err) {\n      var errorMessage = \"\";\n      if (err.code === \"ENOENT\") {\n        // This is the most likely and common case, especially when we are\n        // inferring the docs as a default value.\n        errorMessage = \"Documentation not found: \" + self.metadata.documentation;\n      } else {\n        // This is weird, and we don't usually protect the user from errors like\n        // this, but maybe we should.\n        errorMessage =\n          \"Documentation couldn't be read: \" + self.metadata.documentation + \" \";\n        errorMessage += \"(Error: \" + err.message + \")\";\n      }\n\n      // The user might not understand that we are automatically inferring\n      // README.md as the docs! If they want to avoid pushing anything, explain\n      // how to do that.\n      if (! self.docsExplicitlyProvided) {\n        errorMessage += \"\\n\" +\n          \"If you don't want to publish any documentation, \" +\n          \"please set 'documentation: null' in Package.describe\";\n      }\n      buildmessage.error(errorMessage);\n      // Recover by returning null\n      return null;\n    }\n\n    var text = fullReadme.toString();\n    return {\n      contents: text,\n      hash: utils.sha256(text),\n      excerpt: getExcerptFromReadme(text)\n    };\n  },\n\n  // If dependencies aren't consistent across unibuilds, return false and\n  // also log a buildmessage error if inside a buildmessage job. Else\n  // return true.\n  // XXX: Check that this is used when refactoring is done.\n  _checkCrossUnibuildVersionConstraints: function () {\n    var self = this;\n    return !! self._computeDependencyMetadata({ logError: true });\n  },\n\n  // Compute the return value for getDependencyMetadata, or return\n  // null if there is a dependency that doesn't have the same\n  // constraint across all unibuilds (and, if logError is true, log a\n  // buildmessage error).\n  //\n  // This *DOES* include isobuild:* pseudo-packages!\n  //\n  // For options, see getDependencyMetadata.\n  _computeDependencyMetadata: function (options) {\n    var self = this;\n    options = options || {};\n\n    var dependencies = {};\n    var allConstraints = {}; // for error reporting. package name to array\n    var failed = false;\n\n    _.each(self.architectures, function (arch) {\n      // We need to iterate over both uses and implies, since implied packages\n      // also constitute dependencies.\n      var processUse = function (implied, use) {\n        // We can't really have a weak implies (what does that even mean?) but\n        // we check for that elsewhere.\n        if ((use.weak && options.skipWeak) ||\n            (use.unordered && options.skipUnordered)) {\n          return;\n        }\n\n        if (!_.has(dependencies, use.package)) {\n          dependencies[use.package] = {\n            constraint: null,\n            references: []\n          };\n          allConstraints[use.package] = [];\n        }\n        var d = dependencies[use.package];\n\n        if (use.constraint) {\n          allConstraints[use.package].push(use.constraint);\n\n          if (d.constraint === null) {\n            d.constraint = use.constraint;\n          } else if (d.constraint !== use.constraint) {\n            failed = true;\n          }\n        }\n\n        var reference = {\n          arch: archinfo.withoutSpecificOs(arch.arch)\n        };\n        if (use.weak) {\n          reference.weak = true;\n        }\n        if (use.unordered) {\n          reference.unordered = true;\n        }\n        if (implied) {\n          reference.implied = true;\n        }\n        d.references.push(reference);\n      };\n      _.each(arch.uses, _.partial(processUse, false));\n      _.each(arch.implies, _.partial(processUse, true));\n    });\n\n    _.each(self.pluginInfo, function (info) {\n      _.each(info.use, function (spec) {\n        var parsedSpec = splitConstraint(spec);\n        if (!_.has(dependencies, parsedSpec.package)) {\n          dependencies[parsedSpec.package] = {\n            constraint: null,\n            references: []\n          };\n          allConstraints[parsedSpec.package] = [];\n        }\n        var d = dependencies[parsedSpec.package];\n\n        if (parsedSpec.constraint) {\n          allConstraints[parsedSpec.package].push(parsedSpec.constraint);\n          if (d.constraint === null) {\n            d.constraint = parsedSpec.constraint;\n          } else if (d.constraint !== parsedSpec.constraint) {\n            failed = true;\n          }\n        }\n        d.references.push({arch: 'plugin'});\n      });\n    });\n\n    if (failed && options.logError) {\n      _.each(allConstraints, function (constraints, name) {\n        constraints = _.uniq(constraints);\n        if (constraints.length > 1) {\n          buildmessage.error(\n            \"The version constraint for a dependency must be the same \" +\n              \"at every place it is mentioned in a package. \" +\n              \"'\" + name + \"' is constrained both as \"  +\n              constraints.join(' and ') + \". Change them to match.\");\n          // recover by returning false (the caller had better detect\n          // this and use its own recovery logic)\n        }\n      });\n    }\n\n    return failed ? null : dependencies;\n  },\n\n  displayName() {\n    return this.name === null ? 'the app' : this.name;\n  }\n});\n\nmodule.exports = PackageSource;\n"],"file":"tools/isobuild/package-source.js.map"}