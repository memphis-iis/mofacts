{"version":3,"sources":["/tools/isobuild/compiler.js"],"names":["_defineProperty","module1","link","default","v","_objectSpread","export","getActivePluginPackages","isIsobuildFeaturePackage","SourceProcessorSet","NodeModulesDirectory","buildJsImage","optimisticReadFile","optimisticHashOrNull","_","require","archinfo","buildmessage","isopack","meteorNpm","watch","Console","files","colonConverter","linterPluginModule","compileStepModule","Profile","compiler","exports","BUILT_BY","ALL_ARCHES","compile","packageSource","options","name","assertInCapture","packageMap","isopackCache","includeCordovaUnibuild","pluginWatchSet","clone","plugins","pluginProviderPackageNames","each","pluginInfo","info","enterJob","title","rootPath","sourceRoot","buildResult","use","sources","serveRoot","npmDependencies","npmDir","pathResolve","pathJoin","convert","merge","watchSet","jobHasMessages","usedPackageNames","packageName","has","image","arch","nodeModulesPath","npmCacheDirectory","updateDependencies","isobuildFeatures","architectures","forEach","sourceArch","uses","weak","package","indexOf","push","uniq","isopk","Isopack","initFromOptions","metadata","version","isTest","cordovaDependencies","npmDiscards","includeTool","debugOnly","prodOnly","testOnly","pluginCacheDir","architecture","withCache","unibuildResult","compileUnibuild","Object","assign","includePluginProviderPackageMap","setPluginProviderPackageMap","makeSubsetMap","keys","lint","assertInJob","warnings","_MessageSet","linted","unibuildWarnings","lintUnibuild","getMinifiers","minifiers","activePluginPackages","otherPkg","ensurePluginsInitialized","sourceProcessors","minifier","allSourceProcessors","sp","ext","filter","plugin","extensions","includes","length","packages","map","p","error","join","getLinterSourceProcessorSet","sourceProcessorSet","displayName","allowConflicts","linter","isEmpty","unibuild","find","unibuilds","matches","Error","getFiles","linterMessages","capture","runLinters","inputSourceArch","isApp","pkg","resources","pluginProviderWatchSet","linterSourceProcessorSet","hardcodeJs","sourceProcessorFiles","assets","nodeModulesDirectories","create","addNodeModulesDirectory","nmd","sourcePath","localNodeModulesDirs","dir","local","isObject","prototype","shrinkwrapPath","replace","readAndWatchFile","addAsset","contents","relPath","hash","type","data","path","servePath","values","asset","absPath","addFile","source","fileOptions","filename","pathBasename","classification","classifyFilename","linterClassification","file","isNonLegacySource","addPotentiallyUnusedFile","nudge","match","SourceResource","extension","usesDefaultSourceProcessor","compileStep","makeCompileStep","handler","markBoundary","legacyHandler","time","e","message","exception","declaredExports","symbol","pick","isPortable","process","env","METEOR_FORCE_PORTABLE","rebuildIfNonPortable","METEOR_ALLOW_NON_PORTABLE","every","host","nodeModulesDirsOrUndefined","undefined","addUnibuild","kind","implies","whichArch","globalImports","eachUsedUnibuild","dependencies","skipUnordered","skipDebugOnly","skipProdOnly","skipTestOnly","sourceItemsForLinter","sourceItem","readAndWatchFileWithHash","wrappedSource","sourceProcessor","hasOwnProperty","id","sourcesToLint","LintingFile","markedLinter","userPlugin","processFilesForPackage","archToString","Promise","await","globals","callback","acceptableWeakPackages","processedUnibuildId","usesToProcess","unordered","shift","usedPackage","getIsopack","getUnibuildAtArch","implied","startsWith","constructor","_dataUsed","_hash","_data"],"mappings":"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","sourcesContent":["var _ = require('underscore');\n\nvar archinfo = require('../utils/archinfo');\nvar buildmessage = require('../utils/buildmessage.js');\nvar isopack = require('./isopack.js');\nvar meteorNpm = require('./meteor-npm.js');\nvar watch = require('../fs/watch');\nvar Console = require('../console/console.js').Console;\nvar files = require('../fs/files');\nvar colonConverter = require('../utils/colon-converter.js');\nvar linterPluginModule = require('./linter-plugin.js');\nvar compileStepModule = require('./compiler-deprecated-compile-step.js');\nvar Profile = require('../tool-env/profile').Profile;\nimport { SourceProcessorSet } from './build-plugin.js';\nimport { NodeModulesDirectory, buildJsImage } from './bundler.js';\n\nimport {\n  optimisticReadFile,\n  optimisticHashOrNull,\n} from \"../fs/optimistic\";\n\nvar compiler = exports;\n\n// Whenever you change anything about the code that generates isopacks, bump\n// this version number. The idea is that the \"format\" field of the isopack\n// JSON file only changes when the actual specified structure of the\n// isopack/unibuild changes, but this version (which is build-tool-specific)\n// can change when the the contents (not structure) of the built output\n// changes. So eg, if we improve the linker's static analysis, this should be\n// bumped.\n//\n// You should also update this whenever you update any of the packages used\n// directly by the isopack creation process since they do not end up as watched\n// dependencies. (At least for now, packages only used in target creation (eg\n// minifiers) don't require you to update BUILT_BY, though you will need to quit\n// and rerun \"meteor run\".)\ncompiler.BUILT_BY = 'meteor/34';\n\n// This is a list of all possible architectures that a build can target. (Client\n// is expanded into 'web.browser' and 'web.cordova')\ncompiler.ALL_ARCHES = [\n  \"os\",\n  \"web.browser\",\n  \"web.browser.legacy\",\n  \"web.cordova\"\n];\n\ncompiler.compile = Profile(function (packageSource, options) {\n  return `compiler.compile(${ packageSource.name || 'the app' })`;\n}, function (packageSource, options) {\n  buildmessage.assertInCapture();\n\n  var packageMap = options.packageMap;\n  var isopackCache = options.isopackCache;\n  var includeCordovaUnibuild = options.includeCordovaUnibuild;\n\n  var pluginWatchSet = packageSource.pluginWatchSet.clone();\n  var plugins = {};\n\n  var pluginProviderPackageNames = {};\n\n  // Build plugins\n  _.each(packageSource.pluginInfo, function (info) {\n    buildmessage.enterJob({\n      title: \"building plugin `\" + info.name +\n        \"` in package `\" + packageSource.name + \"`\",\n      rootPath: packageSource.sourceRoot\n    }, function () {\n      var buildResult = buildJsImage({\n        name: info.name,\n        packageMap: packageMap,\n        isopackCache: isopackCache,\n        use: info.use,\n        sourceRoot: packageSource.sourceRoot,\n        sources: info.sources,\n        // While we're not actually \"serving\" the file, the serveRoot is used to\n        // calculate file names in source maps.\n        serveRoot: 'packages/' + packageSource.name,\n        npmDependencies: info.npmDependencies,\n        // Plugins have their own npm dependencies separate from the\n        // rest of the package, so they need their own separate npm\n        // shrinkwrap and cache state.\n        npmDir: files.pathResolve(files.pathJoin(\n          packageSource.sourceRoot,\n          '.npm', 'plugin', colonConverter.convert(info.name)\n        ))\n      });\n      // Add this plugin's dependencies to our \"plugin dependency\"\n      // WatchSet. buildResult.watchSet will end up being the merged\n      // watchSets of all of the unibuilds of the plugin -- plugins have\n      // only one unibuild and this should end up essentially being just\n      // the source files of the plugin.\n      //\n      // Note that we do this even on error, so that you can fix the error\n      // and have the runner restart.\n      pluginWatchSet.merge(buildResult.watchSet);\n\n      if (buildmessage.jobHasMessages()) {\n        return;\n      }\n\n      _.each(buildResult.usedPackageNames, function (packageName) {\n        pluginProviderPackageNames[packageName] = true;\n      });\n\n      // Register the built plugin's code.\n      if (!_.has(plugins, info.name)) {\n        plugins[info.name] = {};\n      }\n      plugins[info.name][buildResult.image.arch] = buildResult.image;\n    });\n  });\n\n  // Grab any npm dependencies. Keep them in a cache in the package\n  // source directory so we don't have to do this from scratch on\n  // every build.\n  //\n  // Go through a specialized npm dependencies update process,\n  // ensuring we don't get new versions of any (sub)dependencies. This\n  // process also runs mostly safely multiple times in parallel (which\n  // could happen if you have two apps running locally using the same\n  // package).\n  //\n  // We run this even if we have no dependencies, because we might\n  // need to delete dependencies we used to have.\n  var nodeModulesPath = null;\n  if (packageSource.npmCacheDirectory) {\n    if (meteorNpm.updateDependencies(packageSource.name,\n                                     packageSource.npmCacheDirectory,\n                                     packageSource.npmDependencies)) {\n      nodeModulesPath = files.pathJoin(\n        packageSource.npmCacheDirectory,\n        'node_modules'\n      );\n    }\n  }\n\n  // Find all the isobuild:* pseudo-packages that this package depends on. Why\n  // do we need to do this? Well, we actually load the plugins in this package\n  // before we've fully compiled the package --- plugins are loaded before the\n  // compiler builds the unibuilds in this package (because plugins are allowed\n  // to act on the package itself). But when we load plugins, we need to know if\n  // the package depends on (eg) isobuild:compiler-plugin, to know if the plugin\n  // is allowed to call Plugin.registerCompiler. At this point, the Isopack\n  // object doesn't yet have any unibuilds... but isopack.js doesn't have access\n  // to the PackageSource either (because it needs to work with both\n  // compiled-from-source and loaded-from-disk packages). So we need to make\n  // sure here that the Isopack has *some* reference to the isobuild features\n  // which the unibuilds depend on, so we do it here (and also in\n  // Isopack#initFromPath).\n  var isobuildFeatures = [];\n  packageSource.architectures.forEach((sourceArch) => {\n    sourceArch.uses.forEach((use) => {\n      if (!use.weak && isIsobuildFeaturePackage(use.package) &&\n          isobuildFeatures.indexOf(use.package) === -1) {\n        isobuildFeatures.push(use.package);\n      }\n    });\n  });\n  isobuildFeatures = _.uniq(isobuildFeatures);\n\n  var isopk = new isopack.Isopack;\n  isopk.initFromOptions({\n    name: packageSource.name,\n    metadata: packageSource.metadata,\n    version: packageSource.version,\n    isTest: packageSource.isTest,\n    plugins: plugins,\n    pluginWatchSet: pluginWatchSet,\n    cordovaDependencies: packageSource.cordovaDependencies,\n    npmDiscards: packageSource.npmDiscards,\n    includeTool: packageSource.includeTool,\n    debugOnly: packageSource.debugOnly,\n    prodOnly: packageSource.prodOnly,\n    testOnly: packageSource.testOnly,\n    pluginCacheDir: options.pluginCacheDir,\n    isobuildFeatures\n  });\n\n  _.each(packageSource.architectures, function (architecture) {\n    if (architecture.arch === 'web.cordova' && ! includeCordovaUnibuild) {\n      return;\n    }\n\n    files.withCache(() => {\n      var unibuildResult = compileUnibuild({\n        isopack: isopk,\n        sourceArch: architecture,\n        isopackCache: isopackCache,\n        nodeModulesPath: nodeModulesPath,\n      });\n\n      Object.assign(pluginProviderPackageNames,\n               unibuildResult.pluginProviderPackageNames);\n    });\n  });\n\n  if (options.includePluginProviderPackageMap) {\n    isopk.setPluginProviderPackageMap(\n      packageMap.makeSubsetMap(Object.keys(pluginProviderPackageNames)));\n  }\n\n  return isopk;\n});\n\n// options:\n// - isopack\n// - isopackCache\n// - includeCordovaUnibuild\ncompiler.lint = Profile(function (packageSource, options) {\n  return `compiler.lint(${ packageSource.name || 'the app' })`;\n}, function (packageSource, options) {\n  // Note: the buildmessage context of compiler.lint and lintUnibuild is a\n  // normal error message context (eg, there might be errors from initializing\n  // plugins in getLinterSourceProcessorSet).  We return the linter warnings as\n  // our return value.\n  buildmessage.assertInJob();\n\n  const warnings = new buildmessage._MessageSet;\n  let linted = false;\n  _.each(packageSource.architectures, function (architecture) {\n    // skip Cordova if not required\n    if (! options.includeCordovaUnibuild\n        && architecture.arch === 'web.cordova') {\n      return;\n    }\n\n    const unibuildWarnings = lintUnibuild({\n      isopack: options.isopack,\n      isopackCache: options.isopackCache,\n      sourceArch: architecture\n    });\n    if (unibuildWarnings) {\n      linted = true;\n      warnings.merge(unibuildWarnings);\n    }\n  });\n  return {warnings, linted};\n});\n\ncompiler.getMinifiers = function (packageSource, options) {\n  buildmessage.assertInJob();\n\n  var minifiers = [];\n  _.each(packageSource.architectures, function (architecture) {\n    var activePluginPackages = getActivePluginPackages(options.isopack, {\n      isopackCache: options.isopackCache,\n      uses: architecture.uses\n    });\n\n    _.each(activePluginPackages, function (otherPkg) {\n      otherPkg.ensurePluginsInitialized();\n\n      _.each(otherPkg.sourceProcessors.minifier.allSourceProcessors, (sp) => {\n        minifiers.push(sp);\n      });\n    });\n  });\n\n  minifiers = _.uniq(minifiers);\n  // check for extension-wise uniqness\n  ['js', 'css'].forEach(function (ext) {\n    var plugins = minifiers.filter(function (plugin) {\n      return plugin.extensions.includes(ext);\n    });\n\n    if (plugins.length > 1) {\n      var packages = _.map(plugins, function (p) { return p.isopack.name; });\n      buildmessage.error(packages.join(', ') + ': multiple packages registered minifiers for extension \"' + ext + '\".');\n    }\n  });\n\n  return minifiers;\n};\n\nfunction getLinterSourceProcessorSet({isopack, activePluginPackages}) {\n  buildmessage.assertInJob();\n\n  const sourceProcessorSet = new SourceProcessorSet(\n    isopack.displayName, { allowConflicts: true });\n\n  _.each(activePluginPackages, function (otherPkg) {\n    otherPkg.ensurePluginsInitialized();\n\n    sourceProcessorSet.merge(otherPkg.sourceProcessors.linter);\n  });\n\n  return sourceProcessorSet;\n}\n\nvar lintUnibuild = function ({isopack, isopackCache, sourceArch}) {\n  // Note: the buildmessage context of compiler.lint and lintUnibuild is a\n  // normal error message context (eg, there might be errors from initializing\n  // plugins in getLinterSourceProcessorSet).  We return the linter warnings as\n  // our return value.\n  buildmessage.assertInJob();\n\n  var activePluginPackages = getActivePluginPackages(\n    isopack, {\n      isopackCache,\n      uses: sourceArch.uses\n    });\n\n  const sourceProcessorSet =\n          getLinterSourceProcessorSet({isopack, activePluginPackages});\n  // bail out early if we had trouble loading plugins or if we're not\n  // going to lint anything\n  if (buildmessage.jobHasMessages() || sourceProcessorSet.isEmpty()) {\n    return null;\n  }\n\n  const unibuild = _.find(\n    isopack.unibuilds,\n    unibuild => archinfo.matches(unibuild.arch, sourceArch.arch)\n  );\n\n  if (! unibuild) {\n    throw Error(`No ${ sourceArch.arch } unibuild for ${ isopack.name }!`);\n  }\n\n  const {sources} = sourceArch.getFiles(sourceProcessorSet, unibuild.watchSet);\n\n  const linterMessages = buildmessage.capture(() => {\n    runLinters({\n      isopackCache,\n      sources,\n      sourceProcessorSet,\n      inputSourceArch: sourceArch,\n      watchSet: unibuild.watchSet\n    });\n  });\n  return linterMessages;\n};\n\n// options.sourceArch is a SourceArch to compile.  Process all source files\n// through the appropriate legacy handlers. Create a new Unibuild and add it to\n// options.isopack.\n//\n// Returns a list of source files that were used in the compilation.\nvar compileUnibuild = Profile(function (options) {\n  return `compileUnibuild (${options.isopack.name || 'the app'})`;\n}, function (options) {\n  buildmessage.assertInCapture();\n\n  const isopk = options.isopack;\n  const inputSourceArch = options.sourceArch;\n  const isopackCache = options.isopackCache;\n  const nodeModulesPath = options.nodeModulesPath;\n  const isApp = ! inputSourceArch.pkg.name;\n  const resources = [];\n  const pluginProviderPackageNames = {};\n  const watchSet = inputSourceArch.watchSet.clone();\n\n  // *** Determine and load active plugins\n  const activePluginPackages = getActivePluginPackages(isopk, {\n    uses: inputSourceArch.uses,\n    isopackCache: isopackCache,\n    // If other package is built from source, then we need to rebuild this\n    // package if any file in the other package that could define a plugin\n    // changes.  getActivePluginPackages will add entries to this WatchSet.\n    pluginProviderWatchSet: watchSet,\n    pluginProviderPackageNames\n  });\n\n  // *** Assemble the SourceProcessorSet from the plugins. This data\n  // structure lets us decide what to do with each file: which plugin\n  // should process it in what method.\n  //\n  // We also build a SourceProcessorSet for this package's linters even\n  // though we're not linting right now. This is so we can tell the\n  // difference between an file added to a package as a linter config\n  // file (not handled by any compiler), and a file that's truly not\n  // handled by anything (which is an error unless explicitly declared\n  // as a static asset).\n  let sourceProcessorSet, linterSourceProcessorSet;\n  buildmessage.enterJob(\"determining active plugins\", () => {\n    sourceProcessorSet = new SourceProcessorSet(\n      isopk.displayName(), { hardcodeJs: true});\n\n    activePluginPackages.forEach((otherPkg) => {\n      otherPkg.ensurePluginsInitialized();\n\n      // Note that this may log a buildmessage if there are conflicts.\n      sourceProcessorSet.merge(otherPkg.sourceProcessors.compiler);\n    });\n\n    // Used to excuse functions from the \"undeclared static asset\" check.\n    linterSourceProcessorSet = getLinterSourceProcessorSet({\n      activePluginPackages,\n      isopack: isopk\n    });\n    if (buildmessage.jobHasMessages()) {\n      // Recover by not calling getFiles and pretending there are no\n      // items.\n      sourceProcessorSet = null;\n    }\n  });\n\n  // *** Determine source files\n  // Note: the getFiles function isn't expected to add its\n  // source files to watchSet; rather, the watchSet is for other\n  // things that the getFiles consulted (such as directory\n  // listings or, in some hypothetical universe, control files) to\n  // determine its source files.\n  const sourceProcessorFiles = sourceProcessorSet\n    ? inputSourceArch.getFiles(sourceProcessorSet, watchSet) : {};\n  const sources = sourceProcessorFiles.sources || [];\n  const assets = sourceProcessorFiles.assets || [];\n\n  const nodeModulesDirectories = Object.create(null);\n\n  function addNodeModulesDirectory(options) {\n    const nmd = new NodeModulesDirectory(options);\n    nodeModulesDirectories[nmd.sourcePath] = nmd;\n  }\n\n  _.each(inputSourceArch.localNodeModulesDirs, (info, dir) => {\n    addNodeModulesDirectory({\n      packageName: inputSourceArch.pkg.name,\n      sourceRoot: inputSourceArch.sourceRoot,\n      sourcePath: files.pathJoin(inputSourceArch.sourceRoot, dir),\n      // Npm.strip applies to local node_modules directories of Meteor\n      // packages, as well as .npm/package/node_modules directories.\n      npmDiscards: isopk.npmDiscards,\n      local: true,\n      // The values of inputSourceArch.localNodeModulesDirs are usually\n      // just `true`, but if `info` is an object, then we let its\n      // properties override the properties defined above.\n      ...(_.isObject(info) ? info : Object.prototype),\n    });\n  });\n\n  if (nodeModulesPath) {\n    addNodeModulesDirectory({\n      packageName: inputSourceArch.pkg.name,\n      sourceRoot: inputSourceArch.sourceRoot,\n      sourcePath: nodeModulesPath,\n      npmDiscards: isopk.npmDiscards,\n      local: false,\n    });\n\n    // If this slice has node modules, we should consider the shrinkwrap file\n    // to be part of its inputs. (This is a little racy because there's no\n    // guarantee that what we read here is precisely the version that's used,\n    // but it's better than nothing at all.)\n    //\n    // Note that this also means that npm modules used by plugins will get\n    // this npm-shrinkwrap.json in their pluginDependencies (including for all\n    // packages that depend on us)!  This is good: this means that a tweak to\n    // an indirect dependency of the coffee-script npm module used by the\n    // coffeescript package will correctly cause packages with *.coffee files\n    // to be rebuilt.\n    const shrinkwrapPath = nodeModulesPath.replace(\n        /node_modules$/, 'npm-shrinkwrap.json');\n    watch.readAndWatchFile(watchSet, shrinkwrapPath);\n  }\n\n  // This function needs to be factored out to support legacy handlers later on\n  // in the compilation process\n  function addAsset(contents, relPath, hash) {\n    // XXX hack to strip out private and public directory names from app asset\n    // paths\n    if (! inputSourceArch.pkg.name) {\n      relPath = relPath.replace(/^(private|public)\\//, '');\n    }\n\n    resources.push({\n      type: \"asset\",\n      data: contents,\n      path: relPath,\n      servePath: colonConverter.convert(\n        files.pathJoin(inputSourceArch.pkg.serveRoot, relPath)),\n      hash: hash\n    });\n  }\n\n  // Add all assets\n  _.values(assets).forEach((asset) => {\n    const relPath = asset.relPath;\n    const absPath = files.pathResolve(inputSourceArch.sourceRoot, relPath);\n\n    const hash = optimisticHashOrNull(absPath);\n    const contents = optimisticReadFile(absPath);\n    watchSet.addFile(absPath, hash);\n\n    addAsset(contents, relPath, hash);\n  });\n\n  // Add and compile all source files\n  _.values(sources).forEach((source) => {\n    const relPath = source.relPath;\n    const fileOptions = _.clone(source.fileOptions) || {};\n    const absPath = files.pathResolve(inputSourceArch.sourceRoot, relPath);\n    const filename = files.pathBasename(relPath);\n\n    // Find the handler for source files with this extension\n    let classification = null;\n    classification = sourceProcessorSet.classifyFilename(\n      filename, inputSourceArch.arch);\n\n    if (classification.type === 'wrong-arch') {\n      // This file is for a compiler plugin but not for this arch. Skip it,\n      // and don't even watch it.  (eg, skip CSS preprocessor files on the\n      // server.)  This `return` skips this source file and goes on to the next\n      // one.\n      return;\n    }\n\n    if (classification.type === 'unmatched') {\n      // This is not matched by any compiler plugin or legacy source handler,\n      // but it was added as a source file.\n      //\n      // Prior to the batch-plugins project, these would be implicitly treated\n      // as static assets. Now we consider this to be an error; you need to\n      // explicitly tell that you want something to be a static asset by calling\n      // addAssets or putting it in the public/private directories in an app.\n      //\n      // This is a backwards-incompatible change, but it doesn't affect\n      // previously-published packages (because the check is occuring in the\n      // compiler), and it doesn't affect apps (where random files outside of\n      // private/public never end up in the source list anyway).\n      //\n      // As one special case, if a file is unmatched by the compiler\n      // SourceProcessorSet but is matched by the linter SourceProcessorSet (ie,\n      // a linter config file), we don't report an error; this is so that you\n      // can run `api.addFiles('.jshintrc')` and have it work.  (This is only\n      // relevant for packages.)  We don't put these files in the WatchSet,\n      // though; that happens via compiler.lint.\n\n      if (isApp) {\n        // This shouldn't normally happen, because initFromAppDir's getFiles\n        // should only return assets or sources which match\n        // sourceProcessorSet. That being said, this can happen when sources\n        // are being watched by a build plugin, and that build plugin is\n        // removed while the Tool is running. Given that this is not a\n        // common occurrence however, we'll ignore this situation and let the\n        // Tool rebuild continue.\n        return;\n      }\n\n      const linterClassification = linterSourceProcessorSet.classifyFilename(\n        filename, inputSourceArch.arch);\n      if (linterClassification.type !== 'unmatched') {\n        // The linter knows about this, so we'll just ignore it instead of\n        // throwing an error.\n        return;\n      }\n\n      buildmessage.error(\n        `No plugin known to handle file '${ relPath }'. If you want this \\\nfile to be a static asset, use addAssets instead of addFiles; eg, \\\napi.addAssets('${relPath}', 'client').`);\n      // recover by ignoring\n      return;\n    }\n\n    const contents = optimisticReadFile(absPath);\n    const hash = optimisticHashOrNull(absPath);\n    const file = { contents, hash };\n\n    // When files are handled by a new-style compiler plugin, the SourceResource\n    // class tracks if each file is actually used.\n    if (classification.isNonLegacySource()) {\n      watchSet.addPotentiallyUnusedFile(absPath, hash);\n    } else {\n      watchSet.addFile(absPath, hash);\n    }\n\n    Console.nudge(true);\n\n    if (classification.type === \"meteor-ignore\") {\n      // Return after watching .meteorignore files but before adding them\n      // as resources to be processed by compiler plugins. To see how\n      // these files are handled, see PackageSource#_findSources.\n      return;\n    }\n\n    if (contents === null) {\n      // It really sucks to put this check here, since this isn't publish\n      // code...\n      // XXX We think this code can probably be deleted at this point because\n      // people probably aren't trying to use files with colons in them any\n      // more.\n      if (source.relPath.match(/:/)) {\n        buildmessage.error(\n          \"Couldn't build this package on Windows due to the following file \" +\n          \"with a colon -- \" + source.relPath + \". Please rename and \" +\n          \"and re-publish the package.\");\n      } else {\n        buildmessage.error(\"File not found: \" + source.relPath);\n      }\n\n      // recover by ignoring (but still watching the file)\n      return;\n    }\n\n    if (classification.isNonLegacySource()) {\n      // This is source used by a new-style compiler plugin; it will be fully\n      // processed later in the bundler.\n      resources.push(new SourceResource({\n        extension: classification.extension,\n        usesDefaultSourceProcessor: !!classification.usesDefaultSourceProcessor,\n        data: contents,\n        path: relPath,\n        hash,\n        fileOptions\n      }));\n      return;\n    }\n\n    if (classification.type !== 'legacy-handler') {\n      throw Error(\"unhandled type: \" + classification.type);\n    }\n\n    // OK, time to handle legacy handlers.\n    var compileStep = compileStepModule.makeCompileStep(\n      source, file, inputSourceArch, {\n        resources: resources,\n        addAsset: addAsset\n      });\n\n    const handler = buildmessage.markBoundary(classification.legacyHandler);\n\n    try {\n      Profile.time(`legacy handler (.${classification.extension})`, () => {\n        handler(compileStep);\n      });\n    } catch (e) {\n      e.message = e.message + \" (compiling \" + relPath + \")\";\n      buildmessage.exception(e);\n\n      // Recover by ignoring this source file (as best we can -- the\n      // handler might already have emitted resources)\n    }\n  });\n\n  // *** Determine captured variables\n  var declaredExports = _.map(inputSourceArch.declaredExports, function (symbol) {\n    return _.pick(symbol, ['name', 'testOnly']);\n  });\n\n  // By default, consider this isopack \"portable\" unless\n  // process.env.METEOR_ALLOW_NON_PORTABLE is truthy or the name of the\n  // package is \"meteor-tool\", in which case we determine portability by\n  // scanning node_modules directories for binary .node files.\n  // Non-portable packages must publish platform-specific builds using\n  // publish-for-arch, whereas portable packages can avoid running\n  // publish-for-arch and rely instead on the package consumer to rebuild\n  // binary npm dependencies when necessary.\n  let isPortable = true;\n  if (! process.env.METEOR_FORCE_PORTABLE) {\n    // Make sure we've rebuilt these npm packages according to the current\n    // process.{platform,arch,versions}.\n    _.each(nodeModulesDirectories, nmd => {\n      if (nmd.local) {\n        // Meteor never attempts to modify the contents of local\n        // node_modules directories (such as the one in the root directory\n        // of an application), so we call nmd.rebuildIfNonPortable() only\n        // when nmd.local is false.\n      } else {\n        nmd.rebuildIfNonPortable();\n      }\n    });\n\n    if (process.env.METEOR_ALLOW_NON_PORTABLE ||\n        isopk.name === \"meteor-tool\") {\n      isPortable = _.every(nodeModulesDirectories, nmd => nmd.isPortable());\n    }\n  }\n\n  // *** Consider npm dependencies and portability\n  var arch = inputSourceArch.arch;\n  if (arch === \"os\" && ! isPortable) {\n    // Contains non-portable compiled npm modules, so set arch correctly\n    arch = archinfo.host();\n  }\n\n  let nodeModulesDirsOrUndefined = nodeModulesDirectories;\n  if (! archinfo.matches(arch, \"os\") && ! isPortable) {\n    // non-portable npm modules only work on server architectures\n    nodeModulesDirsOrUndefined = undefined;\n  }\n\n  // *** Output unibuild object\n  isopk.addUnibuild({\n    kind: inputSourceArch.kind,\n    arch: arch,\n    uses: inputSourceArch.uses,\n    implies: inputSourceArch.implies,\n    watchSet: watchSet,\n    nodeModulesDirectories: nodeModulesDirsOrUndefined,\n    declaredExports: declaredExports,\n    resources: resources\n  });\n\n  return {\n    pluginProviderPackageNames: pluginProviderPackageNames\n  };\n});\n\nfunction runLinters({inputSourceArch, isopackCache, sources,\n                     sourceProcessorSet, watchSet}) {\n  // The buildmessage context here is for linter warnings only! runLinters\n  // should not do anything that can have a real build failure.\n  buildmessage.assertInCapture();\n\n  if (sourceProcessorSet.isEmpty()) {\n    return;\n  }\n\n  // First we calculate the symbols imported into the current package by\n  // packages we depend on. This is because most JS linters are going to want to\n  // warn about the use of unknown global variables, and the linker import\n  // system works by doing something that looks a whole lot like using\n  // undeclared globals!  That said, we don't actually know the imports that\n  // will be active when an app is built if the versions of the imported\n  // packages differ from those available at package lint time. But it's a good\n  // heuristic, at least. (If we transition from linker to ES2015 modules, we\n  // won't have the issue any more.)\n\n  // We want to look at the arch of the used packages that matches the arch\n  // we're compiling.  Normally when we call compiler.eachUsedUnibuild, we're\n  // either specifically looking at archinfo.host() because we're doing\n  // something related to plugins (which always run in the host environment), or\n  // we're in the process of building a bundler Target (a program), which has a\n  // specific arch which is never 'os'.  In this odd case, though, we're trying\n  // to run eachUsedUnibuild at package-compile time (not bundle time), so the\n  // only 'arch' we've heard of might be 'os', if we're building a portable\n  // unibuild.  In that case, we should look for imports in the host arch if it\n  // exists instead of failing because a dependency does not have an 'os'\n  // unibuild.\n  const whichArch = inputSourceArch.arch === 'os'\n          ? archinfo.host() : inputSourceArch.arch;\n\n  // For linters, figure out what are the global imports from other packages\n  // that we use directly, or are implied.\n  const globalImports = ['Package'];\n\n  if (archinfo.matches(inputSourceArch.arch, \"os\")) {\n    globalImports.push('Npm', 'Assets');\n  }\n\n  compiler.eachUsedUnibuild({\n    dependencies: inputSourceArch.uses,\n    arch: whichArch,\n    isopackCache: isopackCache,\n    skipUnordered: true,\n    // don't import symbols from debugOnly, prodOnly and testOnly\n    // packages, because if the package is not linked it will cause a\n    // runtime error.  the code must access them with\n    // `Package[\"my-package\"].MySymbol`.\n    skipDebugOnly: true,\n    skipProdOnly: true,\n    skipTestOnly: true,\n  }, (unibuild) => {\n    if (unibuild.pkg.name === inputSourceArch.pkg.name) {\n      return;\n    }\n    _.each(unibuild.declaredExports, (symbol) => {\n      if (! symbol.testOnly || inputSourceArch.isTest) {\n        globalImports.push(symbol.name);\n      }\n    });\n  });\n\n  // sourceProcessor.id -> {sourceProcessor, sources: [WrappedSourceItem]}\n  const sourceItemsForLinter = {};\n  _.values(sources).forEach((sourceItem) => {\n    const { relPath, fileOptions } = sourceItem;\n    const classification = sourceProcessorSet.classifyFilename(\n      files.pathBasename(relPath), inputSourceArch.arch);\n\n    // If we don't have a linter for this file (or we do but it's only on\n    // another arch), skip without even reading the file into a WatchSet.\n    if (classification.type === 'wrong-arch' ||\n        classification.type === 'unmatched') {\n      return;\n    }\n\n    // We shouldn't ever add a legacy handler and we're not hardcoding JS\n    // for linters, so we should always have SourceProcessor if anything\n    // matches, unless this is a .meteorignore file.\n    if (classification.type !== \"meteor-ignore\" &&\n        ! classification.sourceProcessors) {\n      throw Error(\n        `Unexpected classification for ${ relPath }: ${ classification.type }`);\n    }\n\n    // Read the file and add it to the WatchSet.\n    const {hash, contents} = watch.readAndWatchFileWithHash(\n      watchSet,\n      files.pathResolve(inputSourceArch.sourceRoot, relPath));\n\n    if (classification.type === \"meteor-ignore\") {\n      // Return after watching .meteorignore files but before adding them\n      // as resources to be processed by compiler plugins. To see how\n      // these files are handled, see PackageSource#_findSources.\n      return;\n    }\n\n    const wrappedSource = {\n      relPath, contents, hash, fileOptions,\n      arch: inputSourceArch.arch,\n      'package': inputSourceArch.pkg.name\n    };\n\n    // There can be multiple linters on a file.\n    classification.sourceProcessors.forEach((sourceProcessor) => {\n      if (! sourceItemsForLinter.hasOwnProperty(sourceProcessor.id)) {\n        sourceItemsForLinter[sourceProcessor.id] = {\n          sourceProcessor,\n          sources: []\n        };\n      }\n      sourceItemsForLinter[sourceProcessor.id].sources.push(wrappedSource);\n    });\n  });\n\n  // Run linters on files. This skips linters that don't have any files.\n  _.each(sourceItemsForLinter, ({sourceProcessor, sources}) => {\n    const sourcesToLint = sources.map(\n      wrappedSource => new linterPluginModule.LintingFile(wrappedSource)\n    );\n\n    const markedLinter = buildmessage.markBoundary(\n      sourceProcessor.userPlugin.processFilesForPackage,\n      sourceProcessor.userPlugin\n    );\n\n    function archToString(arch) {\n      if (arch.match(/web\\.cordova/)) {\n        return \"Cordova\";\n      }\n      if (arch.match(/web\\..*/)) {\n        return \"Client\";\n      }\n      if (arch.match(/os.*/)) {\n        return \"Server\";\n      }\n      throw new Error(\"Don't know how to display the arch: \" + arch);\n    }\n\n    buildmessage.enterJob({\n      title: \"linting files with \" +\n        sourceProcessor.isopack.name +\n        \" for \" +\n        inputSourceArch.pkg.displayName() +\n        \" (\" + archToString(inputSourceArch.arch) + \")\"\n    }, () => {\n      try {\n        Promise.await(markedLinter(sourcesToLint, {\n          globals: globalImports\n        }));\n      } catch (e) {\n        buildmessage.exception(e);\n      }\n    });\n  });\n};\n\n// takes an isopack and returns a list of packages isopack depends on,\n// containing at least one plugin\nexport function getActivePluginPackages(isopk, {\n  uses,\n  isopackCache,\n  pluginProviderPackageNames,\n  pluginProviderWatchSet\n}) {\n  // XXX we used to include our own plugins only if we were the\n  // \"use\" role. now we include them everywhere because we don't have\n  // a special \"use\" role anymore. it's not totally clear to me what\n  // the correct behavior should be -- we need to resolve whether we\n  // think about plugins as being global to a package or particular\n  // to a unibuild.\n\n  // (there's also some weirdness here with handling implies, because\n  // the implies field is on the target unibuild, but we really only care\n  // about packages.)\n  var activePluginPackages = [isopk];\n  if (pluginProviderPackageNames) {\n    pluginProviderPackageNames[isopk.name] = true;\n  }\n\n  // We don't use plugins from weak dependencies, because the ability\n  // to compile a certain type of file shouldn't depend on whether or\n  // not some unrelated package in the target has a dependency. And we\n  // skip unordered dependencies, because it's not going to work to\n  // have circular build-time dependencies.\n  //\n  // eachUsedUnibuild takes care of pulling in implied dependencies for us (eg,\n  // templating from standard-app-packages).\n  //\n  // We pass archinfo.host here, not self.arch, because it may be more specific,\n  // and because plugins always have to run on the host architecture.\n  compiler.eachUsedUnibuild({\n    dependencies: uses,\n    arch: archinfo.host(),\n    isopackCache: isopackCache,\n    skipUnordered: true\n    // implicitly skip weak deps by not specifying acceptableWeakPackages option\n  }, function (unibuild) {\n    if (unibuild.pkg.name === isopk.name) {\n      return;\n    }\n    if (pluginProviderPackageNames) {\n      pluginProviderPackageNames[unibuild.pkg.name] = true;\n    }\n    if (pluginProviderWatchSet) {\n      pluginProviderWatchSet.merge(unibuild.pkg.pluginWatchSet);\n    }\n    if (_.isEmpty(unibuild.pkg.plugins)) {\n      return;\n    }\n    activePluginPackages.push(unibuild.pkg);\n  });\n\n  activePluginPackages = _.uniq(activePluginPackages);\n  return activePluginPackages;\n}\n\n// Iterates over each in options.dependencies as well as unibuilds implied by\n// them. The packages in question need to already be built and in\n// options.isopackCache.\n//\n// Skips isobuild:* pseudo-packages.\ncompiler.eachUsedUnibuild = function (\n  options, callback) {\n  buildmessage.assertInCapture();\n  var dependencies = options.dependencies;\n  var arch = options.arch;\n  var isopackCache = options.isopackCache;\n\n  var acceptableWeakPackages = options.acceptableWeakPackages || {};\n\n  var processedUnibuildId = {};\n  var usesToProcess = [];\n  _.each(dependencies, function (use) {\n    if (options.skipUnordered && use.unordered) {\n      return;\n    }\n    if (use.weak && !_.has(acceptableWeakPackages, use.package)) {\n      return;\n    }\n    usesToProcess.push(use);\n  });\n\n  while (! _.isEmpty(usesToProcess)) {\n    var use = usesToProcess.shift();\n\n    // We only care about real packages, not isobuild:* psuedo-packages.\n    if (isIsobuildFeaturePackage(use.package)) {\n      continue;\n    }\n\n    var usedPackage = isopackCache.getIsopack(use.package);\n\n    // Ignore this package if we were told to skip debug-only packages and it is\n    // debug-only.\n    if (usedPackage.debugOnly && options.skipDebugOnly) {\n      continue;\n    }\n    // Ditto prodOnly.\n    if (usedPackage.prodOnly && options.skipProdOnly) {\n      continue;\n    }\n    // Ditto testOnly.\n    if (usedPackage.testOnly && options.skipTestOnly) {\n      continue;\n    }\n\n    var unibuild = usedPackage.getUnibuildAtArch(arch);\n    if (!unibuild) {\n      // The package exists but there's no unibuild for us. A buildmessage has\n      // already been issued. Recover by skipping.\n      continue;\n    }\n\n    if (_.has(processedUnibuildId, unibuild.id)) {\n      continue;\n    }\n    processedUnibuildId[unibuild.id] = true;\n\n    callback(unibuild, {\n      unordered: !!use.unordered,\n      weak: !!use.weak\n    });\n\n    _.each(unibuild.implies, function (implied) {\n      usesToProcess.push(implied);\n    });\n  }\n};\n\n// Note: this code is duplicated in packages/constraint-solver/solver.js\nexport function isIsobuildFeaturePackage(packageName) {\n  return packageName.startsWith('isobuild:');\n}\n\nclass SourceResource {\n  type = \"source\";\n\n  constructor({ extension, usesDefaultSourceProcessor, data, path, hash, fileOptions }) {\n    this.type = \"source\";\n    this.extension = extension || null;\n    this.usesDefaultSourceProcessor = usesDefaultSourceProcessor;\n    this.path = path;\n    this.fileOptions = fileOptions;\n\n    // Is set to true if the resource's hash or data is accessed, which can be\n    // used to track if the file's content was used during the build process\n    this._dataUsed = false;\n    this._hash = hash;\n    this._data = data;\n  }\n\n  get hash () {\n    this._dataUsed = true;\n    return this._hash;\n  }\n\n  get data () {\n    this._dataUsed = true;\n    return this._data;\n  }\n}\n\nexports.SourceResource = SourceResource;\n"],"file":"tools/isobuild/compiler.js.map"}