{"version":3,"sources":["/tools/isobuild/package-cordova.js"],"names":["module","export","PackageCordova","ensureOnlyValidVersions","link","v","buildmessage","default","constructor","_dependencies","depends","dependencies","error","useMyCaller","forCordova","e","message","downcase"],"mappings":"AAAAA,MAAM,CAACC,MAAP,CAAc;AAACC,EAAAA,cAAc,EAAC,MAAIA;AAApB,CAAd;AAAmD,IAAIC,uBAAJ;AAA4BH,MAAM,CAACI,IAAP,CAAY,mBAAZ,EAAgC;AAACD,EAAAA,uBAAuB,CAACE,CAAD,EAAG;AAACF,IAAAA,uBAAuB,GAACE,CAAxB;AAA0B;;AAAtD,CAAhC,EAAwF,CAAxF;AAA2F,IAAIC,YAAJ;AAAiBN,MAAM,CAACI,IAAP,CAAY,0BAAZ,EAAuC;AAACG,EAAAA,OAAO,CAACF,CAAD,EAAG;AAACC,IAAAA,YAAY,GAACD,CAAb;AAAe;;AAA3B,CAAvC,EAAoE,CAApE;;AAGpL,MAAMH,cAAN,CAAqB;AAC1B;AACF;AACA;AACA;AACA;AACA;AACEM,EAAAA,WAAW,GAAG;AACZ,SAAKC,aAAL,GAAqB,IAArB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEC,EAAAA,OAAO,CAACC,YAAD,EAAe;AACpB;AACA;AACA;AACA,QAAI,KAAKF,aAAT,EAAwB;AACtBH,MAAAA,YAAY,CAACM,KAAb,CAAmB,qDAAnB,EACmB;AAAEC,QAAAA,WAAW,EAAE;AAAf,OADnB,EADsB,CAGtB;;AACA;AACD;;AAED,QAAI,OAAOF,YAAP,KAAwB,QAA5B,EAAsC;AACpCL,MAAAA,YAAY,CAACM,KAAb,CAAmB,kDACA,mCADnB,EAEmB;AAAEC,QAAAA,WAAW,EAAE;AAAf,OAFnB,EADoC,CAIpC;;AACA;AACD,KAjBmB,CAmBpB;AACA;AACA;AACA;AACA;;;AACA,QAAI;AACFV,MAAAA,uBAAuB,CAACQ,YAAD,EAAe;AACpCG,QAAAA,UAAU,EAAE;AADwB,OAAf,CAAvB;AAID,KALD,CAKE,OAAOC,CAAP,EAAU;AACVT,MAAAA,YAAY,CAACM,KAAb,CAAmBG,CAAC,CAACC,OAArB,EAA8B;AAC5BH,QAAAA,WAAW,EAAE,IADe;AAE5BI,QAAAA,QAAQ,EAAE;AAFkB,OAA9B,EADU,CAMV;;AACA;AACD;;AAED,SAAKR,aAAL,GAAqBE,YAArB;AACD;;AAnFyB","sourcesContent":["import { ensureOnlyValidVersions } from \"../utils/utils.js\";\nimport buildmessage from \"../utils/buildmessage.js\";\n\nexport class PackageCordova {\n  /**\n   * @summary Class of the 'Cordova' object visible in package.js\n   * @locus package.js\n   * @instanceName Cordova\n   * @showInstanceName true\n   */\n  constructor() {\n    this._dependencies = null;\n  }\n\n  /**\n   * @summary Specify which [Cordova / PhoneGap](http://cordova.apache.org/)\n   * plugins your Meteor package depends on.\n   *\n   * Plugins are installed from\n   * [plugins.cordova.io](http://plugins.cordova.io/), so the plugins and\n   * versions specified must exist there. Alternatively, the version\n   * can be replaced with a GitHub tarball URL as described in the\n   * [Cordova](https://guide.meteor.com/cordova.html#cordova-plugins)\n   * page of the Meteor wiki on GitHub.\n   * @param  {Object} dependencies An object where the keys are plugin\n   * names and the values are version numbers or GitHub tarball URLs\n   * in string form.\n   * Example:\n   *\n   * ```js\n   * Cordova.depends({\n   *   \"org.apache.cordova.camera\": \"0.3.0\"\n   * });\n   * ```\n   *\n   * Alternatively, with a GitHub URL:\n   *\n   * ```js\n   * Cordova.depends({\n   *   \"org.apache.cordova.camera\":\n   *     \"https://github.com/apache/cordova-plugin-camera/tarball/d84b875c449d68937520a1b352e09f6d39044fbf\"\n   * });\n   * ```\n   *\n   * @locus package.js\n   */\n  depends(dependencies) {\n    // XXX make cordovaDependencies be separate between use and test, so that\n    // production doesn't have to ship all of the npm modules used by test\n    // code\n    if (this._dependencies) {\n      buildmessage.error(\"Cordova.depends may only be called once per package\",\n                         { useMyCaller: true });\n      // recover by ignoring the Cordova.depends line\n      return;\n    }\n\n    if (typeof dependencies !== 'object') {\n      buildmessage.error(\"the argument to Cordova.depends should be an \" +\n                         \"object, like this: {gcd: '0.0.0'}\",\n                         { useMyCaller: true });\n      // recover by ignoring the Cordova.depends line\n      return;\n    }\n\n    // don't allow cordova fuzzy versions so that there is complete\n    // consistency when deploying a meteor app\n    //\n    // XXX use something like seal or lockdown to have *complete*\n    // confidence we're running the same code?\n    try {\n      ensureOnlyValidVersions(dependencies, {\n        forCordova: true\n      });\n\n    } catch (e) {\n      buildmessage.error(e.message, {\n        useMyCaller: true,\n        downcase: true\n      });\n\n      // recover by ignoring the Cordova.depends line\n      return;\n    }\n\n    this._dependencies = dependencies;\n  }\n}\n"],"file":"tools/isobuild/package-cordova.js.map"}