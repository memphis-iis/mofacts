{"version":3,"sources":["/tools/isobuild/package-npm.js"],"names":["module1","export","PackageNpm","ensureOnlyValidVersions","link","v","buildmessage","default","NpmDiscards","nodeRequire","require","constructor","_discards","_dependencies","depends","dependencies","error","useMyCaller","forCordova","e","message","downcase","strip","discards","merge","name"],"mappings":";AAAAA,EAAAA,OAAO,CAACC,MAAR,CAAe;AAACC,IAAAA,UAAU,EAAC,MAAIA;AAAhB,GAAf;AAA4C,MAAIC,uBAAJ;AAA4BH,EAAAA,OAAO,CAACI,IAAR,CAAa,mBAAb,EAAiC;AAACD,IAAAA,uBAAuB,CAACE,CAAD,EAAG;AAACF,MAAAA,uBAAuB,GAACE,CAAxB;AAA0B;;AAAtD,GAAjC,EAAyF,CAAzF;AAA4F,MAAIC,YAAJ;AAAiBN,EAAAA,OAAO,CAACI,IAAR,CAAa,0BAAb,EAAwC;AAACG,IAAAA,OAAO,CAACF,CAAD,EAAG;AAACC,MAAAA,YAAY,GAACD,CAAb;AAAe;;AAA3B,GAAxC,EAAqE,CAArE;AAAwE,MAAIG,WAAJ;AAAgBR,EAAAA,OAAO,CAACI,IAAR,CAAa,gBAAb,EAA8B;AAACG,IAAAA,OAAO,CAACF,CAAD,EAAG;AAACG,MAAAA,WAAW,GAACH,CAAZ;AAAc;;AAA1B,GAA9B,EAA0D,CAA1D;AAI7Q,QAAMI,WAAW,GAAGC,OAApB;;AAEO,QAAMR,UAAN,CAAiB;AACtB;AACF;AACA;AACA;AACA;AACA;AACES,IAAAA,WAAW,GAAG;AACZ;AACA;AACA,WAAKC,SAAL,GAAiB,IAAIJ,WAAJ,EAAjB;AACA,WAAKK,aAAL,GAAqB,IAArB;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEC,IAAAA,OAAO,CAACC,YAAD,EAAe;AACpB;AACA;AACA;AACA,UAAI,KAAKF,aAAT,EAAwB;AACtBP,QAAAA,YAAY,CAACU,KAAb,CAAmB,iDAAnB,EACmB;AAAEC,UAAAA,WAAW,EAAE;AAAf,SADnB,EADsB,CAGtB;;AACA;AACD;;AAED,UAAI,OAAOF,YAAP,KAAwB,QAA5B,EAAsC;AACpCT,QAAAA,YAAY,CAACU,KAAb,CAAmB,8CACA,mCADnB,EAEmB;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAFnB,EADoC,CAIpC;;AACA;AACD,OAjBmB,CAmBpB;AACA;AACA;AACA;AACA;;;AACA,UAAI;AACFd,QAAAA,uBAAuB,CAACY,YAAD,EAAe;AACpCG,UAAAA,UAAU,EAAE;AADwB,SAAf,CAAvB;AAID,OALD,CAKE,OAAOC,CAAP,EAAU;AACVb,QAAAA,YAAY,CAACU,KAAb,CAAmBG,CAAC,CAACC,OAArB,EAA8B;AAC5BH,UAAAA,WAAW,EAAE,IADe;AAE5BI,UAAAA,QAAQ,EAAE;AAFkB,SAA9B,EADU,CAMV;;AACA;AACD;;AAED,WAAKR,aAAL,GAAqBE,YAArB;AACD,KAlFqB,CAoFtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAO,IAAAA,KAAK,CAACC,QAAD,EAAW;AACd,WAAKX,SAAL,CAAeY,KAAf,CAAqBD,QAArB;AACD;;AAEDb,IAAAA,OAAO,CAACe,IAAD,EAAO;AACZ,UAAI;AACF,eAAOhB,WAAW,CAACgB,IAAD,CAAlB,CADE,CACwB;AAC3B,OAFD,CAEE,OAAON,CAAP,EAAU;AACVb,QAAAA,YAAY,CAACU,KAAb,CACE,4BAA4BS,IAA5B,GACE,+DAFJ,EAGE;AAAER,UAAAA,WAAW,EAAE;AAAf,SAHF,EADU,CAKV;AACA;AACD;AACF;;AA7HqB","sourcesContent":["import { ensureOnlyValidVersions } from \"../utils/utils.js\";\nimport buildmessage from \"../utils/buildmessage.js\";\nimport NpmDiscards from \"./npm-discards\";\n\nconst nodeRequire = require;\n\nexport class PackageNpm {\n  /**\n   * @summary Class of the 'Npm' object visible in package.js\n   * @locus package.js\n   * @instanceName Npm\n   * @showInstanceName true\n   */\n  constructor() {\n    // Files to be stripped from the installed NPM dependency tree. See\n    // the Npm.strip comment below for further usage information.\n    this._discards = new NpmDiscards;\n    this._dependencies = null;\n  }\n\n  /**\n   * @summary Specify which [NPM](https://www.npmjs.org/) packages\n   * your Meteor package depends on.\n   * @param  {Object} dependencies An object where the keys are package\n   * names and the values are one of:\n   *   1. Version numbers in string form\n   *   2. http(s) URLs of npm packages\n   *   3. Git URLs in the format described [here](https://docs.npmjs.com/files/package.json#git-urls-as-dependencies)\n   *\n   * Https URL example:\n   *\n   * ```js\n   * Npm.depends({\n   *   moment: \"2.8.3\",\n   *   async: \"https://github.com/caolan/async/archive/71fa2638973dafd8761fa5457c472a312cc820fe.tar.gz\"\n   * });\n   * ```\n   *\n   * Git URL example:\n   *\n   * ```js\n   * Npm.depends({\n   *   moment: \"2.8.3\",\n   *   async: \"git+https://github.com/caolan/async#master\"\n   * });\n   * ```\n   * @locus package.js\n   */\n  depends(dependencies) {\n    // XXX make dependencies be separate between use and test, so that\n    // production doesn't have to ship all of the npm modules used by test\n    // code\n    if (this._dependencies) {\n      buildmessage.error(\"Npm.depends may only be called once per package\",\n                         { useMyCaller: true });\n      // recover by ignoring the Npm.depends line\n      return;\n    }\n\n    if (typeof dependencies !== 'object') {\n      buildmessage.error(\"the argument to Npm.depends should be an \" +\n                         \"object, like this: {gcd: '0.0.0'}\",\n                         { useMyCaller: true });\n      // recover by ignoring the Npm.depends line\n      return;\n    }\n\n    // don't allow npm fuzzy versions so that there is complete\n    // consistency when deploying a meteor app\n    //\n    // XXX use something like seal or lockdown to have *complete*\n    // confidence we're running the same code?\n    try {\n      ensureOnlyValidVersions(dependencies, {\n        forCordova: false\n      });\n\n    } catch (e) {\n      buildmessage.error(e.message, {\n        useMyCaller: true,\n        downcase: true\n      });\n\n      // recover by ignoring the Npm.depends line\n      return;\n    }\n\n    this._dependencies = dependencies;\n  }\n\n  // The `Npm.strip` method makes up for packages that have missing\n  // or incomplete .npmignore files by telling the bundler to strip out\n  // certain unnecessary files and/or directories during `meteor build`.\n  //\n  // The `discards` parameter should be an object whose keys are\n  // top-level package names and whose values are arrays of strings\n  // (or regular expressions) that match paths in that package's\n  // directory that should be stripped before installation. For\n  // example:\n  //\n  //   Npm.strip({\n  //     connect: [/*\\.wmv$/],\n  //     useragent: [\"tests/\"]\n  //   });\n  //\n  // Alternatively, a single string or regular expression can be passed\n  // instead of an array:\n  //\n  //   Npm.strip({\n  //     connect: /*\\.wmv$/,\n  //     useragent: \"tests/\"\n  //   });\n  //\n  // This means (1) \"remove any files with the `.wmv` extension from\n  // the 'connect' package directory\" and (2) \"remove the 'tests'\n  // directory from the 'useragent' package directory.\"\n  strip(discards) {\n    this._discards.merge(discards);\n  }\n\n  require(name) {\n    try {\n      return nodeRequire(name); // from the dev bundle\n    } catch (e) {\n      buildmessage.error(\n        \"can't find npm module '\" + name +\n          \"'. In package.js, Npm.require can only find built-in modules.\",\n        { useMyCaller: true });\n      // recover by, uh, returning undefined, which is likely to\n      // have some knock-on effects\n    }\n  }\n}\n"],"file":"tools/isobuild/package-npm.js.map"}