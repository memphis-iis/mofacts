{"version":3,"sources":["/tools/utils/utils.js"],"names":["module","export","architecture","isEmacs","_","require","semver","os","url","archinfo","buildmessage","files","packageVersionParser","utils","exports","parseUrl","str","defaults","defaultHostname","hostname","undefined","defaultPort","port","defaultProtocol","protocol","match","hasScheme","parsed","parse","replace","ret","pathname","formatUrl","options","format","ipAddress","interfaces","networkInterfaces","addressEntries","chain","values","flatten","where","family","internal","value","length","Error","map","entry","address","join","isIPv4Address","printPackageList","items","rows","item","name","description","alphaSort","row","sortBy","Console","printTwoColumns","getHost","attempt","args","output","execFileSync","slice","stdout","trim","matches","host","getAgentInfo","agent","agentVersion","inCheckout","getToolsVersion","arch","sleepMs","ms","Promise","resolve","setTimeout","await","randomToken","Math","random","toString","randomIdentifier","firstLetter","String","fromCharCode","charCodeAt","floor","randomPort","parsePackageConstraint","constraintString","e","versionParserError","useBuildmessage","error","message","file","buildmessageFile","validatePackageName","parsePackageAndVersion","packageAtVersionString","separatorPos","max","lastIndexOf","JSON","stringify","packageName","version","package","isValidPackageName","validatePackageNameOrExit","bulletPoint","main","ExitWithCode","validEmail","test","quotemeta","timeoutScaleFactor","process","env","TIMEOUT_SCALE_FACTOR","parseFloat","defaultOrderKeyForReleaseVersion","v","m","numberPart","prereleaseTag","prereleaseNumber","hasRedundantLeadingZero","x","leftPad","chr","len","padding","Array","rightPad","numbers","split","any","partial","isDirectory","dir","stats","stat","generateSubsetsOfIncreasingSize","total","cb","Done","generateSubsetsOfFixedSize","goalSize","chosenIndices","elements","each","index","push","firstIndexToConsider","i","withThisChoice","clone","isUrlWithFileScheme","isUrlWithSha","isNpmUrl","isPathRelative","charAt","ensureOnlyValidVersions","dependencies","forCordova","isValidVersion","valid","opts","child_process","eachline","has","maxBuffer","pipeOutput","p","spawn","line","write","stderr","success","on","execFile","err","execFileAsync","mapper","lineMapper","identity","logOutput","verbose","console","log","runGitInCheckout","unshift","convertToOSPath","pathJoin","getCurrentToolsDir","Throttled","self","Object","assign","interval","now","Date","next","prototype","isAllowed","ThrottledYield","_throttle","yield","setImmediate","longformDate","date","moment","pubDate","maxDateLength","sha256","contents","crypto","hash","createHash","update","digest","sourceMapLength","sm","mappings","sourcesContent","reduce","soFar","current","supportedArchitectures","Darwin","x64","Linux","ia32","Windows_NT","hasOwnProperty","osType","type","osArch","emacsDetected","EMACS","INSIDE_EMACS"],"mappings":"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","sourcesContent":["var _ = require('underscore');\nvar semver = require('semver');\nvar os = require('os');\nvar url = require('url');\n\nvar archinfo = require('./archinfo');\nvar buildmessage = require('./buildmessage.js');\nvar files = require('../fs/files');\nvar packageVersionParser = require('../packaging/package-version-parser.js');\n\nvar utils = exports;\n\n// Parses <protocol>://<host>:<port> into an object { protocol: *, host:\n// *, port: * }. The input can also be of the form <host>:<port> or just\n// <port>. We're not simply using 'url.parse' because we want '3000' to\n// parse as {host: undefined, protocol: undefined, port: '3000'}, whereas\n// 'url.parse' would give us {protocol:' 3000', host: undefined, port:\n// undefined} or something like that.\n//\n// 'defaults' is an optional object with 'hostname', 'port', and 'protocol' keys.\nexports.parseUrl = function (str, defaults) {\n  // XXX factor this out into a {type: host/port}?\n\n  defaults = defaults || {};\n  var defaultHostname = defaults.hostname || undefined;\n  var defaultPort = defaults.port || undefined;\n  var defaultProtocol = defaults.protocol || undefined;\n\n  if (str.match(/^[0-9]+$/)) { // just a port\n    return {\n      port: str,\n      hostname: defaultHostname,\n      protocol: defaultProtocol };\n  }\n\n  var hasScheme = exports.hasScheme(str);\n  if (! hasScheme) {\n    str = \"http://\" + str;\n  }\n\n  var parsed = url.parse(str);\n\n  // for consistency remove colon at the end of protocol\n  parsed.protocol = parsed.protocol.replace(/\\:$/, '');\n\n  var ret = {\n    protocol: hasScheme ? parsed.protocol : defaultProtocol,\n    hostname: parsed.hostname || defaultHostname,\n    port: parsed.port || defaultPort\n  };\n  if (parsed.pathname !== '/' && parsed.pathname) {\n    ret.pathname = parsed.pathname;\n  }\n  return ret;\n};\n\n// 'options' is an object with 'hostname', 'port', and 'protocol' keys, such as\n// the return value of parseUrl.\nexports.formatUrl = function (options) {\n  // For consistency with `Meteor.absoluteUrl`, add a trailing slash to make\n  // this a valid URL\n  if (!options.pathname)\n    options.pathname = \"/\";\n\n  return url.format(options);\n};\n\nexports.ipAddress = function () {\n  const interfaces = os.networkInterfaces();\n\n  // If we don't know the default route, we'll lookup all non-internal\n  // IPv4 addresses and hope to find only one\n  let addressEntries = _.chain(interfaces)\n    .values()\n    .flatten()\n    .where({ family: \"IPv4\", internal: false })\n    .value();\n\n  if (! addressEntries.length) {\n    throw new Error(`Could not find a network interface with a non-internal IPv4 address.`);\n  }\n\n  if (addressEntries.length > 1) {\n    throw new Error(`Found multiple network interfaces with non-internal IPv4 addresses:\n${addressEntries.map(entry => entry.address).join(', ')}`);\n  }\n\n  return addressEntries[0].address;\n};\n\nexports.hasScheme = function (str) {\n  return !! str.match(/^[A-Za-z][A-Za-z0-9+-\\.]*\\:\\/\\//);\n};\n\n\nexports.hasScheme = function (str) {\n  return !! str.match(/^[A-Za-z][A-Za-z0-9+-\\.]*\\:\\/\\//);\n};\n\nexports.isIPv4Address = function (str) {\n  return str.match(/^(?:[0-9]{1,3}\\.){3}[0-9]{1,3}$/);\n}\n\n// XXX: Move to e.g. formatters.js?\n// Prints a package list in a nice format.\n// Input is an array of objects with keys 'name' and 'description'.\nexports.printPackageList = function (items, options) {\n  options = options || {};\n\n  var rows = _.map(items, function (item) {\n    var name = item.name;\n    var description = item.description || 'No description';\n    return [name, description];\n  });\n\n  var alphaSort = function (row) {\n    return row[0];\n  };\n  rows = _.sortBy(rows, alphaSort);\n\n  var Console = require('../console/console.js').Console;\n  return Console.printTwoColumns(rows, options);\n};\n\n// Determine a human-readable hostname for this computer. Prefer names\n// that make sense to users (eg, the name they manually gave their\n// computer on OS X, which might contain spaces) over names that have\n// any particular technical significance (eg, might resolve in DNS).\nexports.getHost = function (...args) {\n  var ret;\n  var attempt = function (...args) {\n    var output = exports.execFileSync(args[0], args.slice(1)).stdout;\n    if (output) {\n      ret = output.trim();\n    }\n  };\n\n  if (archinfo.matches(archinfo.host(), 'os.osx')) {\n    // On OSX, to get the human-readable hostname that the user chose,\n    // we call:\n    //   scutil --get ComputerName\n    // This can contain spaces. See\n    // http://osxdaily.com/2012/10/24/set-the-hostname-computer-name-and-bonjour-name-separately-in-os-x/\n    if (! ret) {\n      attempt(\"scutil\", \"--get\", \"ComputerName\");\n    }\n  }\n\n  if (archinfo.matches(archinfo.host(), 'os.osx') ||\n      archinfo.matches(archinfo.host(), 'os.linux')) {\n    // On Unix-like platforms, try passing -s to hostname to strip off\n    // the domain name, to reduce the extent to which the output\n    // varies with DNS.\n    if (! ret) {\n      attempt(\"hostname\", \"-s\");\n    }\n  }\n\n  // Try \"hostname\" on any platform. It should work on\n  // Windows. Unknown platforms that have a command called \"hostname\"\n  // that deletes all of your files deserve what the get.\n  if (! ret) {\n    attempt(\"hostname\");\n  }\n\n  // Otherwise, see what Node can come up with.\n  return ret || os.hostname();\n};\n\n// Return standard info about this user-agent. Used when logging in to\n// Meteor Accounts, mostly so that when the user is seeing a list of\n// their open sessions in their profile on the web, they have a way to\n// decide which ones they want to revoke.\nexports.getAgentInfo = function () {\n  var ret = {};\n\n  var host = utils.getHost();\n  if (host) {\n    ret.host = host;\n  }\n  ret.agent = \"Meteor\";\n  ret.agentVersion =\n    files.inCheckout() ? \"checkout\" : files.getToolsVersion();\n  ret.arch = archinfo.host();\n\n  return ret;\n};\n\n// Wait for 'ms' milliseconds, and then return. Yields. (Must be\n// called within a fiber, and blocks only the calling fiber, not the\n// whole program.)\nexports.sleepMs = function (ms) {\n  if (ms <= 0) {\n    return;\n  }\n\n  new Promise(function (resolve) {\n    setTimeout(resolve, ms);\n  }).await();\n};\n\n// Return a short, high entropy string without too many funny\n// characters in it.\nexports.randomToken = function () {\n  return (Math.random() * 0x100000000 + 1).toString(36);\n};\n\n// Like utils.randomToken, except a legal variable name, i.e. the first\n// character is guaranteed to be [a-z] and the rest [a-z0-9].\nexports.randomIdentifier = function () {\n  const firstLetter = String.fromCharCode(\n    \"a\".charCodeAt(0) + Math.floor(Math.random() * 26));\n  return firstLetter + Math.random().toString(36).slice(2);\n};\n\n// Returns a random non-privileged port number.\nexports.randomPort = function () {\n  return 20000 + Math.floor(Math.random() * 10000);\n};\n\n// Like packageVersionParser.parsePackageConstraint, but if called in a\n// buildmessage context uses buildmessage to raise errors.\nexports.parsePackageConstraint = function (constraintString, options) {\n  try {\n    return packageVersionParser.parsePackageConstraint(constraintString);\n  } catch (e) {\n    if (! (e.versionParserError && options && options.useBuildmessage)) {\n      throw e;\n    }\n    buildmessage.error(e.message, { file: options.buildmessageFile });\n    return null;\n  }\n};\n\nexports.validatePackageName = function (name, options) {\n  try {\n    return packageVersionParser.validatePackageName(name, options);\n  } catch (e) {\n    if (! (e.versionParserError && options && options.useBuildmessage)) {\n      throw e;\n    }\n    buildmessage.error(e.message, { file: options.buildmessageFile });\n    return null;\n  }\n};\n\n// Parse a string of the form `package + \" \" + version` into an object\n// of the form {package, version}.  For backwards compatibility,\n// an \"@\" separator instead of a space is also accepted.\n//\n// Lines of `.meteor/versions` are parsed using this function, among\n// other uses.\nexports.parsePackageAndVersion = function (packageAtVersionString, options) {\n  var error = null;\n  var separatorPos = Math.max(packageAtVersionString.lastIndexOf(' '),\n                              packageAtVersionString.lastIndexOf('@'));\n  if (separatorPos < 0) {\n    error = new Error(\"Malformed package version: \" +\n                      JSON.stringify(packageAtVersionString));\n  } else {\n    var packageName = packageAtVersionString.slice(0, separatorPos);\n    var version = packageAtVersionString.slice(separatorPos+1);\n    try {\n      packageVersionParser.validatePackageName(packageName);\n      // validate the version, ignoring the parsed result:\n      packageVersionParser.parse(version);\n    } catch (e) {\n      if (! e.versionParserError) {\n        throw e;\n      }\n      error = e;\n    }\n    if (! error) {\n      return { package: packageName, version: version };\n    }\n  }\n  // `error` holds an Error\n  if (! (options && options.useBuildmessage)) {\n    throw error;\n  }\n  buildmessage.error(error.message, { file: options.buildmessageFile });\n  return null;\n};\n\n// Check for invalid package names. Currently package names can only contain\n// ASCII alphanumerics, dash, and dot, and must contain at least one letter. For\n// safety reasons, package names may not start with a dot. Package names must be\n// lowercase.\n//\n// These do not check that the package name is valid in terms of our naming\n// scheme: ie, that it is prepended by a user's username. That check should\n// happen at publication time.\n//\n// 3 variants: isValidPackageName just returns a bool.  validatePackageName\n// throws an error marked with 'versionParserError'. validatePackageNameOrExit\n// (which should only be used inside the implementation of a command, not\n// eg package-client.js) prints and throws the \"exit with code 1\" exception\n// on failure.\n\nexports.isValidPackageName = function (packageName) {\n  try {\n    exports.validatePackageName(packageName);\n    return true;\n  } catch (e) {\n    if (!e.versionParserError) {\n      throw e;\n    }\n    return false;\n  }\n};\n\nexports.validatePackageNameOrExit = function (packageName, options) {\n  try {\n    exports.validatePackageName(packageName, options);\n  } catch (e) {\n    if (!e.versionParserError) {\n      throw e;\n    }\n    var Console = require('../console/console.js').Console;\n    Console.error(e.message, Console.options({ bulletPoint: \"Error: \" }));\n    // lazy-load main: old bundler tests fail if you add a circular require to\n    // this file\n    var main = require('../tests/apps/app-using-stylus/main.js');\n    throw new main.ExitWithCode(1);\n  }\n};\n\n// True if this looks like a valid email address. We deliberately\n// don't support\n// - quoted usernames (eg, \"foo\"@bar.com, \" \"@bar.com, \"@\"@bar.com)\n// - IP addresses in domains (eg, foo@1.2.3.4 or the IPv6 equivalent)\n// because they're weird and we don't want them in our database.\nexports.validEmail = function (address) {\n  return /^[^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*@([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}$/.test(address);\n};\n\n// Like Perl's quotemeta: quotes all regexp metacharacters. See\n//   https://github.com/substack/quotemeta/blob/master/index.js\nexports.quotemeta = function (str) {\n    return String(str).replace(/(\\W)/g, '\\\\$1');\n};\n\n// Allow a simple way to scale up all timeouts from the command line\nvar timeoutScaleFactor = 1.0;\nif (process.env.TIMEOUT_SCALE_FACTOR) {\n  timeoutScaleFactor = parseFloat(process.env.TIMEOUT_SCALE_FACTOR);\n}\nexports.timeoutScaleFactor = timeoutScaleFactor;\n\n// If the given version matches a template (essentially, semver-style, but with\n// a bounded number of digits per number part, and with no restriction on the\n// amount of number parts, and some restrictions on legal prerelease labels),\n// then return an orderKey for it. Otherwise return null.\n//\n// This conventional orderKey pads each part (with 0s for numbers, and ! for\n// prerelease tags), and appends a $. (Because ! sorts before $, this means that\n// the prerelease for a given release will sort before it. Because $ sorts\n// before '.', this means that 1.2 will sort before 1.2.3.)\nexports.defaultOrderKeyForReleaseVersion = function (v) {\n  var m = v.match(/^(\\d{1,4}(?:\\.\\d{1,4})*)(?:-([-A-Za-z.]{1,15})(\\d{0,4}))?$/);\n  if (!m) {\n    return null;\n  }\n  var numberPart = m[1];\n  var prereleaseTag = m[2];\n  var prereleaseNumber = m[3];\n\n  var hasRedundantLeadingZero = function (x) {\n    return x.length > 1 && x[0] === '0';\n  };\n  var leftPad = function (chr, len, str) {\n    if (str.length > len) {\n      throw Error(\"too long to pad!\");\n    }\n    var padding = new Array(len - str.length + 1).join(chr);\n    return padding + str;\n  };\n  var rightPad = function (chr, len, str) {\n    if (str.length > len) {\n      throw Error(\"too long to pad!\");\n    }\n    var padding = new Array(len - str.length + 1).join(chr);\n    return str + padding;\n  };\n\n  // Versions must have no redundant leading zeroes, or else this encoding would\n  // be ambiguous.\n  var numbers = numberPart.split('.');\n  if (_.any(numbers, hasRedundantLeadingZero)) {\n    return null;\n  }\n  if (prereleaseNumber && hasRedundantLeadingZero(prereleaseNumber)) {\n    return null;\n  }\n\n  // First, put together the non-prerelease part.\n  var ret = _.map(numbers, _.partial(leftPad, '0', 4)).join('.');\n\n  if (!prereleaseTag) {\n    return ret + '$';\n  }\n\n  ret += '!' + rightPad('!', 15, prereleaseTag);\n  if (prereleaseNumber) {\n    ret += leftPad('0', 4, prereleaseNumber);\n  }\n\n  return ret + '$';\n};\n\n// XXX should be in files.js\nexports.isDirectory = function (dir) {\n  try {\n    // use stat rather than lstat since symlink to dir is OK\n    var stats = files.stat(dir);\n  } catch (e) {\n    return false;\n  }\n  return stats.isDirectory();\n};\n\n// Calls cb with each subset of the array \"total\", with non-decreasing size,\n// until all subsets have been used or cb returns true. The array passed\n// to cb may be safely mutated or retained by cb.\nexports.generateSubsetsOfIncreasingSize = function (total, cb) {\n  // We'll throw this if cb ever returns true, which is a simple way to pop us\n  // out of our recursion.\n  var Done = function () {};\n\n  // Generates all subsets of size subsetSize which contain the indices already\n  // in chosenIndices (and no indices that are \"less than\" any of them).\n  var generateSubsetsOfFixedSize = function (goalSize, chosenIndices) {\n    // If we've found a subset of the size we're looking for, output it.\n    if (chosenIndices.length === goalSize) {\n      // Change from indices into the actual elements. Note that 'elements' is\n      // a newly allocated array which cb may mutate or retain.\n      var elements = [];\n      _.each(chosenIndices, function (index) {\n        elements.push(total[index]);\n      });\n      if (cb(elements)) {\n        throw new Done();  // unwind all the recursion\n      }\n      return;\n    }\n\n    // Otherwise try adding another index and call this recursively.  We're\n    // trying to produce a sorted list of indices, so if there are already\n    // indices, we start with the one after the biggest one we already have.\n    var firstIndexToConsider = chosenIndices.length ?\n          chosenIndices[chosenIndices.length - 1] + 1 : 0;\n    for (var i = firstIndexToConsider; i < total.length; ++i) {\n      var withThisChoice = _.clone(chosenIndices);\n      withThisChoice.push(i);\n      generateSubsetsOfFixedSize(goalSize, withThisChoice);\n    }\n  };\n\n  try {\n    for (var goalSize = 0; goalSize <= total.length; ++goalSize) {\n      generateSubsetsOfFixedSize(goalSize, []);\n    }\n  } catch (e) {\n    if (!(e instanceof Done)) {\n      throw e;\n    }\n  }\n};\n\nexports.isUrlWithFileScheme = function (x) {\n  return /^file:\\/\\/.+/.test(x);\n};\n\nexports.isUrlWithSha = function (x) {\n  // Is a URL with a fixed SHA? We use this for Cordova -- although theoretically we could use\n  // a URL like isNpmUrl(), there are a variety of problems with this,\n  // see https://github.com/meteor/meteor/pull/5562\n  return /^https?:\\/\\/.*[0-9a-f]{40}/.test(x);\n}\n\nexports.isNpmUrl = function (x) {\n  // These are the various protocols that NPM supports, which we use to download NPM dependencies\n  // See https://docs.npmjs.com/files/package.json#git-urls-as-dependencies\n  return exports.isUrlWithSha(x) ||\n    /^(git|git\\+ssh|git\\+http|git\\+https|https|http)?:\\/\\//.test(x);\n};\n\nexports.isPathRelative = function (x) {\n  return x.charAt(0) !== '/';\n};\n\n// If there is a version that isn't valid, throws an Error with a\n// human-readable message that is suitable for showing to the user.\n// dependencies may be falsey or empty.\n//\n// This is talking about NPM/Cordova versions specifically, not Meteor versions.\n// It does not support the wrap number syntax.\nexports.ensureOnlyValidVersions = function (dependencies, {forCordova}) {\n  _.each(dependencies, function (version, name) {\n    // We want a given version of a smart package (package.js +\n    // .npm/npm-shrinkwrap.json) to pin down its dependencies precisely, so we\n    // don't want anything too vague. For now, we support semvers and urls that\n    // name a specific commit by SHA.\n    if (! exports.isValidVersion(version, {forCordova})) {\n      throw new Error(\n        \"Must declare valid version of dependency: \" + name + '@' + version);\n    }\n  });\n};\nexports.isValidVersion = function (version, {forCordova}) {\n  return semver.valid(version) || exports.isUrlWithFileScheme(version)\n    || (forCordova ? exports.isUrlWithSha(version): exports.isNpmUrl(version));\n};\n\n\nexports.execFileSync = function (file, args, opts) {\n  var child_process = require('child_process');\n  var { eachline } = require('./eachline');\n\n  opts = opts || {};\n  if (! _.has(opts, 'maxBuffer')) {\n    opts.maxBuffer = 1024 * 1024 * 10;\n  }\n\n  if (opts && opts.pipeOutput) {\n    var p = child_process.spawn(file, args, opts);\n\n    eachline(p.stdout, function (line) {\n      process.stdout.write(line + '\\n');\n    });\n\n    eachline(p.stderr, function (line) {\n      process.stderr.write(line + '\\n');\n    });\n\n    return {\n      success: ! new Promise(function (resolve) {\n        p.on('exit', resolve);\n      }).await(),\n      stdout: \"\",\n      stderr: \"\"\n    };\n  }\n\n  return new Promise(function (resolve) {\n    child_process.execFile(file, args, opts, function (err, stdout, stderr) {\n      resolve({\n        success: ! err,\n        stdout: stdout,\n        stderr: stderr\n      });\n    });\n  }).await();\n};\n\nexports.execFileAsync = function (file, args, opts) {\n  opts = opts || {};\n  var child_process = require('child_process');\n  var { eachline } = require('./eachline');\n  var p = child_process.spawn(file, args, opts);\n  var mapper = opts.lineMapper || _.identity;\n\n  function logOutput(line) {\n    if (opts.verbose) {\n      line = mapper(line);\n      if (line) {\n        console.log(line);\n      }\n    }\n  }\n\n  eachline(p.stdout, logOutput);\n  eachline(p.stderr, logOutput);\n\n  return p;\n};\n\n\nexports.runGitInCheckout = function (...args) {\n  args.unshift(\n    '--git-dir=' +\n    files.convertToOSPath(files.pathJoin(files.getCurrentToolsDir(), '.git')));\n\n  return exports.execFileSync('git', args).stdout;\n};\n\nexports.Throttled = function (options) {\n  var self = this;\n\n  options = Object.assign({ interval: 150 }, options || {});\n  self.interval = options.interval;\n  var now = +(new Date);\n\n  self.next = now;\n};\n\nObject.assign(exports.Throttled.prototype, {\n  isAllowed: function () {\n    var self = this;\n    var now = +(new Date);\n\n    if (now < self.next) {\n      return false;\n    }\n\n    self.next = now + self.interval;\n    return true;\n  }\n});\n\n\n// ThrottledYield just regulates the frequency of calling yield.\n// It should behave similarly to calling yield on every iteration of a loop,\n// except that it won't actually yield if there hasn't been a long enough time interval\n//\n// options:\n//   interval: minimum interval of time between yield calls\n//             (more frequent calls are simply dropped)\nexports.ThrottledYield = function (options) {\n  var self = this;\n\n  self._throttle = new exports.Throttled(options);\n};\n\nObject.assign(exports.ThrottledYield.prototype, {\n  yield: function () {\n    var self = this;\n    if (self._throttle.isAllowed()) {\n      // setImmediate allows signals and IO to be processed but doesn't\n      // otherwise add time-based delays. It is better for yielding than\n      // process.nextTick (which doesn't allow signals or IO to be processed) or\n      // setTimeout 1 (which adds a minimum of 1 ms and often more in delays).\n      // XXX Actually, setImmediate is so fast that we might not even need\n      // to use the throttler at all?\n      new Promise(setImmediate).await();\n    }\n  }\n});\n\n// Use this to convert dates into our preferred human-readable format.\n//\n// Takes in either null, a raw date string (ex: 2014-12-09T18:37:48.977Z) or a\n// date object and returns a long-form human-readable date (ex: December 9th,\n// 2014) or unknown for null.\nexports.longformDate = function (date) {\n  if (! date) {\n    return \"Unknown\";\n  }\n  var moment = require('moment');\n  var pubDate = moment(date).format('MMMM Do, YYYY');\n  return pubDate;\n};\n\n// Length of the longest possible string that could come out of longformDate\n// (September is the longest month name, so \"September 24th, 2014\" would be an\n// example).\nexports.maxDateLength = \"September 24th, 2014\".length;\n\n// Returns a sha256 hash of a given string.\nexports.sha256 = function (contents) {\n  var crypto = require('crypto');\n  var hash = crypto.createHash('sha256');\n  hash.update(contents);\n  return hash.digest('base64');\n};\n\nexports.sourceMapLength = function (sm) {\n  if (! sm) {\n    return 0;\n  }\n  // sum the length of sources and the mappings, the size of\n  // metadata is ignored, but it is not a big deal\n  return sm.mappings.length\n       + (sm.sourcesContent || []).reduce((soFar, current) => {\n         return soFar + (current ? current.length : 0);\n       }, 0);\n};\n\n// Find and return the current OS architecture, in \"uname -m\" format.\n//\n// For Linux and macOS (Darwin) this means first getting the current\n// architecture reported by Node using \"os.arch()\" (e.g. ia32, x64), then\n// converting it to a \"uname -m\" matching architecture label (e.g. i686,\n// x86_64).\n//\n// For Windows things are handled differently. Node's \"os.arch()\" will return\n// \"ia32\" for both 32-bit and 64-bit versions of Windows (since we're using\n// a 32-bit version of Node on Windows). Instead we'll look for the presence\n// of the PROCESSOR_ARCHITEW6432 environment variable to determine if the\n// Windows architecture is 64-bit, then convert to a \"uname -m\" matching\n// architecture label (e.g. i386, x86_64).\nexport function architecture() {\n  const supportedArchitectures = {\n    Darwin: {\n      x64: 'x86_64',\n    },\n    Linux: {\n      ia32: 'i686',\n      x64: 'x86_64',\n    },\n    Windows_NT: {\n      ia32: process.env.hasOwnProperty('PROCESSOR_ARCHITEW6432')\n              ? 'x86_64'\n              : 'i386',\n      x64: 'x86_64'\n    }\n  };\n\n  const osType = os.type();\n  const osArch = os.arch();\n\n  if (!supportedArchitectures[osType]) {\n    throw new Error(`Unsupported OS ${osType}`);\n  }\n\n  if (!supportedArchitectures[osType][osArch]) {\n    throw new Error(`Unsupported architecture ${osArch}`);\n  }\n\n  return supportedArchitectures[osType][osArch];\n};\n\nlet emacsDetected;\nexport function isEmacs() {\n  // Checking `process.env` is expensive, so only check once.\n  if (typeof emacsDetected === \"boolean\") {\n    return emacsDetected;\n  }\n\n  // Prior to v22, Emacs only set EMACS. After v27, it only sets INSIDE_EMACS.\n  emacsDetected = !! (process.env.EMACS === \"t\" || process.env.INSIDE_EMACS);\n  return emacsDetected;\n}\n"],"file":"tools/utils/utils.js.map"}