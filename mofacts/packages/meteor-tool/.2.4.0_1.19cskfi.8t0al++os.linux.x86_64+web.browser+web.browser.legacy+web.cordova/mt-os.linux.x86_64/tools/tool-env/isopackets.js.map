{"version":3,"sources":["/tools/tool-env/isopackets.js"],"names":["module","export","ISOPACKETS","loadIsopackage","ensureIsopacketsLoadable","makeIsopacketBuildContext","Builder","link","default","v","assert","require","_","bundler","compiler","isopackCacheModule","buildmessage","files","config","watch","Console","fiberHelpers","packageMapModule","archinfo","Profile","combined","loadedIsopackets","packageName","isopacketName","strictEqual","host","split","isopacket","has","loadIsopacketFromDisk","Error","isopacketPath","pathJoin","getIsopacketRoot","calledEnsure","inCheckout","each","packages","name","isopacketBuildContext","failedPackageBuild","messages","withProgressDisplayVisible","capture","isopacketRoot","existingBuildinfo","readJSONOrNull","needRebuild","builtBy","BUILT_BY","watchSet","WatchSet","fromJSON","isUpToDate","enterJob","title","isopackCache","buildLocalPackages","jobHasMessages","built","buildJsImage","packageMap","use","builder","outputPath","writeJson","toJSON","image","write","complete","hasMessages","error","printMessages","newIsopacketBuildingCatalog","catalogLocal","isopacketCatalog","LocalCatalog","packagesDir","getCurrentToolsDir","initialize","localPackageSearchDirs","buildingIsopackets","arrowError","context","catalog","versions","getAllPackageNames","getLatestVersion","version","PackageMap","localCatalog","IsopackCache","includeCordovaUnibuild","noLineNumbers","readJsImage","env","__meteor_bootstrap__","startupHooks","__meteor_runtime_config__","meteorRelease","ret","load","length","hook","shift"],"mappings":"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","sourcesContent":["var assert = require('assert');\nvar _ = require('underscore');\n\nvar bundler = require('../isobuild/bundler.js');\nimport Builder from '../isobuild/builder.js';\nvar compiler = require('../isobuild/compiler.js');\nvar isopackCacheModule = require('../isobuild/isopack-cache.js');\n\nvar buildmessage = require('../utils/buildmessage.js');\nvar files = require('../fs/files');\nvar config = require('../meteor-services/config.js');\nvar watch = require('../fs/watch');\nvar Console = require('../console/console.js').Console;\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar packageMapModule = require('../packaging/package-map.js');\nvar archinfo = require('../utils/archinfo');\nvar Profile = require('./profile').Profile;\n\n// TL;DR: Isopacket is a set of isopacks. Isopackets are used only inside\n// meteor-tool.\n\n// An isopacket is a predefined set of isopackages which the meteor command-line\n// tool can load into its process. This is how we use the DDP client and many\n// other packages inside the tool. The isopackets are listed below in the\n// ISOPACKETS constant.\n//\n// All packages that are in isopackets and all of their transitive dependencies\n// must be part of the core Meteor git checkout (not loaded from troposphere).\n//\n// The requested packages will be loaded together with all of their\n// dependencies. If you request to load the same isopacket more than once, you\n// will efficiently get the same pre-loaded isopacket. On the other hand, two\n// different loaded isopackets contain distinct copies of all of their packages\n// copy of all of the packages. The return value is an object that maps package\n// name to package exports (that is, it is the Package object from inside the\n// sandbox created for the newly loaded packages).\n//\n// For built releases, all of the isopackets are pre-compiled (as JsImages,\n// similar to a plugin or a server program) into the tool.\n//\n// When run from a checkout, all isopackets are re-compiled early in the startup\n// process if any of their sources have changed.\n//\n// Example usage:\n//   var DDP = require('./isopackets.js').loadIsopackage('ddp-client').DDP;\n//   var reverse = DDP.connect('reverse.meteor.com');\n//   Console.info(reverse.call('reverse', 'hello world'));\n\n\n// All of the defined isopackets. Whenever they are being built, they will be\n// built in the order listed here.\nexport const ISOPACKETS = {\n  // These packages used to be divided up into distinct isopackets, but\n  // that resulted in extremely wasteful duplication of transitive\n  // dependencies, so now we have only one isopacket that combines all the\n  // dependencies of every former isopacket.\n  combined: [\n    // ddp\n    'ddp-client',\n    // mongo\n    'npm-mongo',\n    // ejson\n    'ejson',\n    // constraint-solver\n    'constraint-solver',\n    // cordova-support\n    'boilerplate-generator',\n    'webapp-hashing',\n    // cordova-support, logging\n    'logging',\n    // support for childProcess.sendMessage(topic, payload)\n    'inter-process-messaging',\n  ]\n};\n\n// Caches isopackets in memory (each isopacket only needs to be loaded\n// once).  This is a map from isopacket name to either:\n//\n//  - The 'Package' dictionary, if the isopacket has already been loaded\n//    into memory\n//  - null, if the isopacket hasn't been loaded into memory but its on-disk\n//    instance is known to be ready\n//\n// The subtlety here is that when running from a checkout, we don't want to\n// accidentally load an isopacket before ensuring that it doesn't need to be\n// rebuilt. We used to need to load a \"js-analyze\" isopacket as part\n// of building other isopackets in ensureIsopacketsLoadable which made this\n// more important, though we've simplified it now by moving that code into\n// the tool itself.\nvar loadedIsopackets = {};\n\n// The main entry point: loads the specified isopacket (\"combined\" by\n// default) from cache or from disk, and returns the requested package\n// dependency, complaining if the package does not exist. Note that\n// ensureIsopacketsLoadable must be called first, as this function does\n// not trigger any building.\nexport function loadIsopackage(packageName, isopacketName = \"combined\") {\n  // Small but necessary hack: because archinfo.host() calls execFileSync,\n  // it yields the first time we call it, which is a problem for the\n  // fiberHelpers.noYieldsAllowed block below. Calling it here ensures the\n  // result is cached, so no yielding occurs later.\n  assert.strictEqual(archinfo.host().split(\".\", 1)[0], \"os\");\n\n  const isopacket = function () {\n    if (_.has(loadedIsopackets, isopacketName)) {\n      if (loadedIsopackets[isopacketName]) {\n        return loadedIsopackets[isopacketName];\n      }\n\n      // This is the case where the isopacket is up to date on disk but not\n      // loaded.\n      return loadedIsopackets[isopacketName] =\n        loadIsopacketFromDisk(isopacketName);\n    }\n\n    if (_.has(ISOPACKETS, isopacketName)) {\n      throw Error(\"Can't load isopacket before it has been verified: \"\n        + isopacketName);\n    }\n\n    throw Error(\"Unknown isopacket: \" + isopacketName);\n  }();\n\n  if (!_.has(isopacket, packageName)) {\n    throw new Error(\"Unknown isopacket dependency: \" + packageName);\n  }\n\n  return isopacket[packageName];\n}\n\nvar isopacketPath = function (isopacketName) {\n  return files.pathJoin(config.getIsopacketRoot(), isopacketName);\n};\n\n// ensureIsopacketsLoadable is called at startup and ensures that all isopackets\n// exist on disk as up-to-date loadable programs.\nvar calledEnsure = false;\nexport function ensureIsopacketsLoadable() {\n  if (calledEnsure) {\n    throw Error(\"can't ensureIsopacketsLoadable twice!\");\n  }\n  calledEnsure = true;\n\n  // If we're not running from checkout, then there's nothing to build and we\n  // can declare that all isopackets are loadable.\n  if (!files.inCheckout()) {\n    _.each(ISOPACKETS, function (packages, name) {\n      loadedIsopackets[name] = null;\n    });\n    return;\n  }\n\n  // We make this object lazily later.\n  var isopacketBuildContext = null;\n\n  var failedPackageBuild = false;\n  // Look at each isopacket. Check to see if it's on disk and up to date. If\n  // not, build it. We rebuild them in the order listed in ISOPACKETS.\n  var messages = Console.withProgressDisplayVisible(function () {\n    return buildmessage.capture(function () {\n      _.each(ISOPACKETS, function (packages, isopacketName) {\n        if (failedPackageBuild) {\n          return;\n        }\n\n        var isopacketRoot = isopacketPath(isopacketName);\n        var existingBuildinfo = files.readJSONOrNull(\n          files.pathJoin(isopacketRoot, 'isopacket-buildinfo.json'));\n        var needRebuild = !existingBuildinfo;\n        if (!needRebuild && existingBuildinfo.builtBy !== compiler.BUILT_BY) {\n          needRebuild = true;\n        }\n        if (!needRebuild) {\n          var watchSet = watch.WatchSet.fromJSON(existingBuildinfo.watchSet);\n          if (!watch.isUpToDate(watchSet)) {\n            needRebuild = true;\n          }\n        }\n        if (!needRebuild) {\n          // Great, it's loadable without a rebuild.\n          loadedIsopackets[isopacketName] = null;\n          return;\n        }\n\n        // We're going to need to build! Make a catalog and loader if we haven't\n        // yet.\n        if (!isopacketBuildContext) {\n          isopacketBuildContext = makeIsopacketBuildContext();\n        }\n\n        buildmessage.enterJob({\n          title: \"bundling \" + isopacketName + \" packages for the tool\"\n        }, function () {\n          // Build the packages into the in-memory IsopackCache.\n          isopacketBuildContext.isopackCache.buildLocalPackages(packages);\n          if (buildmessage.jobHasMessages()) {\n            return;\n          }\n\n          // Now bundle them into a program.\n          var built = bundler.buildJsImage({\n            name: \"isopacket-\" + isopacketName,\n            packageMap: isopacketBuildContext.packageMap,\n            isopackCache: isopacketBuildContext.isopackCache,\n            use: packages\n          });\n          if (buildmessage.jobHasMessages()) {\n            return;\n          }\n\n          var builder = new Builder({ outputPath: isopacketRoot });\n          builder.writeJson('isopacket-buildinfo.json', {\n            builtBy: compiler.BUILT_BY,\n            watchSet: built.watchSet.toJSON()\n          });\n          built.image.write(builder);\n          builder.complete();\n          // It's loadable now.\n          loadedIsopackets[isopacketName] = null;\n        });\n      });\n    });\n  });\n\n  // This is a build step ... but it's one that only happens in development, so\n  // it can just crash the app instead of being handled nicely.\n  if (messages.hasMessages()) {\n    Console.error(\"Errors prevented isopacket build:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket build failed?\");\n  }\n}\n\n// Returns a new all-local-packages catalog to be used for building isopackets.\nvar newIsopacketBuildingCatalog = function () {\n  if (!files.inCheckout()) {\n    throw Error(\"No need to build isopackets unless in checkout!\");\n  }\n\n  var catalogLocal = require('../packaging/catalog/catalog-local.js');\n  var isopacketCatalog = new catalogLocal.LocalCatalog;\n  var messages = buildmessage.capture(\n    { title: \"scanning local core packages\" },\n    function () {\n      const packagesDir =\n        files.pathJoin(files.getCurrentToolsDir(), 'packages');\n\n      // When running from a checkout, isopacket building does use local\n      // packages, but *ONLY THOSE FROM THE CHECKOUT*: not app packages or\n      // $PACKAGE_DIRS packages.  One side effect of this: we really really\n      // expect them to all build, and we're fine with dying if they don't\n      // (there's no worries about needing to springboard).\n      isopacketCatalog.initialize({\n        localPackageSearchDirs: [\n          packagesDir,\n          files.pathJoin(packagesDir, \"non-core\", \"*\", \"packages\"),\n        ],\n        buildingIsopackets: true\n      });\n    });\n  if (messages.hasMessages()) {\n    Console.arrowError(\"Errors while scanning core packages:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket scan failed?\");\n  }\n  return isopacketCatalog;\n};\n\nexport function makeIsopacketBuildContext() {\n  var context = {};\n  var catalog = newIsopacketBuildingCatalog();\n  var versions = {};\n  _.each(catalog.getAllPackageNames(), function (packageName) {\n    versions[packageName] = catalog.getLatestVersion(packageName).version;\n  });\n  context.packageMap = new packageMapModule.PackageMap(versions, {\n    localCatalog: catalog\n  });\n  // Make an isopack cache that doesn't save isopacks to disk and has no\n  // access to versioned packages.\n  context.isopackCache = new isopackCacheModule.IsopackCache({\n    packageMap: context.packageMap,\n    includeCordovaUnibuild: false,\n    // When linking JS files, don't include the padding spaces and line number\n    // comments. Since isopackets are loaded as part of possibly very short\n    // 'meteor' tool command invocations, we care more about startup time than\n    // legibility, and the difference is actually observable (eg 25% speedup\n    // loading constraint-solver).\n    noLineNumbers: true\n  });\n  return context;\n}\n\n// Loads a built isopacket from disk. Always loads (the cache is in 'load', not\n// this function). Does not run a build process; it must already be built.\nvar loadIsopacketFromDisk = function (isopacketName) {\n  var image = bundler.readJsImage(\n    files.pathJoin(isopacketPath(isopacketName), 'program.json'));\n\n  // An incredibly minimalist version of the environment from\n  // tools/server/boot.js.  Kind of a hack.\n  var env = {\n    __meteor_bootstrap__: { startupHooks: [] },\n    __meteor_runtime_config__: { meteorRelease: \"ISOPACKET\" }\n  };\n  env.Profile = Profile;\n\n  var ret;\n  var messages = buildmessage.capture({\n    title: \"loading isopacket `\" + isopacketName + \"`\"\n  }, function () {\n    ret = image.load(env);\n  });\n\n  // This is a build step ... but it's one that only happens in development, so\n  // it can just crash the app instead of being handled nicely.\n  if (messages.hasMessages()) {\n    Console.error(\"Errors prevented isopacket load:\");\n    Console.printMessages(messages);\n    throw new Error(\"isopacket load failed?\");\n  }\n\n  // Run any user startup hooks.\n  while (env.__meteor_bootstrap__.startupHooks.length) {\n    var hook = env.__meteor_bootstrap__.startupHooks.shift();\n    hook();\n  }\n  // Setting this to null tells Meteor.startup to call hooks immediately.\n  env.__meteor_bootstrap__.startupHooks = null;\n\n  return ret;\n};\n"],"file":"tools/tool-env/isopackets.js.map"}