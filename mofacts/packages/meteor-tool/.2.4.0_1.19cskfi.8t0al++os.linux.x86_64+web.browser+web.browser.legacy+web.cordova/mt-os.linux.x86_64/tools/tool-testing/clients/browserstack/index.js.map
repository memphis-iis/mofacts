{"version":3,"sources":["/tools/tool-testing/clients/browserstack/index.js"],"names":["_objectSpread","module","link","default","v","export","BrowserStackClient","execFile","Client","configuredClients","enterJob","getUrlWithResuming","execFileSync","ensureDependencies","mkdtemp","pathJoin","chmod","statOrNull","readFile","createWriteStream","getDevBundle","NPM_DEPENDENCIES","USER","browserStackKey","constructor","options","title","npmPackageExports","require","config","seleniumOptions","browserStackOptions","_setName","name","browserName","version","device","realMobile","connect","key","_getBrowserStackKey","Error","capabilities","triggerRequest","driver","Builder","usingServer","withCapabilities","build","get","url","_launchBrowserStackTunnel","then","catch","e","stop","quit","tunnelProcess","process","env","BROWSERSTACK_ACCESS_KEY","outputDir","browserstackKey","trim","console","warn","Local","onlyAutomate","verbose","only","host","port","Promise","resolve","reject","start","err","prerequisitesMet","pushClients","clients","appConfig","forEach","client","push","selenium","browserstack"],"mappings":"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","sourcesContent":["import { execFile } from 'child_process';\nimport Client from '../../client.js';\nimport configuredClients from \"./clients.js\";\nimport { enterJob } from '../../../utils/buildmessage.js';\nimport { getUrlWithResuming } from '../../../utils/http-helpers.js';\nimport { execFileSync } from '../../../utils/processes';\nimport { ensureDependencies } from '../../../cli/dev-bundle-helpers.js';\nimport {\n  mkdtemp,\n  pathJoin,\n  chmod,\n  statOrNull,\n  readFile,\n  createWriteStream,\n  getDevBundle,\n} from '../../../fs/files';\n\nconst NPM_DEPENDENCIES = {\n  'browserstack-webdriver': '2.41.1',\n  'browserstack-local': '1.3.0',\n};\n\nconst USER = 'dev1141';\n\n// A memoized key from BrowserStackClient._getBrowserStackKey.\nlet browserStackKey;\n\nexport default class BrowserStackClient extends Client {\n  constructor(options) {\n    super(options);\n\n    enterJob({\n      title: 'Installing BrowserStack WebDriver in Meteor tool',\n    }, () => {\n      ensureDependencies(NPM_DEPENDENCIES);\n    });\n\n    this.npmPackageExports = require('browserstack-webdriver');\n\n    // Capabilities which are allowed by selenium.\n    this.config.seleniumOptions =\n      this.config.seleniumOptions || {};\n\n    // Additional capabilities which are unique to BrowserStack.\n    this.config.browserStackOptions =\n      this.config.browserStackOptions || {};\n\n    this._setName();\n  }\n\n  _setName() {\n    const name = this.config.seleniumOptions.browserName || \"default\";\n    const version = this.config.seleniumOptions.version || \"\";\n    const device =\n      this.config.browserStackOptions.realMobile &&\n      this.config.browserStackOptions.device || \"\";\n\n    this.name = \"BrowserStack: \" + name +\n      (version && ` Version ${version}`) +\n      (device && ` (Device: ${device})`);\n  }\n\n  connect() {\n    const key = BrowserStackClient._getBrowserStackKey();\n    if (! key) {\n      throw new Error(\n        \"BrowserStack key not found. Ensure that s3cmd is setup with \" +\n        \"S3 credentials, or set BROWSERSTACK_ACCESS_KEY in your environment.\");\n    }\n\n    const capabilities = {\n      // Authentication\n      'browserstack.user': USER,\n      'browserstack.key': key,\n\n      // Use the BrowserStackLocal tunnel, to allow BrowserStack to\n      // tunnel to the machine this server is running on.\n      'browserstack.local': true,\n\n      // Enabled the capturing of \"Visual Logs\" (i.e. Screenshots).\n      'browserstack.debug': true,\n\n      // On browsers that support it, capture the console\n      'browserstack.console': 'errors',\n\n      ...this.config.seleniumOptions,\n      ...this.config.browserStackOptions,\n    };\n\n    const triggerRequest = () => {\n      this.driver = new this.npmPackageExports.Builder()\n        .usingServer('https://hub-cloud.browserstack.com/wd/hub')\n        .withCapabilities(capabilities)\n        .build();\n\n      this.driver.get(this.url);\n    }\n\n    this._launchBrowserStackTunnel()\n      .then(triggerRequest)\n      .catch((e) => {\n        // In the event of an error, shut down the daemon.\n        this.stop();\n\n        throw e;\n      });\n  }\n\n  stop() {\n    this.driver && this.driver.quit();\n    this.driver = null;\n\n    this.tunnelProcess && this.tunnelProcess.stop(() => {});\n    this.tunnelProcess = null;\n  }\n\n  static _getBrowserStackKey() {\n    // Use the memoized version, first and foremost.\n    if (typeof browserStackKey !== \"undefined\") {\n      return browserStackKey;\n    }\n\n    if (process.env.BROWSERSTACK_ACCESS_KEY) {\n      return (browserStackKey = process.env.BROWSERSTACK_ACCESS_KEY);\n    }\n\n    // Try to get the credentials from S3 with the s3cmd tool.\n    const outputDir = pathJoin(mkdtemp(), \"key\");\n      const browserstackKey = \"s3://meteor-browserstack-keys/browserstack-key\";\n    try {\n      execFileSync(\"s3cmd\", [\"get\",\n        browserstackKey,\n        outputDir\n      ]);\n\n      return (browserStackKey = readFile(outputDir, \"utf8\").trim());\n    } catch (e) {\n      // A failure is acceptable here; it was just a try.\n      console.warn(`Failed to load browserstack key from \n        ${browserstackKey}`, e);\n    }\n\n    return (browserStackKey = null);\n  }\n\n  _launchBrowserStackTunnel() {\n    this.tunnelProcess = new (require('browserstack-local')).Local();\n\n    const options = {\n      key: this.constructor._getBrowserStackKey(),\n      onlyAutomate: true,\n      verbose: true,\n      // The \",0\" means \"SSL off\".  It's localhost, after all.\n      only: `${this.host},${this.port},0`,\n    }\n\n    return new Promise((resolve, reject) => {\n      this.tunnelProcess.start(options, (err) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  static prerequisitesMet() {\n    return !! this._getBrowserStackKey();\n  }\n\n  static pushClients(clients, appConfig) {\n    configuredClients.forEach((client) => {\n      clients.push(new BrowserStackClient(\n        {\n          ...appConfig,\n          config: {\n            seleniumOptions: client.selenium,\n            browserStackOptions: client.browserstack,\n          },\n        },\n      ));\n    });\n  }\n}\n"],"file":"tools/tool-testing/clients/browserstack/index.js.map"}