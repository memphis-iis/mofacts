{"version":3,"sources":["/tools/tool-testing/sandbox.js"],"names":["module1","export","default","Sandbox","files","link","v","PhantomClient","PuppeteerClient","BrowserStackClient","Builder","Run","Console","getPackagesDirectoryName","getPackageStorage","archInfoHost","host","releaseCurrent","current","FinishedUpgraders","allUpgraders","DEFAULT_TRACK","RemoteCatalog","IsopackCache","randomToken","Tropohouse","PackageMap","capture","enterJob","hasOwn","Object","prototype","hasOwnProperty","constructor","options","root","mkdtemp","warehouse","home","pathJoin","mkdir","cwd","env","fakeMongo","call","inCheckout","Error","_makeWarehouse","meteorScript","process","platform","execPath","getCurrentToolsDir","run","args","sandbox","_makeEnv","testWithAllClients","f","testName","testFile","argsParam","filter","arg","clients","clientOptions","appConfig","port","phantom","pushClients","puppeteer","browserstack","prerequisitesMet","testNameAndFile","console","log","length","keys","forEach","clientKey","index","array","client","name","baseTimeout","timeout","createApp","to","template","absoluteTo","absoluteFrom","convertToStandardPath","__dirname","cp_r","ignore","preserveSymlinks","release","write","isProperRelease","upgradersFile","projectDir","readUpgraders","appendUpgraders","require","install","dontPrepareApp","cd","waitSecs","expectExit","createPackage","packageDir","packageName","packagePath","templatePackagePath","readdir","file","match","packageJsFile","writeFile","readFile","replace","relativePath","callback","previous","pathResolve","set","value","unset","filename","contents","append","appendFile","read","exists","cp","from","unlink","dirname","dirPath","rename","oldName","newName","readSessionFile","writeSessionFile","assign","create","METEOR_SESSION_FILE","convertToOSPath","METEOR_WAREHOUSE_DIR","METEOR_OFFLINE_CATALOG","METEOR_TEST_LATEST_RELEASE","TOOL_NODE_FLAGS","SELF_TEST_TOOL_NODE_FLAGS","releases","setUpBuiltPackageTropohouse","serverUrl","METEOR_PACKAGE_SERVER_URL","packagesDirectoryName","builder","outputPath","copyDirectory","builtPackageTropohouseDir","symlink","complete","stubCatalog","syncToken","formatVersion","collections","packages","versions","builds","releaseTracks","releaseVersions","packageVersions","toolPackageVersion","tropohouseIsopackCache","eachBuiltIsopack","isopack","packageRec","tropohouseLocalCatalog","getPackage","push","versionRec","getLatestVersion","buildArchitectures","versionId","_id","version","releaseName","configuration","track","Math","random","toString","orderKey","description","recommended","tool","dataFile","warehouseOfficialCatalog","initialize","packageStorage","insertData","linkToMeteorScript","doOrThrow","ret","messages","hasMessages","formatMessages","tropohouse","newSelfTestCatalog","getAllNonTestPackageNames","packageMap","localCatalog","includeCordovaUnibuild","buildLocalPackages","ROOT_PACKAGES_TO_BUILD_IN_SANDBOX","_saveIsopack","catalogLocal","selfTestCatalog","LocalCatalog","title","packagesDir","localPackageSearchDirs","arrowError","printMessages"],"mappings":"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","sourcesContent":["// Represents an install of the tool. Creating this creates a private\n// sandbox with its own state, separate from the state of the current\n// meteor install or checkout, from the user's homedir, and from the\n// state of any other sandbox. It also creates an empty directory\n// which will be, by default, the cwd for runs created inside the\n// sandbox (you can change this with the cd() method).\n//\n// This will throw TestFailure if it has to build packages to set up\n// the sandbox and the build fails. So, only call it from inside\n// tests.\n//\n// options:\n// - warehouse: set to sandbox the warehouse too. If you don't do\n//   this, the tests are run in the same context (checkout or\n//   warehouse) as the actual copy of meteor you're running (the\n//   meteor in 'meteor self-test'. This may only be set when you're\n//   running 'meteor self-test' from a checkout. If it is set, it\n//   should look something like this:\n//   {\n//     version1: { tools: 'tools1', notices: (...) },\n//     version2: { tools: 'tools2', upgraders: [\"a\"],\n//     notices: (...), latest: true }\n//   }\n//   This would set up a simulated warehouse with two releases in it,\n//   one called 'version1' and having a tools version of 'tools1', and\n//   similarly with 'version2'/'tools2', with the latter being marked\n//   as the latest release, and the latter also having a single\n//   upgrader named \"a\". The releases are made by building the\n//   checkout into a release, and are identical except for their\n//   version names. If you pass 'notices' (which is optional), set it\n//   to the verbatim contents of the notices.json file for the\n//   release, as an object.\n// - fakeMongo: if set, set an environment variable that causes our\n//   'fake-mongod' stub process to be started instead of 'mongod'. The\n//   tellMongo method then becomes available on Runs for controlling\n//   the stub.\n// - clients\n//   - browserstack: true if browserstack clients should be used\n//   - port: the port that the clients should run on\nimport * as files from '../fs/files';\nimport PhantomClient from './clients/phantom/index.js';\nimport PuppeteerClient from './clients/puppeteer/index.js';\nimport BrowserStackClient from './clients/browserstack/index.js';\nimport Builder from '../isobuild/builder.js';\nimport Run from './run.js';\nimport { Console } from '../console/console.js';\nimport {\n  getPackagesDirectoryName,\n  getPackageStorage,\n} from '../meteor-services/config.js';\nimport { host as archInfoHost } from '../utils/archinfo';\nimport { current as releaseCurrent } from '../packaging/release.js';\nimport { FinishedUpgraders } from '../project-context.js';\nimport { allUpgraders } from '../upgraders.js';\nimport { DEFAULT_TRACK } from '../packaging/catalog/catalog.js';\nimport { RemoteCatalog } from '../packaging/catalog/catalog-remote.js';\nimport { IsopackCache } from '../isobuild/isopack-cache.js';\nimport { randomToken } from '../utils/utils.js';\nimport { Tropohouse } from '../packaging/tropohouse.js';\nimport { PackageMap } from '../packaging/package-map.js';\nimport { capture, enterJob } from '../utils/buildmessage.js';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\nexport default class Sandbox {\n  constructor(options = {}) {\n    this.options = options;\n\n    this.root = files.mkdtemp();\n    this.warehouse = null;\n\n    this.home = files.pathJoin(this.root, 'home');\n    files.mkdir(this.home, 0o755);\n    this.cwd = this.home;\n    this.env = {};\n    this.fakeMongo = this.options.fakeMongo;\n\n    if (hasOwn.call(this.options, 'warehouse')) {\n      if (!files.inCheckout()) {\n        throw Error(\n          \"Fake warehouses are only possible when running from a checkout\");\n      }\n      this.warehouse = files.pathJoin(this.root, 'tropohouse');\n      this._makeWarehouse(this.options.warehouse);\n    }\n\n    const meteorScript = process.platform === \"win32\" ? \"meteor.bat\" : \"meteor\";\n\n    // Figure out the 'meteor' to run\n    if (this.warehouse) {\n      this.execPath = files.pathJoin(this.warehouse, meteorScript);\n    } else {\n      this.execPath = files.pathJoin(files.getCurrentToolsDir(), meteorScript);\n    }\n  }\n\n  // Create a new test run of the tool in this sandbox.\n  run(...args) {\n    return new Run(this.execPath, {\n      sandbox: this,\n      args,\n      cwd: this.cwd,\n      env: this._makeEnv(),\n      fakeMongo: this.fakeMongo,\n    });\n  }\n\n  // Tests a set of clients with the argument function. Each call to f(run)\n  // instantiates a Run with a different client.\n  // Use:\n  // sandbox.testWithAllClients(function (run) {\n  //   // pre-connection checks\n  //   run.connectClient();\n  //   // post-connection checks\n  // });\n  testWithAllClients(f, options) {\n    const { testName, testFile, args: argsParam } = options || {};\n\n    const args = (argsParam || []).filter(arg => arg);\n\n    // Lazy-populate the clients, only when this method is called.\n    if (typeof this.clients === \"undefined\") {\n      this.clients = [];\n\n      const clientOptions = this.options.clients || {};\n\n      const appConfig = {\n        host: 'localhost',\n        port: clientOptions.port || 3000,\n      };\n\n      if (clientOptions.phantom) {\n        PhantomClient.pushClients(this.clients, appConfig);\n      }\n\n      if (clientOptions.puppeteer) {\n        PuppeteerClient.pushClients(this.clients, appConfig);\n      }\n\n      if (clientOptions.browserstack && BrowserStackClient.prerequisitesMet()) {\n        BrowserStackClient.pushClients(this.clients, appConfig);\n      }\n    }\n\n    const testNameAndFile = `${testFile ? `${testFile}: ` : ''}${testName ? `\"${testName}\" ` : ''}`;\n\n    console.log(`Running test ${testNameAndFile}with ${this.clients.length} client(s)...`);\n\n    Object.keys(this.clients).forEach((clientKey, index, array) => {\n      const client = this.clients[clientKey];\n      console.log(\n        `(${index+1}/${array.length}) Testing ${testNameAndFile}with ${client.name}...`);\n      const run = new Run(this.execPath, {\n        sandbox: this,\n        args,\n        cwd: this.cwd,\n        env: this._makeEnv(),\n        fakeMongo: this.fakeMongo,\n        client,\n      });\n      run.baseTimeout = client.timeout;\n      f(run);\n    });\n  }\n\n  // Copy an app from a template into the current directory in the\n  // sandbox. 'to' is the subdirectory to put the app in, and\n  // 'template' is a subdirectory of tools/tests/apps to copy.\n  //\n  // Note that the arguments are the opposite order from 'cp'. That\n  // seems more intuitive to me -- if you disagree, my apologies.\n  //\n  // For example:\n  //   s.createApp('myapp', 'empty');\n  //   s.cd('myapp');\n  createApp(to, template, options) {\n    options = options || {};\n    const absoluteTo = files.pathJoin(this.cwd, to);\n    const absoluteFrom = files.pathJoin(\n      files.convertToStandardPath(__dirname),\n      '..', 'tests', 'apps', template\n    );\n    files.cp_r(absoluteFrom, absoluteTo, {\n      ignore: [/^local$/],\n      preserveSymlinks: true,\n    });\n    // If the test isn't explicitly managing a mock warehouse, ensure that apps\n    // run with our release by default.\n    if (options.release) {\n      this.write(files.pathJoin(to, '.meteor/release'), options.release);\n    } else if (!this.warehouse && releaseCurrent.isProperRelease()) {\n      this.write(files.pathJoin(to, '.meteor/release'), releaseCurrent.name);\n    }\n\n    // Make sure the apps don't run any upgraders, unless they intentionally\n    // have a partial upgraders file\n    const upgradersFile =\n      new FinishedUpgraders({ projectDir: absoluteTo });\n    if (upgradersFile.readUpgraders().length === 0) {\n      upgradersFile.appendUpgraders(allUpgraders());\n    }\n\n    require(\"../cli/default-npm-deps.js\").install(absoluteTo);\n\n    if (options.dontPrepareApp) {\n      return;\n    }\n\n    // Prepare the app (ie, build or download packages). We give this a nice\n    // long timeout, which allows the next command to not need a bloated\n    // timeout. (meteor create does this anyway.)\n    this.cd(to, () => {\n      const run = this.run(\"--prepare-app\");\n      // XXX Can we cache the output of running this once somewhere, so that\n      // multiple calls to createApp with the same template get the same cache?\n      // This is a little tricky because isopack-buildinfo.json uses absolute\n      // paths.\n      run.waitSecs(120);\n      run.expectExit(0);\n    });\n  }\n\n  // Same as createApp, but with a package.\n  //\n  // @param packageDir  {String} The directory in which to create the package\n  // @param packageName {String} The package name to create. This string will\n  //                             replace all appearances of ~package-name~\n  //                             in any package*.js files in the template\n  // @param template    {String} The package template to use. Found as a\n  //                             subdirectory in tests/packages/\n  //\n  // For example:\n  //   s.createPackage('me_mypack', me:mypack', 'empty');\n  //   s.cd('me_mypack');\n  createPackage(packageDir, packageName, template) {\n    const packagePath = files.pathJoin(this.cwd, packageDir);\n    const templatePackagePath = files.pathJoin(\n      files.convertToStandardPath(__dirname), '..', 'tests', 'packages', template);\n    files.cp_r(templatePackagePath, packagePath, {\n      preserveSymlinks: true,\n    });\n\n    files.readdir(packagePath).forEach((file) => {\n      if (file.match(/^package.*\\.js$/)) {\n        const packageJsFile = files.pathJoin(packagePath, file);\n        files.writeFile(\n          packageJsFile,\n          files.readFile(packageJsFile, \"utf8\")\n            .replace(\"~package-name~\", packageName));\n      }\n    });\n  }\n\n  // Change the cwd to be used for subsequent runs. For example:\n  //   s.run('create', 'myapp').expectExit(0);\n  //   s.cd('myapp');\n  //   s.run('add', 'somepackage') ...\n  // If you provide a callback, it will invoke the callback and then\n  // change the cwd back to the previous value.  eg:\n  //   s.cd('app1', function () {\n  //     s.run('add', 'somepackage');\n  //   });\n  //   s.cd('app2', function () {\n  //     s.run('add', 'somepackage');\n  //   });\n  cd(relativePath, callback) {\n    const previous = this.cwd;\n    this.cwd = files.pathResolve(this.cwd, relativePath);\n    if (callback) {\n      callback();\n      this.cwd = previous;\n    }\n  }\n\n  // Set an environment variable for subsequent runs.\n  set(name, value) {\n    this.env[name] = value;\n  }\n\n  // Undo set().\n  unset(name) {\n    delete this.env[name];\n  }\n\n  // Write to a file in the sandbox, overwriting its current contents\n  // if any. 'filename' is a path intepreted relative to the Sandbox's\n  // cwd. 'contents' is a string (utf8 is assumed).\n  write(filename, contents) {\n    files.writeFile(files.pathJoin(this.cwd, filename), contents, 'utf8');\n  }\n\n  // Like writeFile, but appends rather than writes.\n  append(filename, contents) {\n    files.appendFile(files.pathJoin(this.cwd, filename), contents, 'utf8');\n  }\n\n  // Reads a file in the sandbox as a utf8 string. 'filename' is a\n  // path intepreted relative to the Sandbox's cwd.  Returns null if\n  // file does not exist.\n  read(filename) {\n    const file = files.pathJoin(this.cwd, filename);\n    if (!files.exists(file)) {\n      return null;\n    } else {\n      return files.readFile(files.pathJoin(this.cwd, filename), 'utf8');\n    }\n  }\n\n  // Copy the contents of one file to another.  In these series of tests, we often\n  // want to switch contents of package.js files. It is more legible to copy in\n  // the backup file rather than trying to write into it manually.\n  cp(from, to) {\n    const contents = this.read(from);\n    if (!contents) {\n      throw new Error(\"File \" + from + \" does not exist.\");\n    };\n    this.write(to, contents);\n  }\n\n  // Delete a file in the sandbox. 'filename' is as in write().\n  unlink(filename) {\n    files.unlink(files.pathJoin(this.cwd, filename));\n  }\n\n  // Make a directory in the sandbox. 'filename' is as in write().\n  mkdir(dirname) {\n    const dirPath = files.pathJoin(this.cwd, dirname);\n    if (! files.exists(dirPath)) {\n      files.mkdir(dirPath);\n    }\n  }\n\n  // Rename something in the sandbox. 'oldName' and 'newName' are as in write().\n  rename(oldName, newName) {\n    files.rename(files.pathJoin(this.cwd, oldName),\n                 files.pathJoin(this.cwd, newName));\n  }\n\n  // Return the current contents of .meteorsession in the sandbox.\n  readSessionFile() {\n    return files.readFile(files.pathJoin(this.root, '.meteorsession'), 'utf8');\n  }\n\n  // Overwrite .meteorsession in the sandbox with 'contents'. You\n  // could use this in conjunction with readSessionFile to save and\n  // restore authentication states.\n  writeSessionFile(contents) {\n    return files.writeFile(files.pathJoin(this.root, '.meteorsession'),\n                           contents, 'utf8');\n  }\n\n  _makeEnv() {\n    const env = Object.assign(Object.create(null), this.env);\n    env.METEOR_SESSION_FILE = files.convertToOSPath(\n      files.pathJoin(this.root, '.meteorsession'));\n\n    if (this.warehouse) {\n      // Tell it where the warehouse lives.\n      env.METEOR_WAREHOUSE_DIR = files.convertToOSPath(this.warehouse);\n\n      // Don't ever try to refresh the stub catalog we made.\n      env.METEOR_OFFLINE_CATALOG = \"t\";\n    }\n\n    // By default (ie, with no mock warehouse and no --release arg) we should be\n    // testing the actual release this is built in, so we pretend that it is the\n    // latest release.\n    if (!this.warehouse && releaseCurrent.isProperRelease()) {\n      env.METEOR_TEST_LATEST_RELEASE = releaseCurrent.name;\n    }\n\n    // Allow user to set TOOL_NODE_FLAGS for self-test app.\n    if (process.env.TOOL_NODE_FLAGS && ! process.env.SELF_TEST_TOOL_NODE_FLAGS)\n      console.log('Consider setting SELF_TEST_TOOL_NODE_FLAGS to configure ' +\n                  'self-test test application spawns');\n    env.TOOL_NODE_FLAGS = process.env.SELF_TEST_TOOL_NODE_FLAGS || '';\n\n    return env;\n  }\n\n  // Writes a stub warehouse (really a tropohouse) to the directory\n  // this.warehouse. This warehouse only contains a meteor-tool package and some\n  // releases containing that tool only (and no packages).\n  //\n  // packageServerUrl indicates which package server we think we are using. Use\n  // the default, if we do not pass this in; you should pass it in any case that\n  // you will be specifying $METEOR_PACKAGE_SERVER_URL in the environment of a\n  // command you are running in this sandbox.\n  _makeWarehouse(releases) {\n    // Ensure we have a tropohouse to copy stuff out of.\n    setUpBuiltPackageTropohouse();\n\n    const serverUrl = this.env.METEOR_PACKAGE_SERVER_URL;\n    const packagesDirectoryName = getPackagesDirectoryName(serverUrl);\n\n    const builder = new Builder({outputPath: this.warehouse});\n    builder.copyDirectory({\n      from: files.pathJoin(builtPackageTropohouseDir, 'packages'),\n      to: packagesDirectoryName,\n      symlink: true\n    });\n    builder.complete();\n\n    const stubCatalog = {\n      syncToken: {},\n      formatVersion: \"1.0\",\n      collections: {\n        packages: [],\n        versions: [],\n        builds: [],\n        releaseTracks: [],\n        releaseVersions: []\n      }\n    };\n\n    const packageVersions = {};\n    let toolPackageVersion = null;\n\n    tropohouseIsopackCache.eachBuiltIsopack((packageName, isopack) => {\n      const packageRec = tropohouseLocalCatalog.getPackage(packageName);\n      if (! packageRec) {\n        throw Error(\"no package record for \" + packageName);\n      }\n      stubCatalog.collections.packages.push(packageRec);\n\n      const versionRec = tropohouseLocalCatalog.getLatestVersion(packageName);\n      if (! versionRec) {\n        throw Error(\"no version record for \" + packageName);\n      }\n      stubCatalog.collections.versions.push(versionRec);\n\n      stubCatalog.collections.builds.push({\n        buildArchitectures: isopack.buildArchitectures(),\n        versionId: versionRec._id,\n        _id: randomToken()\n      });\n\n      if (packageName === \"meteor-tool\") {\n        toolPackageVersion = versionRec.version;\n      } else {\n        packageVersions[packageName] = versionRec.version;\n      }\n    });\n\n    if (! toolPackageVersion) {\n      throw Error(\"no meteor-tool?\");\n    }\n\n    stubCatalog.collections.releaseTracks.push({\n      name: DEFAULT_TRACK,\n      _id: randomToken()\n    });\n\n    // Now create each requested release.\n    Object.keys(releases).forEach((releaseName) => {\n      const configuration = releases[releaseName];\n      // Release info\n      stubCatalog.collections.releaseVersions.push({\n        track: DEFAULT_TRACK,\n        _id: Math.random().toString(),\n        version: releaseName,\n        orderKey: releaseName,\n        description: \"test release \" + releaseName,\n        recommended: !!configuration.recommended,\n        tool: configuration.tool || \"meteor-tool@\" + toolPackageVersion,\n        packages: packageVersions\n      });\n    });\n\n    const dataFile = getPackageStorage({\n      root: this.warehouse,\n      serverUrl: serverUrl\n    });\n    this.warehouseOfficialCatalog = new RemoteCatalog();\n    this.warehouseOfficialCatalog.initialize({\n      packageStorage: dataFile\n    });\n    this.warehouseOfficialCatalog.insertData(stubCatalog);\n\n    // And a cherry on top\n    // XXX this is hacky\n    files.linkToMeteorScript(\n      files.pathJoin(this.warehouse, packagesDirectoryName, \"meteor-tool\", toolPackageVersion,\n        'mt-' + archInfoHost(), 'meteor'),\n      files.pathJoin(this.warehouse, 'meteor'));\n  }\n}\n\nfunction doOrThrow(f) {\n  let ret;\n  const messages = capture(function () {\n    ret = f();\n  });\n  if (messages.hasMessages()) {\n    throw Error(messages.formatMessages());\n  }\n  return ret;\n}\n\nfunction setUpBuiltPackageTropohouse() {\n  if (builtPackageTropohouseDir) {\n    return;\n  }\n  builtPackageTropohouseDir = files.mkdtemp('built-package-tropohouse');\n\n  if (getPackagesDirectoryName() !== 'packages') {\n    throw Error(\"running self-test with METEOR_PACKAGE_SERVER_URL set?\");\n  }\n\n  const tropohouse = new Tropohouse(builtPackageTropohouseDir);\n  tropohouseLocalCatalog = newSelfTestCatalog();\n  const versions = {};\n  tropohouseLocalCatalog.getAllNonTestPackageNames().forEach((packageName) => {\n    versions[packageName] =\n      tropohouseLocalCatalog.getLatestVersion(packageName).version;\n  });\n  const packageMap = new PackageMap(versions, {\n    localCatalog: tropohouseLocalCatalog\n  });\n  // Make an isopack cache that doesn't automatically save isopacks to disk and\n  // has no access to versioned packages.\n  tropohouseIsopackCache = new IsopackCache({\n    packageMap: packageMap,\n    includeCordovaUnibuild: true\n  });\n  doOrThrow(function () {\n    enterJob(\"building self-test packages\", () => {\n      // Build the packages into the in-memory IsopackCache.\n      tropohouseIsopackCache.buildLocalPackages(\n        ROOT_PACKAGES_TO_BUILD_IN_SANDBOX);\n    });\n  });\n\n  // Save all the isopacks into builtPackageTropohouseDir/packages.  (Note that\n  // we are always putting them into the default 'packages' (assuming\n  // $METEOR_PACKAGE_SERVER_URL is not set in the self-test process itself) even\n  // though some tests will want them to be under\n  // 'packages-for-server/test-packages'; we'll fix this in _makeWarehouse.\n  tropohouseIsopackCache.eachBuiltIsopack((name, isopack) => {\n    tropohouse._saveIsopack(isopack, name);\n  });\n}\n\n// Our current strategy for running tests that need warehouses is to build all\n// packages from the checkout into this temporary tropohouse directory, and for\n// each test that need a fake warehouse, copy the built packages into the\n// test-specific warehouse directory.  This isn't particularly fast, but it'll\n// do for now. We build the packages during the first test that needs them.\nlet builtPackageTropohouseDir = null;\nlet tropohouseLocalCatalog = null;\nlet tropohouseIsopackCache = null;\n\n// Let's build a minimal set of packages that's enough to get self-test\n// working.  (And that doesn't need us to download any Atmosphere packages.)\nconst ROOT_PACKAGES_TO_BUILD_IN_SANDBOX = [\n  // We need the tool in order to run from the fake warehouse at all.\n  \"meteor-tool\",\n\n  // We need the packages in the skeleton app in order to test 'meteor create'.\n  'meteor-base',\n  'mobile-experience',\n  'mongo',\n  'blaze-html-templates',\n  'blaze-hot',\n  'hot-module-replacement',\n  \"jquery\", // necessary when using Blaze\n  'session',\n  'tracker',\n  \"autopublish\",\n  \"insecure\",\n  \"standard-minifier-css\",\n  \"standard-minifier-js\",\n  \"es5-shim\",\n  \"shell-server\",\n  \"modern-browsers\",\n  \"ecmascript\",\n  \"typescript\",\n];\n\nfunction newSelfTestCatalog() {\n  if (! files.inCheckout()) {\n    throw Error(\"Only can build packages from a checkout\");\n  }\n\n  const catalogLocal = require('../packaging/catalog/catalog-local.js');\n  const selfTestCatalog = new catalogLocal.LocalCatalog;\n  const messages = capture(\n    { title: \"scanning local core packages\" },\n    () => {\n      const packagesDir =\n        files.pathJoin(files.getCurrentToolsDir(), 'packages');\n\n      // When building a fake warehouse from a checkout, we use local packages,\n      // but *ONLY THOSE FROM THE CHECKOUT*: not app packages or $PACKAGE_DIRS\n      // packages.  One side effect of this: we really really expect them to all\n      // build, and we're fine with dying if they don't (there's no worries\n      // about needing to springboard).\n      selfTestCatalog.initialize({\n        localPackageSearchDirs: [\n          packagesDir,\n          files.pathJoin(packagesDir, \"non-core\"),\n          files.pathJoin(packagesDir, \"non-core\", \"*\", \"packages\"),\n        ],\n      });\n    });\n  if (messages.hasMessages()) {\n    Console.arrowError(\"Errors while scanning core packages:\");\n    Console.printMessages(messages);\n    throw new Error(\"scan failed?\");\n  }\n  return selfTestCatalog;\n}\n"],"file":"tools/tool-testing/sandbox.js.map"}