{"version":3,"sources":["/tools/runners/run-all.js"],"names":["_objectSpread","module1","link","default","v","_objectWithoutProperties","_","require","files","buildmessage","utils","runLog","release","Console","crypto","Proxy","Selenium","AppRunner","MongoRunner","HMRServer","Updater","Runner","constructor","appHost","appPort","banner","disableOplog","cordovaRunner","mongoUrl","onFailure","oplogUrl","projectContext","proxyHost","proxyPort","quiet","rootUrl","selenium","seleniumBrowser","noReleaseCheck","optionsForAppRunner","self","Error","listenPort","mongoPort","parseInt","specifiedAppPort","regenerateAppPort","stopped","convertToOSPath","prettyPath","projectDir","formatUrl","protocol","hostname","port","basePath","parseUrl","pathname","HMRPath","proxy","listenHost","proxyToPort","proxyToHost","ignoredUrls","capture","resolveConstraints","packageMap","hasMongoDevServerPackage","getInfo","mongoRunner","process","env","METEOR_TEST_FAKE_MONGOD_CONTROL_PORT","projectLocalDir","multiple","METEOR_TEST_MULTIPLE_MONGOD_REPLSET","hasHotModuleReplacementPackage","hmrServer","hmrSecret","randomBytes","toString","hmrPath","secret","updater","appRunner","noRestartBanner","runner","browser","start","log","arrow","unblockAppRunner","makeBeforeStartPromise","startMongo","tries","_startMongoAsync","then","ok","error","left","message","stop","setTimeout","_fail","enterJob","title","UNIX_SOCKET_PATH","platform","finish","randomPort","exports","run","options","runOptions","clone","once","promise","Promise","resolve","outcome","onRunEnd","result","signal","undefined","code","watchForChanges","buildMode","buildOptions","NODE_ENV","nodeEnv","await","from","current","getDisplayName","to","displayReleaseNeeded","arrowError","errors","formatMessages"],"mappings":"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","sourcesContent":["const _ = require('underscore');\n\nconst files = require('../fs/files');\nconst buildmessage = require('../utils/buildmessage.js');\nconst utils = require('../utils/utils.js');\nconst runLog = require('./run-log.js');\nconst release = require('../packaging/release.js');\n\nconst Console = require('../console/console.js').Console;\nconst crypto = require('crypto');\n\nconst Proxy = require('./run-proxy.js').Proxy;\nconst Selenium = require('./run-selenium.js').Selenium;\nconst AppRunner = require('./run-app.js').AppRunner;\nconst MongoRunner = require('./run-mongo.js').MongoRunner;\nconst HMRServer = require('./run-hmr').HMRServer;\nconst Updater = require('./run-updater.js').Updater;\n\nclass Runner {\n  constructor({\n    appHost,\n    appPort,\n    banner,\n    disableOplog,\n    cordovaRunner,\n    mongoUrl,\n    onFailure,\n    oplogUrl,\n    projectContext,\n    proxyHost,\n    proxyPort,\n    quiet,\n    rootUrl,\n    selenium,\n    seleniumBrowser,\n    noReleaseCheck,\n    ...optionsForAppRunner\n  }) {\n    const self = this;\n    self.projectContext = projectContext;\n\n    if (typeof proxyPort === 'undefined') {\n      throw new Error('no proxyPort?');\n    }\n\n    const listenPort = proxyPort;\n    const mongoPort = parseInt(listenPort, 10) + 1;\n    self.specifiedAppPort = appPort;\n    self.regenerateAppPort();\n\n    self.stopped = false;\n    self.noReleaseCheck = noReleaseCheck;\n    self.quiet = quiet;\n    self.banner = banner || files.convertToOSPath(\n      files.prettyPath(self.projectContext.projectDir)\n    );\n\n    if (rootUrl) {\n      self.rootUrl = rootUrl;\n    } else {\n      self.rootUrl = utils.formatUrl({\n        protocol: 'http',\n        hostname: proxyHost || \"localhost\",\n        port: listenPort,\n      });\n    }\n\n    const basePath = utils.parseUrl(self.rootUrl).pathname || '';\n    const HMRPath = basePath + '/__meteor__hmr__/websocket';\n\n    self.proxy = new Proxy({\n      listenPort,\n      listenHost: proxyHost,\n      proxyToPort: self.appPort,\n      proxyToHost: appHost,\n      onFailure,\n      ignoredUrls: [HMRPath]\n    });\n\n    buildmessage.capture(function () {\n      self.projectContext.resolveConstraints();\n    });\n\n    const packageMap = self.projectContext.packageMap;\n    const hasMongoDevServerPackage =\n      packageMap && packageMap.getInfo('mongo-dev-server') != null;\n    self.mongoRunner = null;\n    if (mongoUrl) {\n      oplogUrl = disableOplog ? null : oplogUrl;\n    } else if (hasMongoDevServerPackage\n        || process.env.METEOR_TEST_FAKE_MONGOD_CONTROL_PORT) {\n      // The mongo-dev-server package is required to start Mongo, but\n      // tests using fake-mongod are exempted.\n      self.mongoRunner = new MongoRunner({\n        projectLocalDir: self.projectContext.projectLocalDir,\n        port: mongoPort,\n        onFailure,\n        // For testing mongod failover, run with 3 mongod if the env var is\n        // set. Note that data is not preserved from one run to the next.\n        multiple: !!process.env.METEOR_TEST_MULTIPLE_MONGOD_REPLSET\n      });\n\n      mongoUrl = self.mongoRunner.mongoUrl();\n      oplogUrl = disableOplog ? null : self.mongoRunner.oplogUrl();\n    } else {\n      // Don't start a mongodb server.\n      // Set monogUrl to a specific value to prevent MongoDB connections\n      // and to allow a check for printing a message if `mongo-dev-server`\n      // is added while the app is running.\n      // The check and message is printed by the `mongo-dev-server` package.\n      mongoUrl = 'no-mongo-server';\n    }\n\n    const hasHotModuleReplacementPackage = packageMap &&\n      packageMap.getInfo('hot-module-replacement') != null;\n    self.hmrServer = null;\n    let hmrSecret = null;\n    if (hasHotModuleReplacementPackage) {\n      hmrSecret = crypto.randomBytes(64).toString('hex');\n      self.hmrServer = new HMRServer({\n        proxy: self.proxy,\n        hmrPath: HMRPath,\n        secret: hmrSecret,\n        projectContext: self.projectContext\n      });\n    }\n\n    self.updater = new Updater();\n\n    self.appRunner = new AppRunner({\n      ...optionsForAppRunner,\n      projectContext: self.projectContext,\n      port: self.appPort,\n      listenHost: appHost,\n      mongoUrl,\n      oplogUrl,\n      rootUrl: self.rootUrl,\n      proxy: self.proxy,\n      noRestartBanner: self.quiet,\n      cordovaRunner: cordovaRunner,\n      hmrServer: self.hmrServer,\n      hmrSecret\n    });\n\n    self.selenium = null;\n    if (selenium) {\n      self.selenium = new Selenium({\n        runner: self,\n        browser: seleniumBrowser\n      });\n    }\n  }\n\n  // XXX leave a pidfile and check if we are already running\n  start() {\n    const self = this;\n\n    self.proxy.start();\n\n    // print the banner only once we've successfully bound the port\n    if (! self.quiet && ! self.stopped) {\n      runLog.log(\"[[[[[ \" + self.banner + \" ]]]]]\\n\");\n      runLog.log(\"Started proxy.\",  { arrow: true });\n    }\n\n    var unblockAppRunner = self.appRunner.makeBeforeStartPromise();\n\n    function startMongo(tries = 3) {\n      self._startMongoAsync().then(\n        ok => unblockAppRunner(),\n        error => {\n          --tries;\n          const left = tries + (tries === 1 ? \" try\" : \" tries\");\n          Console.error(\n            `Error starting Mongo (${left} left): ${error.message}`\n          );\n\n          if (tries > 0) {\n            self.mongoRunner.stop();\n            setTimeout(() => startMongo(tries), 1000);\n          } else {\n            self.mongoRunner._fail();\n          }\n        }\n      );\n    }\n\n    startMongo();\n\n    if (!self.noReleaseCheck && ! self.stopped) {\n      self.updater.start();\n    }\n\n    if (!self.stopped && self.hmrServer) {\n      self.hmrServer.start();\n\n      if (!self.quiet && !self.stopped) {\n        runLog.log(\"Started HMR server.\", { arrow: true });\n      }\n    }\n\n    if (! self.stopped) {\n      buildmessage.enterJob({ title: \"starting your app\" }, function () {\n        self.appRunner.start();\n      });\n      if (! self.quiet && ! self.stopped) {\n        runLog.log(\"Started your app.\",  { arrow: true });\n      }\n    }\n\n    if (! self.stopped && ! self.quiet) {\n      runLog.log(\"\");\n      if (process.env.UNIX_SOCKET_PATH) {\n        runLog.log(\n          `App running; UNIX domain socket: ${process.env.UNIX_SOCKET_PATH}`,\n          { arrow: true }\n        );\n      } else {\n        runLog.log(\"App running at: \" + self.rootUrl,  { arrow: true });\n      }\n\n      if (process.platform === \"win32\") {\n        runLog.log(\"   Type Control-C twice to stop.\");\n        runLog.log(\"\");\n      }\n    }\n\n    if (self.selenium && ! self.stopped) {\n      buildmessage.enterJob({ title: \"starting Selenium\" }, function () {\n        self.selenium.start();\n      });\n      if (! self.quiet && ! self.stopped) {\n        runLog.log(\"Started Selenium.\", { arrow: true });\n      }\n    }\n\n    // XXX It'd be nice to (cosmetically) handle failure better. Right\n    // now we overwrite the \"starting foo...\" message with the\n    // error. It'd be better to overwrite it with \"failed to start\n    // foo\" and then print the error.\n  }\n\n  async _startMongoAsync() {\n    if (! this.stopped && this.mongoRunner) {\n      this.mongoRunner.start();\n      if (! this.stopped && ! this.quiet) {\n        runLog.log(\"Started MongoDB.\", { arrow: true });\n      }\n    }\n  }\n\n  // Idempotent\n  stop() {\n    const self = this;\n    if (self.stopped) {\n      return;\n    }\n\n    self.stopped = true;\n    self.proxy.stop();\n    self.updater.stop();\n    self.mongoRunner && self.mongoRunner.stop();\n    self.appRunner.stop();\n    self.selenium && self.selenium.stop();\n    // XXX does calling this 'finish' still make sense now that runLog is a\n    // singleton?\n    runLog.finish();\n  }\n\n  // Call this whenever you want to regenerate the app's port (if it is not\n  // explicitly specified by the user).\n  //\n  // Rationale: if we randomly chose a port that's in use and the app failed to\n  // listen on it, we should try a different port when we restart the app!\n  regenerateAppPort() {\n    const self = this;\n    if (self.specifiedAppPort) {\n      self.appPort = self.specifiedAppPort;\n    } else {\n      self.appPort = require('../utils/utils.js').randomPort();\n    }\n    if (self.proxy) {\n      self.proxy.proxyToPort = self.appPort;\n    }\n    if (self.appRunner) {\n      self.appRunner.port = self.appPort;\n    }\n  }\n}\n\n// Run the app and all of its associated processes. Runs (and does not\n// return) until an unrecoverable failure happens. Logs to\n// stdout. Returns a suggested exit code.\n//\n// If 'once' is set, run the app process exactly once and pass through\n// its exit code. Return an exit code of 255 if the app process was\n// killed by a signal and 254 if the app process could not start\n// (build failure, invalid program name, database couldn't start, and\n// so on).\n//\n// If the 'once' option is not set, the default, restart the app\n// process if it crashes or if source files change. (Non-app\n// processes, such as the database, are always restarted as\n// necessary.) The function will only return if there is an\n// unrecoverable error, which generally means an error that could not\n// be fixed by source code changes (such as the database refusing to\n// run), but also currently includes Meteor version mismatches. So the\n// exit code will always be 254 because in all other cases we'll\n// persevere.\n//\n// Options:\n//\n// - proxyPort: the port to connect to to access the application (we will\n//   run a proxy here that proxies to the actual app process). required\n// - buildOptions: 'buildOptions' argument to bundler.bundle()\n// - settingsFile: path to file containing deploy-time settings\n// - once: see above\n// - banner: replace the application path that is normally printed on\n//   startup with an arbitrary string (eg, 'Tests')\n// - rootUrl: tell the app that traffic at this URL will be routed to\n//   it at '/' (used by the app to construct absolute URLs)\n// - disableOplog: don't use oplog tailing\n// - mongoUrl: don't start a mongo process; instead use the mongo at\n//   this mongo URL\n// - oplogUrl: URL of the mongo oplog to use. if mongoUrl isn't\n//   set (we're starting a mongo) a default will be provided, but can\n//   be overridden. if mongoUrl is set, you must set this or you don't\n//   get oplog tailing.\n// - recordPackageUsage: (default true) if set to false, don't send\n//   information about packages used by this app to the package stats\n//   server.\nexports.run = function (options) {\n  var runOptions = _.clone(options);\n  var once = runOptions.once;\n\n  var promise = new Promise(function (resolve) {\n    runOptions.onFailure = function () {\n      // Ensure that runner stops now. You might think this is unnecessary\n      // because the runner is stopped immediately after promise.await(), but if\n      // the failure happens while runner.start() is still running, we want the\n      // rest of start to stop, and it's not like resolve() magically makes\n      // us jump to a promise.await() that hasn't happened yet!.\n      runner.stop();\n      resolve({ outcome: 'failure' });\n    };\n\n    runOptions.onRunEnd = function (result) {\n      if (once ||\n          result.outcome === \"conflicting-versions\" ||\n          result.outcome === \"wrong-release\" ||\n          result.outcome === \"outdated-cordova-platforms\" ||\n          result.outcome === \"outdated-cordova-plugins\" ||\n          (result.outcome === \"terminated\" &&\n           result.signal === undefined && result.code === undefined)) {\n        resolve(result);\n        return false;  // stop restarting\n      }\n      runner.regenerateAppPort();\n      return true;  // restart it\n    };\n  });\n\n  runOptions.watchForChanges = ! once;\n  runOptions.quiet = false;\n\n  // Ensure process.env.NODE_ENV matches the build mode, with the following precedence:\n  // 1. Passed in build mode (if development or production)\n  // 2. Existing process.env.NODE_ENV (if it's valid)\n  // 3. Default to development (in both cases) otherwise\n\n  // NOTE: because this code only runs when using `meteor run` or `meteor test[-packages`,\n  // We *don't* end up defaulting NODE_ENV in this way when bundling/deploying.\n  // In those cases, it will default to \"production\" in packages/meteor/*_env.js\n\n  // We *override* NODE_ENV if build mode is one of these values\n  let buildMode = runOptions.buildOptions.buildMode;\n  if (buildMode === \"development\" || buildMode === \"production\") {\n    process.env.NODE_ENV = buildMode;\n  }\n\n  let nodeEnv = process.env.NODE_ENV;\n  // We *never* override buildMode (it can be \"test\")\n  if (!buildMode) {\n    if (nodeEnv === \"development\" || nodeEnv === \"production\") {\n      runOptions.buildOptions.buildMode = nodeEnv;\n    } else {\n      runOptions.buildOptions.buildMode = \"development\";\n    }\n  }\n\n  if (!nodeEnv) {\n    process.env.NODE_ENV = \"development\";\n  }\n\n  var runner = new Runner(runOptions);\n  runner.start();\n  var result = promise.await();\n  runner.stop();\n\n  if (result.outcome === \"conflicting-versions\") {\n    Console.error(\n      \"The constraint solver could not find a set of package versions to\",\n      \"use that would satisfy the constraints of .meteor/versions and\",\n      \".meteor/packages. This could be caused by conflicts in\",\n      \".meteor/versions, conflicts in .meteor/packages, and/or\",\n      \"inconsistent changes to the dependencies in local packages.\");\n    return 254;\n  }\n\n  if (result.outcome === \"outdated-cordova-plugins\") {\n    Console.error(\"Your app's Cordova plugins have changed.\");\n    Console.error(\"Restart meteor to use the new set of plugins.\");\n    return 254;\n  }\n\n  if (result.outcome === \"outdated-cordova-platforms\") {\n    Console.error(\"Your app's platforms have changed.\");\n    Console.error(\"Restart meteor to use the new set of platforms.\");\n    return 254;\n  }\n\n  if (result.outcome === \"wrong-release\") {\n    if (once) {\n      // We lost a race where the user ran 'meteor update' and 'meteor\n      // run --once' simultaneously.\n      throw new Error(\"wrong release?\");\n    }\n\n    // If the user did not specify a --release on the command line,\n    // and simultaneously runs `meteor update` during this run, just\n    // exit and let them restart the run. (We can do something fancy\n    // like allowing this to work if the tools version didn't change,\n    // or even springboarding if the tools version does change, but\n    // this (which prevents weird errors) is a start.)\n    var from = release.current.getDisplayName();\n    var to = result.displayReleaseNeeded;\n    Console.error(\n      \"Your app has been updated to \" + to + \" from \" + from + \".\",\n      \"Restart meteor to use the new release.\");\n    return 254;\n  }\n\n  if (result.outcome === \"failure\" ||\n      (result.outcome === \"terminated\" &&\n       result.signal === undefined && result.code === undefined)) {\n    // Fatal problem with something other than the app process. An\n    // explanation should already have been logged.\n    return 254;\n  }\n\n  if (once && result.outcome === \"bundle-fail\") {\n    Console.arrowError(\"Build failed:\\n\\n\" +\n                       result.errors.formatMessages());\n    return 254;\n  }\n\n  if (once && result.outcome === \"terminated\") {\n    if (result.signal) {\n      Console.error(\"Killed (\" + result.signal + \")\");\n      return 255;\n    } else if (typeof result.code === \"number\") {\n      // We used to print 'Your application is exiting' here, but that\n      // seems unnecessarily chatty? once mode is otherwise silent\n      return result.code;\n    } else {\n      // If there is neither a code nor a signal, it means that we\n      // failed to start the process. We logged the reason. Probably a\n      // bad program name.\n      return 254;\n    }\n  }\n\n  throw new Error(\"unexpected outcome \" + result.outcome);\n};\n"],"file":"tools/runners/run-all.js.map"}