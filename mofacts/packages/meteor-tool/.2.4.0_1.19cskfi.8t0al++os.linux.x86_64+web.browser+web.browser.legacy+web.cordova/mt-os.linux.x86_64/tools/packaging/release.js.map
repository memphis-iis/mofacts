{"version":3,"sources":["/tools/packaging/release.js"],"names":["files","require","catalog","release","exports","Release","options","self","name","_manifest","manifest","Object","assign","prototype","isProperRelease","isCheckout","isRecommended","recommended","getReleaseTrack","Error","split","getReleaseVersion","getToolsPackage","tool","getToolsVersion","getToolsPackageAtVersion","getCurrentToolsVersion","current","getUpgraders","upgraders","getPackages","packages","getCatalogReleaseData","getDisplayName","catalogUtils","displayRelease","forced","explicit","usingRightReleaseForApp","projectContext","usesWarehouse","releaseFile","fullReleaseName","latestKnown","track","process","env","METEOR_TEST_LATEST_RELEASE","defaultRelease","official","getDefaultReleaseVersion","version","load","parts","length","DEFAULT_TRACK","releaseVersion","NoSuchReleaseError","setCurrent","releaseObject"],"mappings":"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","sourcesContent":["var files = require('../fs/files');\nvar catalog = require('./catalog/catalog.js');\n\nvar release = exports;\n\nvar Release = function (options) {\n  var self = this;\n\n  // If an actual, proper, \"released\" release, the name of the\n  // release, eg, \"METEOR@1.0\". If not a proper release, null.\n  self.name = options.name;\n\n  if (self.name === null) {\n    // Running from checkout.\n    self._manifest = null;\n  } else {\n    // Running a proper release\n    self._manifest = options.manifest;\n  }\n};\n\nObject.assign(Release.prototype, {\n  // True if an actual, proper, \"released\" release. If so, this.name\n  // will have the name of the release, eg, \"1.0\".\n  isProperRelease: function () {\n    return this.name !== null;\n  },\n\n  // True if this \"release\" is actually a checkout on disk. It is\n  // defined by the packages in the checkout rather than by a\n  // manifest. this.name will be null.\n  isCheckout: function () {\n    return this.name === null;\n  },\n\n  isRecommended: function () {\n    return this._manifest.recommended;\n  },\n\n  getReleaseTrack: function () {\n    var self = this;\n    if (! self.isProperRelease()) {\n      throw new Error(\"not a proper release?\");\n    }\n    return self.name.split('@')[0];\n  },\n\n  getReleaseVersion: function () {\n    var self = this;\n    if (! self.isProperRelease()) {\n      throw new Error(\"not a proper release?\");\n    }\n    return self.name.split('@')[1];\n  },\n\n  // Return the package name for the command-line tools that this release\n  // uses. Valid only for proper releases.\n  getToolsPackage: function () {\n    var self = this;\n\n    if (! self.isProperRelease()) {\n      throw new Error(\"not a proper release?\");\n    }\n    // XXX validate\n    return self._manifest.tool.split('@')[0];\n  },\n\n  // Return the version of the command-line tools that this release\n  // uses. Valid only for proper releases.\n  getToolsVersion: function () {\n    var self = this;\n\n    if (! self.isProperRelease()) {\n      throw new Error(\"not a proper release?\");\n    }\n    // XXX validate\n    return self._manifest.tool.split('@')[1];\n  },\n\n  // Return the package name and version of the command-line tools that this\n  // release uses. Valid only for proper releases.\n  getToolsPackageAtVersion: function () {\n    var self = this;\n\n    if (! self.isProperRelease()) {\n      throw new Error(\"not a proper release?\");\n    }\n    return self._manifest.tool;\n  },\n\n  // Return the tool that we are using. If this is a proper release, return the\n  // tool package listed in the manifest, otherwise return the version of the\n  // meteor-tool package in checkout.\n  getCurrentToolsVersion: function () {\n    var self = this;\n\n    if (release.current.name) {\n      return self._manifest.tool;\n    } else {\n      return \"meteor-tool@CHECKOUT\";\n    }\n  },\n\n  // Return a list of the upgraders (project migrations) for this\n  // release, an (ordered!) array of strings. Valid only for proper\n  // releases.\n  getUpgraders: function () {\n    var self = this;\n\n    if (! self.isProperRelease()) {\n      throw new Error(\"not a proper release?\");\n    }\n    return self._manifest.upgraders || [];\n  },\n\n  getPackages: function () {\n    var self = this;\n\n    if (! self.isProperRelease()) {\n      throw new Error(\"not a proper release?\");\n    }\n    return self._manifest.packages;\n  },\n\n  getCatalogReleaseData: function () {\n    var self = this;\n    if (! self.isProperRelease()) {\n      throw new Error(\"not a proper release?\");\n    }\n    return self._manifest;\n  },\n\n  getDisplayName: function (options) {\n    var self = this;\n    const catalogUtils = require('./catalog/catalog-utils.js');\n    return catalogUtils.displayRelease(\n      self.getReleaseTrack(),\n      self.getReleaseVersion(),\n      options);\n  }\n});\n\n// The current release. Once set, this does not change for the\n// lifetime of the process.\n//\n// It is possible that we don't have a release. Currently this only\n// comes up in one case: an app was created with a checkout version of\n// Meteor, and then run with a release version of Meteor. In this case\n// release.current will be null. (It will also be null during startup,\n// until setRelease has been called.)\n//\n// (If you want to change the current release, you have to\n// springboard, the same as if you want to change the current tools\n// version. Besides being simpler to reason about, this helps to\n// prepare us for a future where the 'meteor' tool itself is a Meteor\n// app, running against a particular Meteor release.)\nrelease.current = null;\n\n// True if we are using release.current because we were forced to do that by the\n// '--release' command line option or via throwing SpringboardToLatestRelease,\n// else false. (It is true anytime --release was passed, even if it's the same\n// release we would have used anyway. It is false anytime the current release is\n// a checkin.) null if release.current is null.\nrelease.forced = null;\n\n// True if the release was explicitly specified by the user with the --release\n// flag. Unlike release.forced, this is false when the release is overridden via\n// SpringboardToLatestRelease.\nrelease.explicit = null;\n\n// True if release.current is the release we'd use if we wanted to run the app\n// in the current project. (taking into account release.forced and whether we're\n// currently running from a checkout).\nrelease.usingRightReleaseForApp = function (projectContext) {\n  if (release.current === null) {\n    throw new Error(\"no release?\");\n  }\n\n  if (! files.usesWarehouse() || release.forced) {\n    return true;\n  }\n\n  return release.current.name === projectContext.releaseFile.fullReleaseName;\n};\n\n// Return the name of the latest release that is downloaded and ready\n// for use. May not be called when running from a checkout.\n// 'track' is optional (it defaults to the default track).\nrelease.latestKnown = function (track) {\n  if (! files.usesWarehouse()) {\n    throw new Error(\"called from checkout?\");\n  }\n  // For self-test only.\n  if (process.env.METEOR_TEST_LATEST_RELEASE) {\n    return process.env.METEOR_TEST_LATEST_RELEASE;\n  }\n\n\n  var defaultRelease = catalog.official.getDefaultReleaseVersion(track);\n\n  if (!defaultRelease) {\n    return null;\n  }\n  return defaultRelease.track + '@' + defaultRelease.version;\n};\n\n// Load a release and return it as a Release object without setting\n// release.current to that release. Unlike release.setCurrent(), this\n// may be called as many times as you like.\n//\n// This will fetch the release from the server if it isn't cached\n// locally. If that happens it will print progress messages.\n//\n// Arguments:\n// - name: release name to use. Or pass 'null' to use a checkout\n// - options:\n//   - quiet: if the release has to be downloaded, don't print\n//     progress messages.\n//\n// Throws:\n// - files.OfflineError if it was not possible to load the\n//   release because it's not locally cached and we're not online.\n// - warehouse.NoSuchReleaseError if no release called 'name' exists\n//   in the world (confirmed with server).\nrelease.load = function (name, options) {\n  options = options || {};\n\n  if (! name) {\n    return new Release({ name: null });\n  }\n\n  var parts = name.split('@');\n  if (parts.length > 2) {\n    // XXX #Pre090 better error handling\n    throw Error(\"too many @s in release name\");\n  }\n  var track, version;\n  if (parts.length == 2) {\n    track = parts[0];\n    version = parts[1];\n  } else {\n    track = catalog.DEFAULT_TRACK;\n    version = parts[0];\n    name = track + '@' + version;\n  }\n\n  var releaseVersion = catalog.official.getReleaseVersion(track, version);\n  if (releaseVersion === null) {\n    throw new release.NoSuchReleaseError;\n  }\n\n  return new Release({\n    name: name,\n    manifest: releaseVersion  // XXX rename from manifest?\n  });\n};\n\n// Called by the startup code to set release.current. May only be\n// called once.\n//\n// - releaseObject: a Release as returned from release.load()\n// - forced: true if the chosen release was forced from the command\n//   line (by the user or by the update springboard).\n// - explicit: true if the release was specifically requested by the user.\nrelease.setCurrent = function (releaseObject, forced, explicit) {\n  if (release.current) {\n    throw new Error(\"release set twice?\");\n  }\n\n  release.current = releaseObject;\n  release.forced = !! forced;\n  release.explicit = !! explicit;\n};\n\n// An exception meaning that you asked for a release that doesn't exist in the\n// new packaging world.  (It may still exist in the pre-0.9.0 packaging world.)\nrelease.NoSuchReleaseError = function () {\n};\n"],"file":"tools/packaging/release.js.map"}