{"version":3,"sources":["/tools/packaging/catalog/catalog-local.js"],"names":["glob","module1","link","sync","v","Profile","optimisticHashOrNull","_","require","buildmessage","files","watch","PackageSource","KNOWN_ISOBUILD_FEATURE_PACKAGES","LocalCatalog","options","self","packages","initialized","localPackageSearchDirs","explicitlyAddedLocalPackageDirs","effectiveLocalPackageDirs","packageLocationWatchSet","WatchSet","_nextId","Object","assign","prototype","toString","JSON","stringify","initialize","assertInCapture","addPatternsToList","patterns","list","forEach","pattern","process","platform","convertToOSPath","charAt","slice","convertToPosixPath","p","push","pathResolve","_computeEffectiveLocalPackages","_loadLocalPackages","buildingIsopackets","_requireInitialized","Error","getAllPackageNames","keys","getAllNonTestPackageNames","includeNonCore","ret","nonCoreDir","pathJoin","getCurrentToolsDir","pathSep","each","name","packageSource","sourceRoot","versionRecord","isTest","startsWith","getPackage","has","packageRecord","getSortedVersions","version","getSortedVersionRecords","map","packageName","dependencies","getVersion","getLatestVersion","getVersionBySourceRoot","packageObj","find","enterJob","explicitDir","packageJsPath","packageJsHash","addFile","error","file","searchDir","possiblePackageDirs","readAndWatchDirectory","absPath","include","subdir","substr","length","absPackageDir","initSourceFromDir","packageDir","definiteName","title","rootPath","initFromPackageDirOptions","initFromPackageDir","jobHasMessages","_id","maintainers","lastUpdated","testName","publishedBy","description","metadata","summary","git","getDependencyMetadata","source","published","debugOnly","prodOnly","testOnly","deprecated","deprecatedMessage","containsPlugins","dir","getPackageSource","method","exports"],"mappings":"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","sourcesContent":["\nvar _ = require('underscore');\nvar buildmessage = require('../../utils/buildmessage.js');\nvar files = require('../../fs/files');\nvar watch = require('../../fs/watch');\n\nvar PackageSource = require('../../isobuild/package-source.js');\nimport { sync as glob } from \"glob\";\nimport { Profile } from \"../../tool-env/profile\";\nimport {\n  optimisticHashOrNull,\n} from \"../../fs/optimistic\";\n\n// This variable was duplicated due to an issue on importing it.\n// The issue only happens on node 14, and is most surely related to this: https://nodejs.org/en/blog/release/v14.0.0/\n// !!! When changing this, also change on tools/project-context.js !!!\nconst KNOWN_ISOBUILD_FEATURE_PACKAGES = {\n  // This package directly calls Plugin.registerCompiler. Package authors\n  // must explicitly depend on this feature package to use the API.\n  'isobuild:compiler-plugin': ['1.0.0'],\n\n  // This package directly calls Plugin.registerMinifier. Package authors\n  // must explicitly depend on this feature package to use the API.\n  'isobuild:minifier-plugin': ['1.0.0'],\n\n  // This package directly calls Plugin.registerLinter. Package authors\n  // must explicitly depend on this feature package to use the API.\n  'isobuild:linter-plugin': ['1.0.0'],\n\n  // This package is only published in the isopack-2 format, not isopack-1 or\n  // older. ie, it contains \"source\" files for compiler plugins, not just\n  // JS/CSS/static assets/head/body.\n  // This is implicitly added at publish time to any such package; package\n  // authors don't have to add it explicitly. It isn't relevant for local\n  // packages, which can be rebuilt if possible by the older tool.\n  //\n  // Specifically, this is to avoid the case where a package is published with a\n  // dependency like `api.use('less@1.0.0 || 2.0.0')` and the publication\n  // selects the newer compiler plugin version to generate the isopack. The\n  // published package (if this feature package wasn't implicitly included)\n  // could still be selected by the Version Solver to be used with an old\n  // Isobuild... just because less@2.0.0 depends on isobuild:compiler-plugin\n  // doesn't mean it couldn't choose less@1.0.0, which is not actually\n  // compatible with this published package.  (Constraints of the form described\n  // above are not very helpful, but at least we can prevent old Isobuilds from\n  // choking on confusing packages.)\n  //\n  // (Why not isobuild:isopack@2.0.0? Well, that would imply that Version Solver\n  // would have to choose only one isobuild:isopack feature version, which\n  // doesn't make sense here.)\n  'isobuild:isopack-2': ['1.0.0'],\n\n  // This package uses the `prodOnly` metadata flag, which causes it to\n  // automatically depend on the `isobuild:prod-only` feature package.\n  'isobuild:prod-only': ['1.0.0'],\n\n  // This package depends on a specific version of Cordova. Package authors must\n  // explicitly depend on this feature package to indicate that they are not\n  // compatible with earlier Cordova versions, which is most likely a result of\n  // the Cordova plugins they depend on.\n  // One scenario is a package depending on a Cordova plugin or version\n  // that is only available on npm, which means downloading the plugin is not\n  // supported on versions of Cordova below 5.0.0.\n  'isobuild:cordova': ['5.4.0'],\n\n  // This package requires functionality introduced in meteor-tool@1.5.0\n  // to enable dynamic module fetching via import(...).\n  'isobuild:dynamic-import': ['1.5.0'],\n\n  // This package ensures that processFilesFor{Bundle,Target,Package} are\n  // allowed to return a Promise instead of having to await async\n  // compilation using fibers and/or futures.\n  'isobuild:async-plugins': ['1.6.1'],\n}\n\n// LocalCatalog represents packages located in the application's\n// package directory, other package directories specified via an\n// environment variable, and core packages in the repo if meteor is\n// being run from a git checkout.\nvar LocalCatalog = function (options) {\n  var self = this;\n  options = options || {};\n\n  // Package server data.  Maps package name to a {packageSource, packageRecord,\n  // versionRecord} object.\n  self.packages = {};\n\n  self.initialized = false;\n\n    // Local directories to search for package source trees\n  self.localPackageSearchDirs = null;\n\n  // Package source trees added explicitly through a directory (not through a\n  // parent search directory). We mainly use this to allow the user to run\n  // test-packages against a package in a specific directory.\n  self.explicitlyAddedLocalPackageDirs = [];\n\n  // All packages found either by localPackageSearchDirs or\n  // explicitlyAddedLocalPackageDirs. There is a hierarchy of packages, as\n  // detailed below and there can only be one local version of a package at a\n  // time. This refers to the package by the specific package directory that we\n  // need to process.\n  self.effectiveLocalPackageDirs = [];\n\n  // A WatchSet that detects when the set of packages and their locations\n  // changes. ie, the listings of 'packages' directories, and the contents of\n  // package.js files underneath.  It does NOT track the rest of the source of\n  // the packages: that wouldn't be helpful to the runner since it would be too\n  // coarse to tell if a change is client-only or not.  (But any change to the\n  // layout of where packages live counts as a non-client-only change.)\n  self.packageLocationWatchSet = new watch.WatchSet;\n\n  self._nextId = 1;\n};\n\nObject.assign(LocalCatalog.prototype, {\n  toString: function () {\n    var self = this;\n    return \"LocalCatalog [localPackageSearchDirs=\" +\n      JSON.stringify(self.localPackageSearchDirs) + \"]\";\n  },\n\n  // Initialize the Catalog. This must be called before any other\n  // Catalog function.\n\n  // options:\n  //  - localPackageSearchDirs: an array of paths on local disk, that contain\n  //    subdirectories, that each contain a source tree for a package that\n  //    should override the packages on the package server. For example, if\n  //    there is a package 'foo' that we find through localPackageSearchDirs,\n  //    then we will ignore all versions of 'foo' that we find through the\n  //    package server. Directories that don't exist (or paths that aren't\n  //    directories) will be silently ignored.\n  //  - explicitlyAddedLocalPackageDirs: an array of paths which THEMSELVES\n  //    are package source trees.  Takes precedence over packages found\n  //    via localPackageSearchDirs.\n  //  - buildingIsopackets: true if we are building isopackets\n  initialize(options) {\n    var self = this;\n    buildmessage.assertInCapture();\n\n    options = options || {};\n\n    const addPatternsToList =\n      Profile(\"addPatternsToList\", (patterns, list) => {\n        if (! patterns) {\n          return;\n        }\n\n        patterns.forEach(pattern => {\n          if (process.platform === \"win32\") {\n            pattern = files.convertToOSPath(pattern);\n\n            if (pattern.charAt(1) === \":\") {\n              // Get rid of drive prefix, e.g. C:\n              pattern = pattern.slice(2);\n            }\n\n            // Convert to /forward/slash/path without /C\n            pattern = files.convertToPosixPath(pattern, true);\n          }\n\n          // Note: glob expects POSIX-style paths, even on Windows.\n          // https://github.com/isaacs/node-glob/blob/master/README.md#windows\n          glob(pattern).forEach(\n            p => list.push(files.pathResolve(p))\n          );\n        });\n      });\n\n    addPatternsToList(\n      options.localPackageSearchDirs,\n      self.localPackageSearchDirs = [],\n    );\n\n    addPatternsToList(\n      options.explicitlyAddedLocalPackageDirs,\n      self.explicitlyAddedLocalPackageDirs = [],\n    );\n\n    self._computeEffectiveLocalPackages();\n    self._loadLocalPackages(options.buildingIsopackets);\n    self.initialized = true;\n  },\n\n  // Throw if the catalog's self.initialized value has not been set to true.\n  _requireInitialized: function () {\n    var self = this;\n\n    if (! self.initialized)\n      throw new Error(\"catalog not initialized yet?\");\n  },\n\n  // Return an array with the names of all of the packages that we know about,\n  // in no particular order.\n  getAllPackageNames: function (options) {\n    var self = this;\n    self._requireInitialized();\n\n    return Object.keys(self.packages);\n  },\n\n  // Return an array with the names of all of the non-test packages that we know\n  // about, in no particular order.\n  getAllNonTestPackageNames: function ({\n    // Iff options.includeNonCore is truthy, packages in\n    // meteor/packages/non-core/*/packages will be returned.\n    includeNonCore = true,\n  } = {}) {\n    var self = this;\n    self._requireInitialized();\n\n    var ret = [];\n\n    const nonCoreDir = files.pathJoin(\n      files.getCurrentToolsDir(),\n      \"packages\",\n      \"non-core\"\n    ) + files.pathSep;\n\n    _.each(self.packages, function ({\n      packageSource: { sourceRoot },\n      versionRecord: { isTest },\n    }, name) {\n      if (isTest) {\n        return;\n      }\n\n      if (! includeNonCore &&\n          sourceRoot.startsWith(nonCoreDir)) {\n        return;\n      }\n\n      ret.push(name);\n    });\n\n    return ret;\n  },\n\n  // Returns general (non-version-specific) information about a\n  // package, or null if there is no such package.\n  getPackage: function (name, options) {\n    var self = this;\n    self._requireInitialized();\n    options = options || {};\n\n    if (!_.has(self.packages, name))\n      return null;\n    return self.packages[name].packageRecord;\n  },\n\n  // Given a package, returns an array of the versions available (ie, the one\n  // version we have, or an empty array).\n  getSortedVersions: function (name) {\n    var self = this;\n    self._requireInitialized();\n\n    if (!_.has(self.packages, name))\n      return [];\n    return [self.packages[name].versionRecord.version];\n  },\n\n  // Given a package, returns an array of the version records available (ie, the\n  // one version we have, or an empty array). This method is intended for use by\n  // Version Solver's CatalogLoader.\n  //\n  // As a special case, if name is an isobuild:* pseudo-package, returns\n  // (minimal) information about it as well.\n  getSortedVersionRecords: function (name) {\n    var self = this;\n    self._requireInitialized();\n\n    if (_.has(KNOWN_ISOBUILD_FEATURE_PACKAGES, name)) {\n      return KNOWN_ISOBUILD_FEATURE_PACKAGES[name].map(\n        version => ({version, packageName: name, dependencies: {}})\n      );\n    }\n\n    if (!_.has(self.packages, name))\n      return [];\n    return [self.packages[name].versionRecord];\n  },\n\n  // Return information about a particular version of a package, or\n  // null if there is no such package or version.\n  getVersion: function (name, version) {\n    var self = this;\n    self._requireInitialized();\n\n    if (!_.has(self.packages, name))\n      return null;\n    var versionRecord = self.packages[name].versionRecord;\n    if (versionRecord.version !== version)\n      return null;\n    return versionRecord;\n  },\n\n  // As getVersion, but returns info on the latest version of the\n  // package, or null if the package doesn't exist or has no versions.\n  getLatestVersion: function (name) {\n    var self = this;\n\n    if (!_.has(self.packages, name))\n      return null;\n    return self.packages[name].versionRecord;\n  },\n\n  getVersionBySourceRoot: function (sourceRoot) {\n    var self = this;\n    var packageObj = _.find(self.packages, function (p) {\n      return p.packageSource.sourceRoot === sourceRoot;\n    });\n    if (! packageObj)\n      return null;\n    return packageObj.versionRecord;\n  },\n\n  // Compute self.effectiveLocalPackageDirs from self.localPackageSearchDirs and\n  // self.explicitlyAddedLocalPackageDirs.\n  _computeEffectiveLocalPackages() {\n    var self = this;\n    buildmessage.assertInCapture();\n\n    self.effectiveLocalPackageDirs = [];\n\n    buildmessage.enterJob(\"looking for packages\", function () {\n      _.each(self.explicitlyAddedLocalPackageDirs, (explicitDir) => {\n        const packageJsPath = files.pathJoin(explicitDir, \"package.js\");\n        const packageJsHash = optimisticHashOrNull(packageJsPath);\n\n        if (packageJsHash) {\n          self.packageLocationWatchSet.addFile(\n            packageJsPath,\n            packageJsHash,\n          );\n\n          self.effectiveLocalPackageDirs.push(explicitDir);\n\n        } else {\n          // We asked specifically for this directory, but it has no package!\n          buildmessage.error(\"package has no package.js file\", {\n            file: explicitDir\n          });\n        }\n      });\n\n      _.each(self.localPackageSearchDirs, function (searchDir) {\n        var possiblePackageDirs = watch.readAndWatchDirectory(\n          self.packageLocationWatchSet, {\n            absPath: searchDir,\n            include: [/\\/$/]\n          });\n        // Not a directory? Ignore.\n        if (possiblePackageDirs === null)\n          return;\n\n        _.each(possiblePackageDirs, function (subdir) {\n          // readAndWatchDirectory adds a slash to the end of directory names to\n          // differentiate them from filenames. Remove it.\n          subdir = subdir.substr(0, subdir.length - 1);\n          var absPackageDir = files.pathJoin(searchDir, subdir);\n\n          // Consider a directory to be a package source tree if it contains\n          // 'package.js'. (We used to support isopacks in\n          // localPackageSearchDirs, but no longer.)\n\n          const packageJsPath = files.pathJoin(absPackageDir, \"package.js\");\n          const packageJsHash = optimisticHashOrNull(packageJsPath);\n\n          if (packageJsHash) {\n            // Let earlier package directories override later package\n            // directories.\n            self.packageLocationWatchSet.addFile(\n              packageJsPath,\n              packageJsHash,\n            );\n\n            // We don't know the name of the package, so we can't deal with\n            // duplicates yet. We are going to have to rely on the fact that we\n            // are putting these in in order, to be processed in order.\n            self.effectiveLocalPackageDirs.push(absPackageDir);\n          }\n        });\n      });\n    });\n  },\n\n  _loadLocalPackages(buildingIsopackets) {\n    var self = this;\n    buildmessage.assertInCapture();\n\n    // Load the package source from a directory. We don't know the names of our\n    // local packages until we do this.\n    //\n    // THIS MUST BE RUN IN LOAD ORDER. Let's say that we have two directories\n    // for mongo-livedata. The first one processed by this function will be\n    // canonical.  The second one will be ignored.\n    //\n    // (note: this is the behavior that we want for overriding things in\n    //  checkout.  It is not clear that you get good UX if you have two packages\n    //  with the same name in your app. We don't check that.)\n    var initSourceFromDir = function (packageDir, definiteName) {\n      var packageSource = new PackageSource;\n      buildmessage.enterJob({\n        title: \"reading package from `\" + packageDir + \"`\",\n        rootPath: packageDir\n      }, function () {\n        var initFromPackageDirOptions = {\n          buildingIsopackets: !! buildingIsopackets\n        };\n        // If we specified a name, then we know what we want to get and should\n        // pass that into the options. Otherwise, we will use the 'name'\n        // attribute from package-source.js.\n        if (definiteName) {\n          initFromPackageDirOptions.name = definiteName;\n        }\n        packageSource.initFromPackageDir(packageDir, initFromPackageDirOptions);\n        if (buildmessage.jobHasMessages())\n          return;  // recover by ignoring\n\n        // Now that we have initialized the package from package.js, we know its\n        // name.\n        var name = packageSource.name;\n\n        // We should only have one package dir for each name; in this case, we\n        // are going to take the first one we get (since we preserved the order\n        // in which we loaded local package dirs when running this function.)\n        if (_.has(self.packages, name))\n          return;\n\n        self.packages[name] = {\n          packageSource: packageSource,\n          packageRecord: {\n            _id: \"PID\" + self._nextId++,\n            name: name,\n            maintainers: null,\n            lastUpdated: null\n          },\n          versionRecord: {\n            _id: \"VID\" + self._nextId++,\n            packageName: name,\n            testName: packageSource.testName,\n            version: packageSource.version,\n            publishedBy: null,\n            description: packageSource.metadata.summary,\n            git: packageSource.metadata.git,\n            dependencies: packageSource.getDependencyMetadata(),\n            source: null,\n            lastUpdated: null,\n            published: null,\n            isTest: packageSource.isTest,\n            debugOnly: packageSource.debugOnly,\n            prodOnly: packageSource.prodOnly,\n            testOnly: packageSource.testOnly,\n\n            deprecated: packageSource.deprecated,\n            deprecatedMessage: packageSource.deprecatedMessage,\n\n            containsPlugins: packageSource.containsPlugins()\n          }\n        };\n\n        // If this is NOT a test package AND it has tests (tests will be\n        // marked as test packages by package source, so we will not recurse\n        // infinitely), then process that too.\n        if (!packageSource.isTest && packageSource.testName) {\n          initSourceFromDir(packageSource.sourceRoot, packageSource.testName);\n        }\n      });\n    };\n\n    // Load the package sources for packages and their tests into\n    // self.packages.\n    buildmessage.enterJob('initializing packages', function() {\n      _.each(self.effectiveLocalPackageDirs, function (dir) {\n        initSourceFromDir(dir);\n      });\n    });\n  },\n\n  getPackageSource: function (name) {\n    var self = this;\n    if (! _.has(self.packages, name))\n      return null;\n    return self.packages[name].packageSource;\n  }\n});\n\n[\"initialize\",\n \"_computeEffectiveLocalPackages\",\n \"_loadLocalPackages\",\n].forEach(function (method) {\n  this[method] = Profile(\"LocalCatalog#\" + method, this[method]);\n}, LocalCatalog.prototype);\n\nexports.LocalCatalog = LocalCatalog;\n"],"file":"tools/packaging/catalog/catalog-local.js.map"}