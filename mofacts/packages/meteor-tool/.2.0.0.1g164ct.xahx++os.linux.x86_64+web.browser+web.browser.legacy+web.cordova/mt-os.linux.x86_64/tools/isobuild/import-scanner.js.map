{"version":3,"sources":["tools/isobuild/import-scanner.ts"],"names":[],"mappings":"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","sourcesContent":["import assert from \"assert\";\nimport {inspect} from \"util\";\nimport {Script} from \"vm\";\nimport {\n  isString, isObject, isEmpty, has, keys, each, omit,\n} from \"underscore\";\nimport {sha1} from \"../fs/watch\";\nimport {\n  matches as archMatches,\n  isLegacyArch,\n} from \"../utils/archinfo\";\nimport {findImportedModuleIdentifiers} from \"./js-analyze.js\";\nimport {cssToCommonJS} from \"./css-modules\";\nimport buildmessage from \"../utils/buildmessage.js\";\nimport {Profile} from \"../tool-env/profile\";\nimport {\n  mkdir_p,\n  pathJoin,\n  pathRelative,\n  pathNormalize,\n  pathExtname,\n  pathDirname,\n  pathIsAbsolute,\n  convertToOSPath,\n  convertToPosixPath,\n  realpathOrNull,\n  writeFileAtomically,\n  readFile,\n} from \"../fs/files\";\n\nconst { SourceNode, SourceMapConsumer } = require(\"source-map\");\n\nconst {\n  relative: posixRelative,\n  dirname: posixDirname,\n} = require(\"path\").posix;\n\nimport {\n  optimisticReadFile,\n  optimisticStatOrNull,\n  optimisticLStatOrNull,\n  optimisticHashOrNull,\n  optimisticLookupPackageJsonArray,\n} from \"../fs/optimistic\";\n\nimport { wrap } from \"optimism\";\nconst { compile: reifyCompile } = require(\"reify/lib/compiler\");\nconst { parse: reifyBabelParse } = require(\"reify/lib/parsers/babel\");\n\nimport Resolver, { Resolution } from \"./resolver\";\n\nconst fakeFileStat = {\n  isFile() {\n    return true;\n  },\n\n  isDirectory() {\n    return false;\n  }\n} as import(\"fs\").Stats;\n\n// Symbol used by scanMissingModules to mark certain files as temporary,\n// to prevent them from being added to scanner.outputFiles.\nconst fakeSymbol = Symbol(\"fake\");\n\nconst emptyDataString = \"\";\nconst emptyData = Buffer.from(emptyDataString, \"utf8\");\nconst emptyHash = sha1(emptyDataString);\n\nfunction stripHashBang(dataString: string) {\n  return dataString.replace(/^#![^\\n]*/, \"\");\n}\n\nconst reifyCompileWithCache = Profile(\"reifyCompileWithCache\", wrap(function (\n  source,\n  _hash,\n  bundleArch,\n  cacheFilePath,\n) {\n  if (cacheFilePath) {\n    try {\n      return readFile(cacheFilePath, \"utf8\");\n    } catch (e) {\n      if (e.code !== \"ENOENT\") throw e;\n    }\n  }\n\n  const isLegacy = isLegacyArch(bundleArch);\n  let result = reifyCompile(stripHashBang(source), {\n    parse: reifyBabelParse,\n    generateLetDeclarations: !isLegacy,\n    avoidModernSyntax: isLegacy,\n    enforceStrictMode: false,\n    dynamicImport: true,\n    ast: false,\n  }).code;\n\n  if (cacheFilePath) {\n    Promise.resolve().then(\n      () => writeFileAtomically(cacheFilePath, result),\n    );\n  }\n\n  return result;\n}, {\n  makeCacheKey(_source, hash, bundleArch) {\n    return JSON.stringify([hash, bundleArch]);\n  }\n}));\n\nclass DefaultHandlers {\n  private cacheDir?: string;\n  private bundleArch: string;\n\n  constructor({\n    cacheDir,\n    bundleArch,\n  }: Record<string, string>) {\n    this.bundleArch = bundleArch;\n    if (cacheDir) {\n      mkdir_p(this.cacheDir = pathJoin(\n        cacheDir,\n        bundleArch,\n      ));\n    }\n  }\n\n  getCacheFileName(file: RawFile) {\n    return this.cacheDir && pathJoin(this.cacheDir, \"reify-\" + file.hash + \".js\");\n  }\n\n  call(\n    method: \"js\" | \"mjs\" | \"json\" | \"css\",\n    file: RawFile,\n  ): string {\n    return this[method](file);\n  }\n\n  js(file: RawFile) {\n    const parts = file.absPath.split(\"/\");\n    const nmi = parts.lastIndexOf(\"node_modules\");\n    if (nmi >= 0) {\n      const nextPart = parts[nmi + 1];\n      // The core-js package is one example of a package that does not\n      // need recompilation to support import/export syntax. Since it is\n      // used heavily by the ecmascript-runtime-{client,server} Meteor\n      // packages, it makes sense to hard-code this exception.\n      if (nextPart === \"core-js\") {\n        return stripHashBang(file.dataString);\n      }\n    }\n\n    const cacheFileName = this.cacheDir ? \n      this.getCacheFileName(file) :\n      null;\n\n    return reifyCompileWithCache(\n      file.dataString,\n      file.hash,\n      this.bundleArch,\n      cacheFileName\n    )\n  }\n\n  // Files with an .mjs extension are just JavaScript plus module syntax.\n  mjs(file: RawFile) {\n    return this.js(file);\n  }\n\n  json(file: RawFile) {\n    file.jsonData = JSON.parse(file.dataString);\n    return jsonDataToCommonJS(file.jsonData);\n  }\n\n  css({ dataString, hash }: RawFile) {\n    return cssToCommonJS(dataString, hash);\n  }\n}\n\n[\n  \"js\",\n  \"json\",\n  \"css\",\n].forEach(function (this: any, type: string) {\n  this[type] = Profile(\"DefaultHandlers.\" + type, this[type]);\n}, DefaultHandlers.prototype);\n\nfunction jsonDataToCommonJS(data: any) {\n  return \"module.exports = \" +\n    JSON.stringify(data, null, 2) + \";\\n\";\n}\n\n// This is just a map from hashes to booleans, so it doesn't need full LRU\n// eviction logic.\nconst scriptParseCache = Object.create(null);\n\nfunction canBeParsedAsPlainJS(dataString: string, hash: string): boolean {\n  if (hash && has(scriptParseCache, hash)) {\n    return scriptParseCache[hash];\n  }\n\n  try {\n    var result = !! new Script(dataString);\n  } catch (e) {\n    result = false;\n  }\n\n  if (hash) {\n    scriptParseCache[hash] = result;\n  }\n\n  return result;\n}\n\nfunction stripLeadingSlash(path?: string) {\n  if (typeof path === \"string\" &&\n      path.charAt(0) === \"/\") {\n    return path.slice(1);\n  }\n\n  return path;\n}\n\nfunction ensureLeadingSlash(path?: string) {\n  if (typeof path !== \"string\") {\n    return path;\n  }\n\n  const posix = convertToPosixPath(path);\n\n  if (posix.charAt(0) !== \"/\") {\n    return \"/\" + posix;\n  }\n\n  return posix;\n}\n\nconst Status = {\n  NOT_IMPORTED: false,\n  DYNAMIC: 'dynamic',\n  STATIC: 'static',\n};\n\n// Files start with file.imported === false. As we scan the dependency\n// graph, a file can get promoted to \"dynamic\" or \"static\" to indicate\n// that it has been imported by other modules. The \"dynamic\" status trumps\n// false, and \"static\" trumps both \"dynamic\" and false. A file can never\n// be demoted to a lower status after it has been promoted.\nconst importedStatusOrder = [\n  Status.NOT_IMPORTED,\n  Status.DYNAMIC,\n  Status.STATIC,\n];\n\n// Set each file.imported status to the maximum status of provided files.\nfunction alignImportedStatuses(...files: File[]) {\n  const maxIndex = Math.max(...files.map(\n    file => importedStatusOrder.indexOf(file.imported)));\n  const maxStatus = importedStatusOrder[maxIndex];\n  files.forEach(file => file.imported = maxStatus);\n}\n\nfunction getParentStatus(importInfos: ImportInfo[]) {\n  return importInfos.some(entry => !entry.parentWasDynamic)\n    ? Status.STATIC\n    : Status.DYNAMIC;\n}\n\nfunction isHigherStatus(\n  newStatus: string | boolean,\n  previousStatus: string | boolean,\n) {\n  return importedStatusOrder.indexOf(newStatus) >\n    importedStatusOrder.indexOf(previousStatus);\n}\n\n// Set file.imported to status if status has a higher index than the\n// current value of file.imported.\nfunction setImportedStatus(file: File, status: string | boolean) {\n  if (isHigherStatus(status, file.imported)) {\n    file.imported = status;\n  }\n}\n\n// Map from SHA (which is already calculated, so free for us)\n// to the results of calling findImportedModuleIdentifiers.\n// Each entry is an array of strings, and this is a case where\n// the computation is expensive but the output is very small.\n// The cache can be global because findImportedModuleIdentifiers\n// is a pure function, and that way it applies across instances\n// of ImportScanner (which do not persist across builds).\nconst LRU = require(\"lru-cache\");\nconst IMPORT_SCANNER_CACHE = new LRU({\n  max: 1024*1024,\n  length(ids: Record<string, ImportInfo>) {\n    let total = 40; // size of key\n    each(ids, (_info, id) => { total += id.length; });\n    return total;\n  }\n});\n\n// Stub used for entry point modules within node_modules directories on\n// the server. These stub modules delegate to native Node evaluation by\n// calling module.useNode() immediately, but it's important that we have\n// something to include in the bundle so that parent modules have\n// something to resolve.\nconst useNodeStub: Omit<RawFile, \"absPath\"> = function () {\n  const dataString = \"module.useNode();\";\n  const data = Buffer.from(dataString, \"utf8\");\n  return {\n    type: \"js\",\n    data,\n    dataString,\n    hash: sha1(data),\n    deps: Object.create(null),\n  };\n}();\n\nexport type ImportScannerOptions = {\n  name: string;\n  bundleArch: string;\n  extensions: string[];\n  sourceRoot: string;\n  nodeModulesPaths: string[];\n  cacheDir: string;\n}\n\ninterface RawFile {\n  absPath: string;\n  data: Buffer;\n  dataString: string;\n  hash: string;\n  jsonData?: Record<string, any>;\n}\n\ninterface File extends RawFile {\n  type: string;\n  sourcePath: string;\n  targetPath?: string;\n  servePath?: string;\n  absModuleId?: string;\n  deps?: Record<string, ImportInfo>;\n  lazy: boolean;\n  bare?: boolean;\n  // TODO Improve the sourceMap type.\n  sourceMap?: Record<string, any>;\n  implicit?: boolean;\n  imported: string | boolean;\n  [fakeSymbol]?: boolean;\n  reportPendingErrors?: () => number;\n  hasErrors?: boolean;\n  missingModules?: Record<string, ImportInfo>;\n  alias?: FileAlias;\n}\n\ntype FileAlias = {\n  path: string;\n  absModuleId?: string | false;\n}\n\ntype MissingMap = Record<string, ImportInfo[]>;\n// TODO Get this type from js-analyze.ts (after converting from .js).\ntype ImportInfo = {\n  dynamic: boolean;\n  possiblySpurious: boolean;\n  parentPath: string;\n  bundleArch?: string;\n  packageName?: string;\n  parentWasDynamic?: boolean;\n  helpers?: Record<string, boolean>;\n}\n\nexport default class ImportScanner {\n  public name: string;\n\n  private bundleArch: string;\n  private sourceRoot: string;\n  private nodeModulesPaths: string[];\n  private defaultHandlers: DefaultHandlers;\n  private resolver: Resolver;\n\n  private absPathToOutputIndex: Record<string, number> = Object.create(null);\n  private realPathToFiles: Record<string, File[]> = Object.create(null);\n  private realPathCache: Record<string, string> = Object.create(null);\n  private allMissingModules: MissingMap = Object.create(null);\n  private outputFiles: File[] = [];\n\n  constructor({\n    name,\n    bundleArch,\n    extensions,\n    sourceRoot,\n    nodeModulesPaths = [],\n    cacheDir,\n  }: ImportScannerOptions) {\n    this.name = name;\n    this.bundleArch = bundleArch;\n    this.sourceRoot = sourceRoot;\n    this.nodeModulesPaths = nodeModulesPaths;\n\n    this.defaultHandlers = new DefaultHandlers({\n      cacheDir,\n      bundleArch,\n    });\n\n    this.resolver = Resolver.getOrCreate({\n      caller: \"ImportScanner#constructor\",\n      sourceRoot,\n      targetArch: bundleArch,\n      extensions,\n      nodeModulesPaths,\n    });\n\n    // Since Resolver.getOrCreate may have returned a cached Resolver\n    // instance, it's important to update its statOrNull method so that it\n    // is bound to this ImportScanner object rather than the previous one.\n    this.resolver.statOrNull = (absPath) => {\n      const stat = optimisticStatOrNull(absPath);\n      if (stat) {\n        return stat;\n      }\n\n      const file = this.getFile(absPath);\n      if (file) {\n        return fakeFileStat;\n      }\n\n      return null;\n    };\n  }\n\n  private getFile(absPath: string): File | null {\n    absPath = absPath.toLowerCase();\n    if (has(this.absPathToOutputIndex, absPath)) {\n      return this.outputFiles[this.absPathToOutputIndex[absPath]];\n    }\n    return null;\n  }\n\n  private addFile(absPath: string, file: File): File | null {\n    if (! file || file[fakeSymbol]) {\n      // Return file without adding it to this.outputFiles.\n      return file;\n    }\n\n    const absLowerPath = absPath.toLowerCase();\n\n    if (has(this.absPathToOutputIndex, absLowerPath)) {\n      const old = this.outputFiles[\n        this.absPathToOutputIndex[absLowerPath]];\n\n      // If the old file is just an empty stub, let the new file take\n      // precedence over it.\n      if (old.implicit === true) {\n        return Object.assign(old, {\n          implicit: file.implicit || false\n        }, file);\n      }\n\n      // If the new file is just an empty stub, pretend the _addFile\n      // succeeded by returning the old file, so that we won't try to call\n      // _combineFiles needlessly.\n      if (file.implicit === true) {\n        return old;\n      }\n\n    } else {\n      this.absPathToOutputIndex[absLowerPath] =\n        this.outputFiles.push(file) - 1;\n\n      return file;\n    }\n\n    return null;\n  }\n\n  addInputFiles(files: File[]) {\n    files.forEach(file => {\n      this.checkSourceAndTargetPaths(file);\n\n      // Note: this absolute path may not necessarily exist on the file\n      // system, but any import statements or require calls in file.data\n      // will be interpreted relative to this path, so it needs to be\n      // something plausible. #6411 #6383\n      file.absPath = pathJoin(this.sourceRoot, file.sourcePath);\n\n      // This property can have values false, true, \"dynamic\" (which\n      // indicates that the file has been imported, but only dynamically).\n      file.imported = false;\n\n      file.absModuleId = file.absModuleId ||\n        this.getAbsModuleId(file.absPath);\n\n      if (! this.addFile(file.absPath, file)) {\n        // Collisions can happen if a compiler plugin calls addJavaScript\n        // multiple times with the same sourcePath. #6422\n        this.combineFiles(this.getFile(file.absPath)!, file);\n      }\n\n      this.addFileByRealPath(file, this.realPath(file.absPath));\n    });\n\n    return this;\n  }\n\n  private addFileByRealPath(file: File, realPath: string) {\n    if (! has(this.realPathToFiles, realPath)) {\n      this.realPathToFiles[realPath] = [];\n    }\n\n    const files = this.realPathToFiles[realPath];\n\n    if (files.indexOf(file) < 0) {\n      files.push(file);\n    }\n\n    return file;\n  }\n\n  private getInfoByRealPath(realPath: string): RawFile | null {\n    const files = this.realPathToFiles[realPath];\n    if (files && files.length > 0) {\n      const firstFile = files[0];\n      const dataString = this.getDataString(firstFile);\n      return {\n        absPath: realPath,\n        data: firstFile.data,\n        dataString: dataString,\n        hash: firstFile.hash,\n      };\n    }\n    return null;\n  }\n\n  private realPath(absPath: string) {\n    if (has(this.realPathCache, absPath)) {\n      return this.realPathCache[absPath];\n    }\n\n    let relativePath = pathRelative(this.sourceRoot, absPath);\n    if (relativePath.startsWith(\"..\")) {\n      // If the absPath is outside this.sourceRoot, assume it's real.\n      return this.realPathCache[absPath] = absPath;\n    }\n\n    let foundSymbolicLink = false;\n\n    while (! foundSymbolicLink) {\n      const testPath = pathJoin(this.sourceRoot, relativePath);\n      if (testPath === this.sourceRoot) {\n        // Don't test the sourceRoot itself.\n        break;\n      }\n\n      const lstat = optimisticLStatOrNull(testPath);\n      if (lstat && lstat.isSymbolicLink()) {\n        foundSymbolicLink = true;\n        break\n      }\n\n      relativePath = pathDirname(relativePath);\n    }\n\n    if (foundSymbolicLink) {\n      // Call the actual realpathOrNull function only if there were any\n      // symlinks involved in the relative path within this.sourceRoot.\n      const realPath = realpathOrNull(absPath);\n      if (! realPath) {\n        // If we couldn't resolve the real path, fall back to the given\n        // absPath, and avoid caching.\n        return absPath;\n      }\n      return this.realPathCache[absPath] = realPath;\n    }\n\n    return this.realPathCache[absPath] = absPath;\n  }\n\n  // Make sure file.sourcePath is defined, and handle the possibility that\n  // file.targetPath differs from file.sourcePath.\n  private checkSourceAndTargetPaths(file: File) {\n    file.sourcePath = this.getSourcePath(file);\n\n    if (! isString(file.targetPath)) {\n      return;\n    }\n\n    file.targetPath = pathNormalize(pathJoin(\".\", file.targetPath));\n\n    if (file.targetPath !== file.sourcePath) {\n      const absSourcePath = pathJoin(this.sourceRoot, file.sourcePath);\n      const absTargetPath = pathJoin(this.sourceRoot, file.targetPath);\n\n      const absSourceId = this.getAbsModuleId(absSourcePath);\n      const absTargetId = this.getAbsModuleId(absTargetPath);\n\n      if (!absSourceId || !absTargetId) {\n        return;\n      }\n\n      // If file.targetPath differs from file.sourcePath, generate a new\n      // file object with that .sourcePath that imports the original file.\n      // This allows either the .sourcePath or the .targetPath to be used\n      // when importing the original file, and also allows multiple files\n      // to have the same .sourcePath but different .targetPaths.\n      const sourceFile = this.getFile(absSourcePath) || this.addFile(absSourcePath, {\n        ...file,\n        servePath: stripLeadingSlash(absSourceId),\n        absModuleId: absSourceId,\n        data: emptyData,\n        dataString: emptyDataString,\n        deps: Object.create(null),\n        lazy: true,\n        imported: false,\n        implicit: true,\n      })!;\n\n      // Make sure the original file gets installed at the target path\n      // instead of the source path.\n      file.absModuleId = absTargetId;\n      file.sourcePath = file.targetPath;\n\n      // If the sourceFile was not generated implicitly above, then it\n      // must have been explicitly added as a source module, so we should\n      // not override or modify its contents. #10233\n      if (sourceFile.implicit !== true) {\n        return;\n      }\n\n      const relativeId = this.getRelativeImportId(\n        absSourceId,\n        absTargetId,\n      );\n\n      // Set the contents of the source module to import the target\n      // module(s), combining their exports on the source module's exports\n      // object using the module.link live binding system. This is better\n      // than `Object.assign(exports, require(relativeId))` because it\n      // allows the exports to change in the future, and better than\n      // `module.exports = require(relativeId)` because it preserves the\n      // original module.exports object, avoiding problems with circular\n      // dependencies (#9176, #9190).\n      //\n      // If there could be only one target module, we could do something\n      // less clever here (like using an identifier string alias), but\n      // unfortunately we have to tolerate the possibility of a compiler\n      // plugin calling inputFile.addJavaScript multiple times for the\n      // same source file (see discussion in #9176), with different target\n      // paths, code, laziness, etc.\n      sourceFile.dataString = this.getDataString(sourceFile) +\n        // The + in \"*+\" indicates that the \"default\" property should be\n        // included as well as any other re-exported properties.\n        \"module.link(\" + JSON.stringify(relativeId) + ', { \"*\": \"*+\" });\\n';\n\n      sourceFile.data = Buffer.from(sourceFile.dataString, \"utf8\");\n      sourceFile.hash = sha1(sourceFile.data);\n      sourceFile.deps = sourceFile.deps || Object.create(null);\n      sourceFile.deps![relativeId] = {\n        dynamic: false,\n        possiblySpurious: false,\n        parentPath: absSourcePath,\n      };\n    }\n  }\n\n  // Concatenate the contents of oldFile and newFile, combining source\n  // maps and updating all other properties appropriately. Once this\n  // combination is done, oldFile should be kept and newFile discarded.\n  private combineFiles(oldFile: File, newFile: File) {\n    const scanner = this;\n\n    function checkProperty(name: \"lazy\" | \"bare\") {\n      if (has(oldFile, name)) {\n        if (! has(newFile, name)) {\n          newFile[name] = oldFile[name]!;\n        }\n      } else if (has(newFile, name)) {\n        oldFile[name] = newFile[name]!;\n      }\n\n      if (oldFile[name] !== newFile[name]) {\n        const fuzzyCase =\n          oldFile.sourcePath.toLowerCase() === newFile.sourcePath.toLowerCase();\n\n        throw new Error(\n          \"Attempting to combine different files\" +\n            ( fuzzyCase ? \" (is the filename case slightly different?)\" : \"\") +\n            \":\\n\" +\n            inspect(omit(oldFile, \"dataString\")) + \"\\n\" +\n            inspect(omit(newFile, \"dataString\")) + \"\\n\"\n        );\n      }\n    }\n\n    // Since we're concatenating the files together, they must be either\n    // both lazy or both eager. Same for bareness.\n    checkProperty(\"lazy\");\n    checkProperty(\"bare\");\n\n    function getChunk(file: File) {\n      if (file.sourceMap) {\n        const consumer = Promise.await(new SourceMapConsumer(file.sourceMap));\n        const node = SourceNode.fromStringWithSourceMap(\n          scanner.getDataString(file),\n          consumer\n        );\n        consumer.destroy();\n        return node;\n      } else {\n        return scanner.getDataString(file);\n      }\n    }\n\n    const {\n      code: combinedDataString,\n      map: combinedSourceMap,\n    } = new SourceNode(null, null, null, [\n      getChunk(oldFile),\n      \"\\n\\n\",\n      getChunk(newFile)\n    ]).toStringWithSourceMap({\n      file: oldFile.servePath || newFile.servePath\n    });\n\n    oldFile.dataString = combinedDataString;\n    oldFile.data = Buffer.from(oldFile.dataString, \"utf8\");\n    oldFile.hash = sha1(oldFile.data);\n\n    alignImportedStatuses(oldFile, newFile);\n\n    oldFile.sourceMap = combinedSourceMap.toJSON();\n    if (! oldFile.sourceMap!.mappings) {\n      oldFile.sourceMap = void 0;\n    }\n  }\n\n  scanImports() {\n    this.outputFiles.forEach(file => {\n      if (! file.lazy) {\n        this.scanFile(file);\n      }\n    });\n\n    return this;\n  }\n\n  scanMissingModules(missingModules: MissingMap) {\n    assert.ok(missingModules);\n    assert.ok(typeof missingModules === \"object\");\n    assert.ok(! Array.isArray(missingModules));\n\n    const newlyMissing = Object.create(null);\n    const newlyAdded = Object.create(null);\n\n    if (! isEmpty(missingModules)) {\n      const previousAllMissingModules = this.allMissingModules;\n      this.allMissingModules = newlyMissing;\n\n      Object.keys(missingModules).forEach(id => {\n        let staticImportInfo: ImportInfo | null = null;\n        let dynamicImportInfo: ImportInfo | null = null;\n\n        // Although it would be logically valid to call this._scanFile for\n        // each and every importInfo object, there can be a lot of them\n        // (hundreds, maybe thousands). The only relevant difference is\n        // whether the file is being scanned as a dynamic import or not,\n        // so we can get away with calling this._scanFile at most twice,\n        // with a representative importInfo object of each kind.\n        missingModules[id].some(importInfo => {\n          if (importInfo.parentWasDynamic ||\n              importInfo.dynamic) {\n            dynamicImportInfo = dynamicImportInfo || importInfo;\n          } else {\n            staticImportInfo = staticImportInfo || importInfo;\n          }\n\n          // Stop when/if both variables have been initialized.\n          return staticImportInfo && dynamicImportInfo;\n        });\n\n        const fakeStub = {\n          type: \"js\",\n          sourcePath: \"fake.js\",\n          absPath: pathJoin(this.sourceRoot, \"fake.js\"),\n          data: emptyData,\n          dataString: emptyDataString,\n          hash: emptyHash,\n          [fakeSymbol]: true,\n          imported: false,\n          lazy: true,\n        }\n\n        if (staticImportInfo) {\n          this.scanFile({\n            ...fakeStub,\n            // By specifying the .deps property of this fake file ahead of\n            // time, we can avoid calling findImportedModuleIdentifiers in\n            // the _scanFile method, which is important because this file\n            // doesn't have a .data or .dataString property.\n            deps: { [id]: staticImportInfo },\n          }, false); // !forDynamicImport\n        }\n\n        if (dynamicImportInfo) {\n          this.scanFile({\n            ...fakeStub,\n            deps: { [id]: dynamicImportInfo },\n          }, true); // forDynamicImport\n        }\n      });\n\n      this.allMissingModules = previousAllMissingModules;\n\n      Object.keys(missingModules).forEach(id => {\n        if (! has(newlyMissing, id)) {\n          // We don't need to use ImportScanner.mergeMissing here because\n          // this is the first time newlyAdded[id] has been assigned.\n          newlyAdded[id] = missingModules[id];\n        }\n      });\n\n      // Remove previously seen missing module identifiers from\n      // newlyMissing and merge the new identifiers back into\n      // this.allMissingModules.\n      Object.keys(newlyMissing).forEach(id => {\n        const skipScan = has(previousAllMissingModules, id) &&\n          !isHigherStatus(\n            getParentStatus(newlyMissing[id]),\n            getParentStatus(previousAllMissingModules[id]));\n\n        if (skipScan) {\n          delete newlyMissing[id];\n        } else {\n          ImportScanner.mergeMissing(\n            previousAllMissingModules,\n            { [id]: newlyMissing[id] }\n          );\n        }\n      });\n    }\n\n    return {\n      newlyAdded,\n      newlyMissing,\n    };\n  }\n\n  // Helper for copying the properties of source into target,\n  // concatenating values (which must be arrays) if a property already\n  // exists. The array elements should be importInfo objects, and will be\n  // deduplicated according to their .parentPath properties.\n  static mergeMissing(target: MissingMap, source: MissingMap) {\n    keys(source).forEach(id => {\n      const importInfoList = source[id];\n      const pathToIndex = Object.create(null);\n\n      if (! has(target, id)) {\n        target[id] = [];\n      } else {\n        target[id].forEach((importInfo, index) => {\n          pathToIndex[importInfo.parentPath] = index;\n        });\n      }\n\n      importInfoList.forEach(importInfo => {\n        const { parentPath } = importInfo;\n        if (typeof parentPath === \"string\") {\n          const index = pathToIndex[parentPath];\n          if (typeof index === \"number\") {\n            // If an importInfo object with this .parentPath is already\n            // present in the target[id] array, replace it.\n            target[id][index] = importInfo;\n            return;\n          }\n        }\n\n        target[id].push(importInfo);\n      });\n    });\n  }\n\n  private mergeFilesWithSameRealPath() {\n    Object.keys(this.realPathToFiles).forEach(realPath => {\n      const files = this.realPathToFiles[realPath];\n      if (! files || files.length < 2) {\n        return;\n      }\n\n      // We have multiple files that share the same realPath, so we need\n      // to figure out which one should actually contain the data, and\n      // which one(s) should merely be aliases to the data container.\n\n      let container = files[0];\n\n      // Make sure all the files share the same file.imported value, so\n      // that a statically bundled alias doesn't point to a dynamically\n      // bundled container, or vice-versa.\n      alignImportedStatuses(...files);\n\n      // Take the first file inside node_modules as the container. If none\n      // found, default to the first file in the list. It's important to\n      // let node_modules files be the containers if possible, since some\n      // npm packages rely on having module IDs that appear to be within a\n      // node_modules directory.\n      files.some(file => {\n        if (file.absModuleId &&\n            file.absModuleId.startsWith(\"/node_modules/\")) {\n          container = file;\n          return true;\n        }\n      });\n\n      const absContainerPath = pathJoin(this.sourceRoot, container.sourcePath);\n\n      // Alias every non-container file to container.absModuleId.\n      files.forEach(file => {\n        if (file !== container) {\n          file.alias = file.alias || { path: absContainerPath };\n          file.alias!.absModuleId = container.absModuleId;\n        }\n      });\n    });\n  }\n\n  getOutputFiles() {\n    this.mergeFilesWithSameRealPath();\n\n    // Return all installable output files that are either eager or\n    // imported (statically or dynamically).\n    return this.outputFiles.filter(file => {\n      return file.absModuleId &&\n        ! file[fakeSymbol] &&\n        ! file.hasErrors &&\n        (! file.lazy || file.imported);\n    });\n  }\n\n  private getSourcePath(file: File) {\n    let sourcePath = file.sourcePath;\n    if (sourcePath) {\n      if (pathIsAbsolute(sourcePath)) {\n        let relPath: string | undefined;\n        try {\n          relPath = pathRelative(this.sourceRoot, sourcePath);\n        } finally {\n          if (! relPath || relPath.startsWith(\"..\")) {\n            if (this.resolver.joinAndStat(this.sourceRoot, sourcePath)) {\n              // If sourcePath exists as a path relative to this.sourceRoot,\n              // strip away the leading / that made it look absolute.\n              return pathNormalize(pathJoin(\".\", sourcePath));\n            }\n\n            if (relPath) {\n              throw new Error(\"sourcePath outside sourceRoot: \" + sourcePath);\n            }\n\n            // If pathRelative threw an exception above, and we were not\n            // able to handle the problem, it will continue propagating\n            // from this finally block.\n          }\n        }\n\n        sourcePath = relPath;\n      }\n\n    } else if (file.servePath) {\n      sourcePath = convertToOSPath(file.servePath.replace(/^\\//, \"\"));\n\n    } else if ((file as any).path) {\n      sourcePath = (file as any).path;\n    }\n\n    return pathNormalize(pathJoin(\".\", sourcePath));\n  }\n\n  private findImportedModuleIdentifiers(\n    file: File,\n  ): Record<string, ImportInfo> {\n    if (IMPORT_SCANNER_CACHE.has(file.hash)) {\n      return IMPORT_SCANNER_CACHE.get(file.hash);\n    }\n\n    const result = findImportedModuleIdentifiers(\n      this.getDataString(file),\n      file.hash,\n    );\n\n    // there should always be file.hash, but better safe than sorry\n    if (file.hash) {\n      IMPORT_SCANNER_CACHE.set(file.hash, result);\n    }\n\n    return result;\n  }\n\n  private resolve(\n    parentFile: File,\n    id: string,\n    forDynamicImport = false,\n  ): Resolution | FileAlias {\n    const absPath = pathJoin(this.sourceRoot, parentFile.sourcePath);\n    const resolved = this.resolver.resolve(id, absPath);\n\n    if (resolved === \"missing\") {\n      return this.onMissing(parentFile, id, forDynamicImport);\n    }\n\n    if (resolved && resolved.packageJsonMap) {\n      const info = parentFile.deps![id];\n      info.helpers = info.helpers || {};\n\n      each(resolved.packageJsonMap, (pkg, path) => {\n        const packageJsonFile =\n          this.addPkgJsonToOutput(path, pkg, forDynamicImport);\n\n        if (! parentFile.absModuleId || ! packageJsonFile.absModuleId) {\n          // If parentFile is not installable, then we won't return it\n          // from getOutputFiles, so we don't need to worry about\n          // recording any parentFile.deps[id].helpers.\n          return;\n        }\n\n        const relativeId = this.getRelativeImportId(\n          parentFile.absModuleId,\n          packageJsonFile.absModuleId\n        );\n\n        // Although not explicitly imported, any package.json modules\n        // involved in resolving this import should be recorded as\n        // implicit \"helpers.\"\n        info.helpers![relativeId] = forDynamicImport;\n      });\n\n      // Any relevant package.json files must have already been added via\n      // this._addPkgJsonToOutput before we check whether this file has an\n      // .alias. In other words, the Resolver is responsible for including\n      // relevant package.json files in resolved.packageJsonMap so that\n      // they can be handled by the loop above.\n      const file = this.getFile(resolved.path);\n      if (file && file.alias) {\n        setImportedStatus(file, forDynamicImport ? Status.DYNAMIC : Status.STATIC);\n        return file.alias;\n      }\n    }\n\n    return resolved;\n  }\n\n  private getRelativeImportId(absParentId: string, absChildId: string) {\n    const relativeId = posixRelative(\n      posixDirname(absParentId),\n      absChildId\n    );\n\n    // If the result of pathRelative does not already start with a \".\" or\n    // a \"/\", prepend a \"./\" to make it a valid relative identifier\n    // according to CommonJS syntax.\n    if (\"./\".indexOf(relativeId.charAt(0)) < 0) {\n      return \"./\" + relativeId;\n    }\n\n    return relativeId;\n  }\n\n  private scanFile(file: File, forDynamicImport = false) {\n    if (file.imported === \"static\") {\n      // If we've already scanned this file non-dynamically, then we don't\n      // need to scan it again.\n      return;\n    }\n\n    if (forDynamicImport &&\n        file.imported === Status.DYNAMIC) {\n      // If we've already scanned this file dynamically, then we don't\n      // need to scan it dynamically again.\n      return;\n    }\n\n    // Set file.imported to a truthy value (either \"dynamic\" or true).\n    setImportedStatus(file, forDynamicImport ? Status.DYNAMIC : Status.STATIC);\n\n    if (file.reportPendingErrors &&\n        file.reportPendingErrors() > 0) {\n      file.hasErrors = true;\n      // Any errors reported to InputFile#error were saved but not\n      // reported at compilation time. Now that we know the file has been\n      // imported, it's time to report those errors.\n      return;\n    }\n\n    try {\n      file.deps = file.deps || this.findImportedModuleIdentifiers(file);\n    } catch (e) {\n      if (e.$ParseError) {\n        (buildmessage as any).error(e.message, {\n          file: file.sourcePath,\n          line: e.loc.line,\n          column: e.loc.column,\n        });\n        return;\n      }\n      throw e;\n    }\n\n    each(file.deps, (info: ImportInfo, id: string) => {\n      // Asynchronous module fetching only really makes sense in the\n      // browser (even though it works equally well on the server), so\n      // it's better if forDynamicImport never becomes true on the server.\n      const dynamic = this.isWebBrowser() &&\n        (forDynamicImport ||\n         info.parentWasDynamic ||\n         info.dynamic);\n\n      const resolved = this.resolve(file, id, dynamic);\n      const absImportedPath = resolved && resolved !== \"missing\" && resolved.path;\n      if (! absImportedPath) {\n        return;\n      }\n\n      let depFile = this.getFile(absImportedPath);\n      if (depFile) {\n        // We should never have stored a fake file in this.outputFiles, so\n        // it's surprising if depFile[fakeSymbol] is true.\n        assert.notStrictEqual(depFile[fakeSymbol], true);\n\n        // If the module is an implicit package.json stub, update to the\n        // explicit version now.\n        if (depFile.jsonData &&\n            depFile.absModuleId &&\n            depFile.absModuleId.endsWith(\"/package.json\") &&\n            depFile.implicit === true) {\n          const file = this.readPackageJson(absImportedPath);\n          if (file) {\n            depFile.implicit = false;\n            Object.assign(depFile, file);\n          }\n        }\n\n        // If depFile has already been scanned, this._scanFile will return\n        // immediately thanks to the depFile.imported-checking logic at\n        // the top of the method.\n        this.scanFile(depFile, dynamic);\n\n        return;\n      }\n\n      depFile = this.readDepFile(absImportedPath);\n      if (! depFile) {\n        return;\n      }\n\n      // Append this file to the output array and record its index.\n      this.addFile(absImportedPath, depFile);\n\n      // Recursively scan the module's imported dependencies.\n      this.scanFile(depFile, dynamic);\n    });\n  }\n\n  isWeb() {\n    // Returns true for web.cordova as well as web.browser.\n    return ! archMatches(this.bundleArch, \"os\");\n  }\n\n  isWebBrowser() {\n    return archMatches(this.bundleArch, \"web.browser\");\n  }\n\n  private getDataString(file: File) {\n    if (typeof file.dataString === \"string\") {\n      return file.dataString;\n    }\n\n    const rawDataString = file.data.toString(\"utf8\");\n    if (file.type === \"js\") {\n      // Avoid compiling .js file with Reify when all we want is a string\n      // version of file.data.\n      file.dataString = stripHashBang(rawDataString);\n    } else {\n      file.dataString = rawDataString;\n      file.dataString = this.defaultHandlers.call(file.type as any, file);\n    }\n\n    if (! (file.data instanceof Buffer) ||\n        file.dataString !== rawDataString) {\n      file.data = Buffer.from(file.dataString, \"utf8\");\n    }\n\n    return file.dataString;\n  }\n\n  private readFile(absPath: string) {\n    const data = optimisticReadFile(absPath) as Buffer;\n    const info: RawFile = {\n      absPath,\n      data,\n      dataString: data.toString(\"utf8\"),\n      hash: optimisticHashOrNull(absPath)!,\n    };\n\n    // Same logic/comment as stripBOM in node/lib/module.js:\n    // Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n    // because the buffer-to-string conversion in `fs.readFileSync()`\n    // translates it to FEFF, the UTF-16 BOM.\n    if (info.dataString.charCodeAt(0) === 0xfeff) {\n      info.dataString = info.dataString.slice(1);\n      info.data = Buffer.from(info.dataString, \"utf8\");\n      info.hash = sha1(info.data);\n    }\n\n    return info;\n  }\n\n  private readPackageJson(absPath: string) {\n    try {\n      var info = this.readFile(absPath);\n    } catch (e) {\n      if (e.code !== \"ENOENT\") throw e;\n      return null;\n    }\n\n    const jsonData = JSON.parse(info.dataString);\n\n    Object.keys(jsonData).forEach(key => {\n      // Strip root properties that start with an underscore, since these\n      // are \"private\" npm-specific properties, not added by other package\n      // managers like yarn, and they may introduce nondeterminism into\n      // the Meteor build. #9878 #9903\n      if (key.startsWith(\"_\")) {\n        delete jsonData[key];\n      }\n    });\n\n    info.dataString = jsonDataToCommonJS(jsonData);\n    info.data = Buffer.from(info.dataString, \"utf8\");\n    info.hash = sha1(info.data);\n    info.jsonData = jsonData;\n\n    return info;\n  }\n\n  private readModule(absPath: string): RawFile | null {\n    const dotExt = pathExtname(absPath).toLowerCase();\n\n    if (dotExt === \".node\") {\n      const dataString = \"throw new Error(\" + JSON.stringify(\n        this.isWeb()\n          ? \"cannot load native .node modules on the client\"\n          : \"module.useNode() must succeed for native .node modules\"\n      ) + \");\\n\";\n\n      const data = Buffer.from(dataString, \"utf8\");\n      const hash = sha1(data);\n\n      return { absPath, data, dataString, hash };\n    }\n\n    try {\n      var info = this.readFile(absPath);\n    } catch (e) {\n      if (e.code !== \"ENOENT\") throw e;\n      return null;\n    }\n\n    const dataString = info.dataString;\n\n    let ext = dotExt.slice(1);\n    if (! has(DefaultHandlers.prototype, ext)) {\n      if (canBeParsedAsPlainJS(dataString, info.hash)) {\n        ext = \"js\";\n      } else {\n        return null;\n      }\n    }\n\n    info.dataString = this.defaultHandlers.call(ext as any, info);\n    if (info.dataString !== dataString) {\n      info.data = Buffer.from(info.dataString, \"utf8\");\n    }\n\n    return info;\n  }\n\n  private readDepFile(absPath: string): File | null {\n    const absModuleId = this.getAbsModuleId(absPath);\n    if (! absModuleId) {\n      // The given path cannot be installed on this architecture.\n      return null;\n    }\n\n    const realPath = this.realPath(absPath);\n\n    let rawFile = this.getInfoByRealPath(realPath);\n    if (rawFile) {\n      // If we already have a file with the same real path, use its data\n      // rather than reading the file again, or generating a stub. This\n      // logic enables selective compilation of node_modules in an elegant\n      // way: just expose the package directory within the application\n      // (outside of node_modules) using a symlink, so that it will be\n      // compiled as application code. When the package is imported from\n      // node_modules, the compiled version will be used instead of the\n      // raw version found in node_modules. See also:\n      // https://github.com/meteor/meteor-feature-requests/issues/6\n\n    } else if (this.shouldUseNode(absModuleId, absPath)) {\n      // On the server, modules in node_modules directories will be\n      // handled natively by Node, so we just need to generate a stub\n      // module that calls module.useNode(), rather than calling\n      // this._readModule to read the actual module file. Note that\n      // useNodeStub includes an empty .deps property, which will make\n      // this._scanFile(depFile, dynamic) return immediately.\n      rawFile = {\n        ...useNodeStub,\n        absPath,\n      };\n\n    } else {\n      rawFile = absModuleId.endsWith(\"/package.json\")\n        ? this.readPackageJson(absPath)\n        : this.readModule(absPath);\n\n      // If the module is not readable, _readModule may return null.\n      // Otherwise it will return { data, dataString, hash }.\n      if (! rawFile) {\n        return null;\n      }\n    }\n\n    const depFile: File = {\n      ...rawFile,\n      type: \"js\",\n      sourcePath: pathRelative(this.sourceRoot, absPath),\n      absModuleId,\n      servePath: stripLeadingSlash(absModuleId),\n      lazy: true,\n      // Setting depFile.imported = false is necessary so that\n      // this._scanFile(depFile, dynamic) doesn't think the file has been\n      // scanned already and return immediately.\n      imported: false,\n    };\n\n    this.addFileByRealPath(depFile, realPath);\n\n    return depFile;\n  }\n\n  // Similar to logic in Module.prototype.useNode as defined in\n  // packages/modules-runtime/server.js. Introduced to fix issue #10122.\n  private shouldUseNode(absModuleId: string, absPath: string) {\n    if (this.isWeb()) {\n      // Node should never be used in a browser, obviously.\n      return false;\n    }\n\n    const parts = absModuleId.split(\"/\");\n    let start = 0;\n\n    // Tolerate leading / character.\n    if (parts[start] === \"\") ++start;\n\n    // Meteor package modules include a node_modules component in their\n    // absolute module identifiers, but that doesn't mean those modules\n    // should be evaluated by module.useNode().\n    if (parts[start] === \"node_modules\" &&\n        parts[start + 1] === \"meteor\") {\n      start += 2;\n    }\n\n    // If the remaining parts do not include node_modules, then this\n    // module was not installed by npm, so we should not try to evaluate\n    // it natively in Node on the server.\n    if (parts.indexOf(\"node_modules\", start) < 0) {\n      return false;\n    }\n\n    // Below this point, we know we're dealing with a module in\n    // node_modules, which means we should try to use module.useNode() to\n    // evaluate the module natively in Node, except if the module is an\n    // ESM module, because then the module cannot be imported using\n    // require (as of Node 12.16.0), so module.useNode() will not work.\n\n    const dotExt = pathExtname(absPath).toLowerCase();\n\n    if (dotExt === \".mjs\") {\n      // Although few npm packages actually use .mjs, Node will always\n      // interpret these files as ESM modules, so we can return early.\n      return false;\n    }\n\n    if (dotExt === \".json\") {\n      // There's no benefit to using Node to evaluate JSON modules, since\n      // there's nothing Node-specific about the parsing of JSON.\n      return false;\n    }\n\n    if (dotExt === \".js\") {\n      const relDir = pathRelative(this.sourceRoot, pathDirname(absPath));\n      const pkgJsonArray =\n        optimisticLookupPackageJsonArray(this.sourceRoot, relDir);\n      // Setting \"type\":\"module\" in package.json makes Node treat .js\n      // files within the package as ESM modules.\n      if (pkgJsonArray.some(pkgJson => pkgJson?.type === \"module\")) {\n        return false;\n      }\n    }\n\n    // Everything else (.node, .wasm, whatever) needs to be handled\n    // natively by Node.\n    return true;\n  }\n\n  // Returns an absolute module identifier indicating where to install the\n  // given file via meteorInstall. May return undefined if the file should\n  // not be installed on the current architecture.\n  private getAbsModuleId(absPath: string) {\n    let path =\n      this.getNodeModulesAbsModuleId(absPath) ||\n      this.getSourceRootAbsModuleId(absPath);\n\n    if (! path) {\n      return;\n    }\n\n    if (this.name) {\n      // If we're bundling a package, prefix path with\n      // node_modules/<package name>/.\n      path = pathJoin(\n        \"node_modules\",\n        \"meteor\",\n        this.name.replace(/^local-test[:_]/, \"\"),\n        path,\n      );\n    }\n\n    // Install paths should always be delimited by /.\n    return ensureLeadingSlash(path);\n  }\n\n  private getNodeModulesAbsModuleId(absPath: string) {\n    let absModuleId: string | undefined;\n\n    this.nodeModulesPaths.some(path => {\n      const relPathWithinNodeModules = pathRelative(path, absPath);\n\n      if (relPathWithinNodeModules.startsWith(\"..\")) {\n        // absPath is not a subdirectory of path.\n        return false;\n      }\n\n      // Install the module into the local node_modules directory within\n      // this app or package.\n      absModuleId = pathJoin(\n        \"node_modules\",\n        relPathWithinNodeModules\n      );\n      return true;\n    });\n\n    return absModuleId && ensureLeadingSlash(absModuleId);\n  }\n\n  private getSourceRootAbsModuleId(absPath: string) {\n    const relPath = pathRelative(this.sourceRoot, absPath);\n\n    if (relPath.startsWith(\"..\")) {\n      // absPath is not a subdirectory of this.sourceRoot.\n      return;\n    }\n\n    const dirs = relPath.split(\"/\");\n    dirs.pop(); // Discard the module's filename.\n    while (dirs[0] === \"\") {\n      dirs.shift();\n    }\n\n    const isApp = ! this.name;\n    const bundlingForWeb = this.isWeb();\n\n    const topLevelDir = dirs[0];\n    if (topLevelDir === \"private\" ||\n        topLevelDir === \"packages\" ||\n        topLevelDir === \"programs\" ||\n        topLevelDir === \"cordova-build-override\") {\n      // Don't load anything from these special top-level directories\n      return;\n    }\n\n    for (let dir of dirs) {\n      if (dir.charAt(0) === \".\") {\n        // Files/directories whose names start with a dot are never loaded\n        return;\n      }\n\n      if (isApp) {\n        if (bundlingForWeb) {\n          if (dir === \"server\") {\n            // If we're bundling an app for a client architecture, any files\n            // contained by a server-only directory that is not contained by\n            // a node_modules directory must be ignored.\n            return;\n          }\n        } else if (dir === \"client\") {\n          // If we're bundling an app for a server architecture, any files\n          // contained by a client-only directory that is not contained by\n          // a node_modules directory must be ignored.\n          return;\n        }\n      }\n\n      if (dir === \"node_modules\") {\n        // Accept any file within a node_modules directory.\n        return ensureLeadingSlash(relPath);\n      }\n    }\n\n    return ensureLeadingSlash(relPath);\n  }\n\n  // Called by this.resolver when a module identifier cannot be resolved.\n  private onMissing(\n    parentFile: File,\n    id: string,\n    forDynamicImport = false,\n  ): Resolution | FileAlias {\n    const isApp = ! this.name;\n    const absParentPath = pathJoin(\n      this.sourceRoot,\n      parentFile.sourcePath,\n    );\n\n    if (isApp &&\n        Resolver.isNative(id) &&\n        this.isWeb()) {\n      // To ensure the native module can be evaluated at runtime, register\n      // a dependency on meteor-node-stubs/deps/<id>.js.\n      const stubId = Resolver.getNativeStubId(id);\n      if (isString(stubId) && stubId !== id) {\n        const info = parentFile.deps![id];\n\n        // Although not explicitly imported, any stubs associated with\n        // this native import should be recorded as implicit \"helpers.\"\n        info.helpers = info.helpers || {};\n        info.helpers[stubId] = forDynamicImport;\n\n        return this.resolve(parentFile, stubId, forDynamicImport);\n      }\n    }\n\n    const info: ImportInfo = {\n      packageName: this.name,\n      parentPath: absParentPath,\n      bundleArch: this.bundleArch,\n      possiblySpurious: false,\n      dynamic: false,\n      // When we later attempt to resolve this id in the application's\n      // node_modules directory or in other packages, we need to remember\n      // if the parent module was imported dynamically, since that makes\n      // this import effectively dynamic, even if the parent module\n      // imported the given id with a static import or require.\n      parentWasDynamic: forDynamicImport,\n    };\n\n    if (parentFile &&\n        parentFile.deps &&\n        has(parentFile.deps, id)) {\n      const importInfo = parentFile.deps[id];\n      info.possiblySpurious = importInfo.possiblySpurious;\n      // Remember that this property only indicates whether or not the\n      // parent module used a dynamic import(...) to import this module.\n      // Even if info.dynamic is false (because the parent module used a\n      // static import or require for this import), this module may still\n      // be effectively dynamic if the parent was imported dynamically, as\n      // indicated by info.parentWasDynamic.\n      info.dynamic = importInfo.dynamic;\n    }\n\n    // If the imported identifier is neither absolute nor relative, but\n    // top-level, then it might be satisfied by a package installed in\n    // the top-level node_modules directory, and we should record the\n    // missing dependency so that we can include it in the app bundle.\n    if (parentFile) {\n      const missing =\n        parentFile.missingModules ||\n        Object.create(null);\n      missing[id] = info;\n      parentFile.missingModules = missing;\n    }\n\n    ImportScanner.mergeMissing(\n      this.allMissingModules,\n      { [id]: [info] }\n    );\n\n    return null;\n  }\n\n  private addPkgJsonToOutput(\n    pkgJsonPath: string,\n    pkg: Record<string, any>,\n    forDynamicImport = false,\n  ): File {\n    const file = this.getFile(pkgJsonPath);\n\n    if (file) {\n      // If the file already exists, just update file.imported according\n      // to the forDynamicImport parameter.\n      setImportedStatus(file, forDynamicImport ? Status.DYNAMIC : Status.STATIC);\n      return file;\n    }\n\n    const dataString = jsonDataToCommonJS(pkg);\n    const data = Buffer.from(dataString, \"utf8\");\n    const relPkgJsonPath = pathRelative(this.sourceRoot, pkgJsonPath);\n    const absModuleId = this.getAbsModuleId(pkgJsonPath);\n\n    const pkgFile: File = {\n      type: \"js\", // We represent the JSON module with JS.\n      absPath: pkgJsonPath,\n      data,\n      dataString,\n      jsonData: pkg,\n      deps: {}, // Avoid accidentally re-scanning this file.\n      sourcePath: relPkgJsonPath,\n      absModuleId,\n      servePath: stripLeadingSlash(absModuleId),\n      hash: sha1(data),\n      lazy: true,\n      imported: forDynamicImport ? Status.DYNAMIC : Status.STATIC,\n      // Since _addPkgJsonToOutput is only ever called for package.json\n      // files that are involved in resolving package directories, and pkg\n      // is only a subset of the information in the actual package.json\n      // module, we mark it as imported implicitly, so that the subset can\n      // be overridden by the actual module if this package.json file is\n      // imported explicitly elsewhere.\n      implicit: true,\n    };\n\n    this.addFile(pkgJsonPath, pkgFile);\n\n    this.resolvePkgJsonBrowserAliases(pkgFile);\n\n    return pkgFile;\n  }\n\n  private resolvePkgJsonBrowserAliases(pkgFile: File) {\n    if (! this.isWeb()) {\n      return;\n    }\n\n    const browser = pkgFile.jsonData!.browser;\n    if (! isObject(browser)) {\n      return;\n    }\n\n    const deps = pkgFile.deps || (pkgFile.deps = Object.create(null));\n    const absPkgJsonPath = pathJoin(this.sourceRoot, pkgFile.sourcePath);\n\n    Object.keys(browser).forEach(sourceId => {\n      deps[sourceId] = deps[sourceId] || {};\n\n      // TODO What if sourceId is a top-level node_modules identifier?\n      const source = this.resolver.resolve(sourceId, absPkgJsonPath);\n      if (! source || source === \"missing\") {\n        return;\n      }\n\n      const file = this.getFile(source.path);\n      if (file && file.alias) {\n        // If we previously set an .alias for this file, assume it is\n        // complete and return early.\n        return;\n      }\n\n      const sourceAbsModuleId = this.getAbsModuleId(source.path);\n      if (! sourceAbsModuleId || ! pkgFile.absModuleId) {\n        return;\n      }\n\n      const hasAuthorityToCreateAlias =\n        this.areAbsModuleIdsInSamePackage(\n          pkgFile.absModuleId,\n          sourceAbsModuleId\n        );\n\n      // A package.json file's \"browser\" field can only establish aliases\n      // for modules contained by the same package.\n      if (! hasAuthorityToCreateAlias) {\n        return;\n      }\n\n      const targetId = browser[sourceId];\n      const alias: FileAlias = {\n        path: source.path,\n        absModuleId: sourceAbsModuleId,\n      };\n\n      if (typeof targetId === \"string\") {\n        deps[targetId] = deps[targetId] || {};\n\n        const target = this.resolver.resolve(targetId, absPkgJsonPath);\n        if (! target || target === \"missing\") {\n          return;\n        }\n\n        // Ignore useless self-referential browser aliases, to fix\n        // https://github.com/meteor/meteor/issues/10409.\n        if (target.id === source.id) {\n          return;\n        }\n\n        Object.assign(alias, target);\n        alias.absModuleId = this.getAbsModuleId(target.path);\n\n      } else if (targetId === false) {\n        // This is supposed to indicate the alias refers to an empty stub.\n        alias.absModuleId = false;\n\n      } else {\n        return;\n      }\n\n      if (file) {\n        file.alias = alias;\n      } else {\n        const relSourcePath = pathRelative(this.sourceRoot, source.path);\n\n        this.addFile(source.path, {\n          type: \"js\",\n          alias,\n          absPath: absPkgJsonPath,\n          data: emptyData,\n          dataString: emptyDataString,\n          hash: emptyHash,\n          sourcePath: relSourcePath,\n          absModuleId: sourceAbsModuleId,\n          servePath: stripLeadingSlash(sourceAbsModuleId),\n          lazy: true,\n          imported: false,\n          implicit: true,\n        });\n      }\n    });\n  }\n\n  private areAbsModuleIdsInSamePackage(path1: string, path2: string) {\n    if (! (isString(path1) && isString(path2))) {\n      return false;\n    }\n\n    // Enforce that the input paths look like absolute module identifiers.\n    assert.strictEqual(path1.charAt(0), \"/\");\n    assert.strictEqual(path2.charAt(0), \"/\");\n\n    function getPackageRoot(path: string) {\n      const parts = path.split(\"/\");\n      assert.strictEqual(parts[0], \"\");\n      const nmi = parts.lastIndexOf(\"node_modules\");\n      return parts.slice(0, nmi + 2).join(\"/\");\n    }\n\n    return getPackageRoot(path1) === getPackageRoot(path2);\n  }\n}\n\nconst ISp = ImportScanner.prototype as any;\n\n[ \"addPkgJsonToOutput\",\n  \"findImportedModuleIdentifiers\",\n  \"getAbsModuleId\",\n  \"readFile\",\n  \"realPath\",\n  \"resolve\",\n  \"resolvePkgJsonBrowserAliases\",\n  // We avoid profiling _scanFile here because it doesn't typically have\n  // much \"own time,\" and it gets called recursively, resulting in deeply\n  // nested METEOR_PROFILE output, which often obscures actual problems.\n  // \"_scanFile\",\n].forEach(name => {\n  ISp[name] = Profile(`ImportScanner#${name}`, ISp[name]);\n});\n\n[ // Include the package name in METEOR_PROFILE output for the following\n  // public methods:\n  \"scanImports\",\n  \"scanMissingModules\",\n].forEach(name => {\n  ISp[name] = Profile(function (this: ImportScanner) {\n    return `ImportScanner#${name} for ${this.name || \"the app\"}`;\n  }, ISp[name]);\n});\n"],"sourceRoot":"","file":"tools/isobuild/import-scanner.js.map"}