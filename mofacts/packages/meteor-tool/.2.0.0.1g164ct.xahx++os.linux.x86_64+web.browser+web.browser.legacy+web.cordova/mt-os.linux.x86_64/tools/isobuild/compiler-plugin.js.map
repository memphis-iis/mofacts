{"version":3,"sources":["/tools/isobuild/compiler-plugin.js"],"names":["_objectSpread","module1","link","default","v","export","CompilerPluginProcessor","PackageSourceBatch","assert","WatchSet","sha1","readAndWatchFileWithHash","LRU","sourceMapLength","Console","ImportScanner","cssToCommonJS","Resolver","optimisticStatOrNull","optimisticReadJsonOrNull","optimisticHashOrNull","isTestFilePath","archinfo","require","buildmessage","buildPluginModule","colonConverter","files","compiler","linker","util","_","Profile","hasOwn","Object","prototype","hasOwnProperty","CACHE_SIZE","process","env","METEOR_LINKER_CACHE_SIZE","CACHE_DEBUG","METEOR_TEST_PRINT_LINKER_CACHE_DEBUG","LINKER_CACHE_SALT","LINKER_CACHE","max","length","reduce","soFar","current","data","sourceMap","serverLibPackages","fibers","populateServerLibPackages","devBundlePath","getDevBundle","nodeModulesPath","pathJoin","readdir","forEach","packageName","packagePath","packageStat","statOrNull","isDirectory","e","constructor","unibuilds","arch","sourceRoot","buildMode","isopackCache","linkerCacheDir","scannerCacheDir","minifyCssResource","assign","mkdir_p","runCompilerPlugins","self","assertInJob","sourceProcessorsWithSlots","sourceBatches","map","unibuild","pkg","name","getSourceRoot","jobHasMessages","each","sourceBatch","resourceSlots","resourceSlot","sourceProcessor","has","id","push","jobTitle","isopack","join","time","enterJob","title","inputFiles","InputFile","markedMethod","markBoundary","userPlugin","processFilesForTarget","Promise","await","exception","_resourceSlot","_statCache","create","_controlFileCache","_resolveCache","supportsLazyCompilation","getContentsAsBuffer","inputResource","getPackageName","packageSourceBatch","isPackageFile","isApplicationFile","tolerant","isString","Error","getPathInPackage","path","getFileOptions","fileOptions","hmrAvailable","bare","watchSet","convertToOSPath","readAndWatchFile","contents","_stat","absPath","findControlFile","basename","dir","pathDirname","stat","isFile","pathBasename","parentDir","_resolveCacheLookup","parentPath","byId","_resolveCacheStore","resolved","resolve","resId","parentStat","batch","resolver","getResolver","targetArch","host","error","code","_require","getArch","processor","getSourceHash","hash","getExtension","extension","getDeclaredExports","declaredExports","getDisplayPath","_getServePath","addStylesheet","options","lazyFinalizer","addJavaScript","addAsset","addHtml","_reportError","message","info","addError","lazy","ResourceSlot","unibuildResourceInfo","outputResources","jsOutputResources","errors","type","_addDirectlyToJsOutputResources","JSON","stringify","_getOption","_isLazy","isJavaScript","isApp","useMeteorInstall","isTest","isAppTest","global","testCommandMetadata","runningTests","testModule","isEagerTestModule","mainModule","splitPath","split","pathSep","isInImports","indexOf","_isBare","cssResource","CssOutputResource","jsResource","result","css","toString","servePath","targetPath","Buffer","from","implicit","isBuffer","resource","JsOutputResource","AssetOutputResource","matches","section","convertToStandardLineEndings","OutputResource","_lazyFinalizer","_initialOptions","_finalizerPromise","_errors","sourcePath","_inputHash","finalize","then","hasPendingErrors","reportPendingErrors","firstError","_get","value","_set","call","hashes","parse","defineProperty","enumerable","writable","configurable","params","refreshable","importExtensions","_nodeModulesPaths","resources","slot","makeResourceSlot","importedSymbolToPackageName","eachUsedUnibuild","dependencies","uses","skipUnordered","skipDebugOnly","skipProdOnly","skipTestOnly","depUnibuild","symbol","testOnly","isDevelopment","usesHMRPackage","supportedArch","meteorInstallOptions","extensions","compileOneJsResource","inputFile","filename","_getSourceProcessorSet","getByFilename","displayName","getByExtension","addImportExtension","toLowerCase","startsWith","getOrCreate","caller","nodeModulesPaths","_getNodeModulesPaths","nmds","nodeModulesDirectories","nmd","local","replace","_sourceProcessorSet","activePluginPackages","getActivePluginPackages","SourceProcessorSet","hardcodeJs","otherPkg","ensurePluginsInitialized","merge","sourceProcessors","computeJsOutputFilesMap","Map","set","find","file","importScannerWatchSet","_watchOutputFiles","get","some","meteorPackageInstalls","allMissingModules","allRelocatedModules","scannerMap","entry","scanner","bundleArch","cacheDir","addInputFiles","scanImports","mergeMissing","handleMissing","missingModules","missingMap","importInfoList","parts","found","slice","nextMissingModules","missing","newlyAdded","newlyMissing","scanMissingModules","isEmpty","keys","_warnAboutMissingModules","outputFiles","getOutputFiles","appFilesWithoutNodeModules","modulesEntry","absModuleId","strictEqual","nodeModulesIndex","jsOutputFilesMap","isDefinitelyUsed","addFile","topLevelMissingIDs","warnings","maybeWarn","possiblySpurious","endsWith","charAt","packageDir","rawWarn","text","warn","topLevelKeys","getResources","jsResources","onCacheKey","_linkJS","isWeb","linkerOptions","combinedServePath","convert","kind","pluck","imports","includeSourceMapInstructions","fileHashes","cacheKeyPrefix","imported","alias","cacheKeySuffix","cacheKey","console","log","cacheFilename","wildcardCacheFilename","bufferifyJSONReturnValue","r","diskCached","readJSONOrNull","SyntaxError","Array","canCache","linkedFiles","fullLink","ret","sm","source","retAsJSON","rm_recursive","writeFileAtomically","method","proto"],"mappings":";AAAA,MAAIA,aAAJ;;AAAkBC,EAAAA,OAAO,CAACC,IAAR,CAAa,sCAAb,EAAoD;AAACC,IAAAA,OAAO,CAACC,CAAD,EAAG;AAACJ,MAAAA,aAAa,GAACI,CAAd;AAAgB;;AAA5B,GAApD,EAAkF,CAAlF;AAAlBH,EAAAA,OAAO,CAACI,MAAR,CAAe;AAACC,IAAAA,uBAAuB,EAAC,MAAIA,uBAA7B;AAAqDC,IAAAA,kBAAkB,EAAC,MAAIA;AAA5E,GAAf;AAAgH,MAAIC,MAAJ;AAAWP,EAAAA,OAAO,CAACC,IAAR,CAAa,QAAb,EAAsB;AAACC,IAAAA,OAAO,CAACC,CAAD,EAAG;AAACI,MAAAA,MAAM,GAACJ,CAAP;AAAS;;AAArB,GAAtB,EAA6C,CAA7C;AAAgD,MAAIK,QAAJ,EAAaC,IAAb,EAAkBC,wBAAlB;AAA2CV,EAAAA,OAAO,CAACC,IAAR,CAAa,aAAb,EAA2B;AAACO,IAAAA,QAAQ,CAACL,CAAD,EAAG;AAACK,MAAAA,QAAQ,GAACL,CAAT;AAAW,KAAxB;;AAAyBM,IAAAA,IAAI,CAACN,CAAD,EAAG;AAACM,MAAAA,IAAI,GAACN,CAAL;AAAO,KAAxC;;AAAyCO,IAAAA,wBAAwB,CAACP,CAAD,EAAG;AAACO,MAAAA,wBAAwB,GAACP,CAAzB;AAA2B;;AAAhG,GAA3B,EAA6H,CAA7H;AAAgI,MAAIQ,GAAJ;AAAQX,EAAAA,OAAO,CAACC,IAAR,CAAa,WAAb,EAAyB;AAACC,IAAAA,OAAO,CAACC,CAAD,EAAG;AAACQ,MAAAA,GAAG,GAACR,CAAJ;AAAM;;AAAlB,GAAzB,EAA6C,CAA7C;AAAgD,MAAIS,eAAJ;AAAoBZ,EAAAA,OAAO,CAACC,IAAR,CAAa,mBAAb,EAAiC;AAACW,IAAAA,eAAe,CAACT,CAAD,EAAG;AAACS,MAAAA,eAAe,GAACT,CAAhB;AAAkB;;AAAtC,GAAjC,EAAyE,CAAzE;AAA4E,MAAIU,OAAJ;AAAYb,EAAAA,OAAO,CAACC,IAAR,CAAa,uBAAb,EAAqC;AAACY,IAAAA,OAAO,CAACV,CAAD,EAAG;AAACU,MAAAA,OAAO,GAACV,CAAR;AAAU;;AAAtB,GAArC,EAA6D,CAA7D;AAAgE,MAAIW,aAAJ;AAAkBd,EAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb,EAAgC;AAACC,IAAAA,OAAO,CAACC,CAAD,EAAG;AAACW,MAAAA,aAAa,GAACX,CAAd;AAAgB;;AAA5B,GAAhC,EAA8D,CAA9D;AAAiE,MAAIY,aAAJ;AAAkBf,EAAAA,OAAO,CAACC,IAAR,CAAa,eAAb,EAA6B;AAACc,IAAAA,aAAa,CAACZ,CAAD,EAAG;AAACY,MAAAA,aAAa,GAACZ,CAAd;AAAgB;;AAAlC,GAA7B,EAAiE,CAAjE;AAAoE,MAAIa,QAAJ;AAAahB,EAAAA,OAAO,CAACC,IAAR,CAAa,YAAb,EAA0B;AAACC,IAAAA,OAAO,CAACC,CAAD,EAAG;AAACa,MAAAA,QAAQ,GAACb,CAAT;AAAW;;AAAvB,GAA1B,EAAmD,CAAnD;AAAsD,MAAIc,oBAAJ,EAAyBC,wBAAzB,EAAkDC,oBAAlD;AAAuEnB,EAAAA,OAAO,CAACC,IAAR,CAAa,kBAAb,EAAgC;AAACgB,IAAAA,oBAAoB,CAACd,CAAD,EAAG;AAACc,MAAAA,oBAAoB,GAACd,CAArB;AAAuB,KAAhD;;AAAiDe,IAAAA,wBAAwB,CAACf,CAAD,EAAG;AAACe,MAAAA,wBAAwB,GAACf,CAAzB;AAA2B,KAAxG;;AAAyGgB,IAAAA,oBAAoB,CAAChB,CAAD,EAAG;AAACgB,MAAAA,oBAAoB,GAAChB,CAArB;AAAuB;;AAAxJ,GAAhC,EAA0L,CAA1L;AAA6L,MAAIiB,cAAJ;AAAmBpB,EAAAA,OAAO,CAACC,IAAR,CAAa,iBAAb,EAA+B;AAACmB,IAAAA,cAAc,CAACjB,CAAD,EAAG;AAACiB,MAAAA,cAAc,GAACjB,CAAf;AAAiB;;AAApC,GAA/B,EAAqE,CAArE;;AAA7jC,MAAIkB,QAAQ,GAAGC,OAAO,CAAC,mBAAD,CAAtB;;AACA,MAAIC,YAAY,GAAGD,OAAO,CAAC,0BAAD,CAA1B;;AACA,MAAIE,iBAAiB,GAAGF,OAAO,CAAC,mBAAD,CAA/B;;AACA,MAAIG,cAAc,GAAGH,OAAO,CAAC,6BAAD,CAA5B;;AACA,MAAII,KAAK,GAAGJ,OAAO,CAAC,aAAD,CAAnB;;AACA,MAAIK,QAAQ,GAAGL,OAAO,CAAC,eAAD,CAAtB;;AACA,MAAIM,MAAM,GAAGN,OAAO,CAAC,aAAD,CAApB;;AACA,MAAIO,IAAI,GAAGP,OAAO,CAAC,MAAD,CAAlB;;AACA,MAAIQ,CAAC,GAAGR,OAAO,CAAC,YAAD,CAAf;;AACA,MAAIS,OAAO,GAAGT,OAAO,CAAC,qBAAD,CAAP,CAA+BS,OAA7C;;AAqBA,QAAMC,MAAM,GAAGC,MAAM,CAACC,SAAP,CAAiBC,cAAhC,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AACA,QAAMC,UAAU,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAAZ,IAAwC,OAAK,IAAL,GAAU,GAArE;AACA,QAAMC,WAAW,GAAG,CAAC,CAAEH,OAAO,CAACC,GAAR,CAAYG,oCAAnC;AACA,QAAMC,iBAAiB,GAAG,EAA1B,C,CAA8B;;AAC9B,QAAMC,YAAY,GAAG,IAAIhC,GAAJ,CAAQ;AAC3BiC,IAAAA,GAAG,EAAER,UADsB;AAE3B;AACA;AACAS,IAAAA,MAAM,EAAE,UAAUnB,KAAV,EAAiB;AACvB,aAAOA,KAAK,CAACoB,MAAN,CAAa,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACtC,eAAOD,KAAK,GAAGC,OAAO,CAACC,IAAR,CAAaJ,MAArB,GAA8BjC,eAAe,CAACoC,OAAO,CAACE,SAAT,CAApD;AACD,OAFM,EAEJ,CAFI,CAAP;AAGD;AAR0B,GAAR,CAArB;AAWA,QAAMC,iBAAiB,GAAG;AACxB;AACAC,IAAAA,MAAM,EAAE;AAFgB,GAA1B;;AAKA,WAASC,yBAAT,GAAqC;AACnC,UAAMC,aAAa,GAAG5B,KAAK,CAAC6B,YAAN,EAAtB;AACA,UAAMC,eAAe,GAAG9B,KAAK,CAAC+B,QAAN,CACtBH,aADsB,EACP,YADO,EACO,cADP,CAAxB;AAIA5B,IAAAA,KAAK,CAACgC,OAAN,CAAcF,eAAd,EAA+BG,OAA/B,CAAuCC,WAAW,IAAI;AACpD,YAAMC,WAAW,GAAGnC,KAAK,CAAC+B,QAAN,CAAeD,eAAf,EAAgCI,WAAhC,CAApB;AACA,YAAME,WAAW,GAAGpC,KAAK,CAACqC,UAAN,CAAiBF,WAAjB,CAApB;;AACA,UAAIC,WAAW,IAAIA,WAAW,CAACE,WAAZ,EAAnB,EAA8C;AAC5Cb,QAAAA,iBAAiB,CAACS,WAAD,CAAjB,GAAiC,IAAjC;AACD;AACF,KAND;AAOD;;AAED,MAAI;AACFP,IAAAA,yBAAyB;AAC1B,GAFD,CAEE,OAAOY,CAAP,EAAU,CACV;AACD;;AAEM,QAAM5D,uBAAN,CAA8B;AACnC6D,IAAAA,WAAW,OASR;AAAA,UATS;AACVC,QAAAA,SADU;AAEVC,QAAAA,IAFU;AAGVC,QAAAA,UAHU;AAIVC,QAAAA,SAJU;AAKVC,QAAAA,YALU;AAMVC,QAAAA,cANU;AAOVC,QAAAA,eAPU;AAQVC,QAAAA;AARU,OAST;AACDzC,MAAAA,MAAM,CAAC0C,MAAP,CAAc,IAAd,EAAoB;AAClBR,QAAAA,SADkB;AAElBC,QAAAA,IAFkB;AAGlBC,QAAAA,UAHkB;AAIlBC,QAAAA,SAJkB;AAKlBC,QAAAA,YALkB;AAMlBC,QAAAA,cANkB;AAOlBC,QAAAA,eAPkB;AAQlBC,QAAAA;AARkB,OAApB;;AAWA,UAAIF,cAAJ,EAAoB;AAClB9C,QAAAA,KAAK,CAACkD,OAAN,CAAcJ,cAAd;AACD;;AAED,UAAIC,eAAJ,EAAqB;AACnB/C,QAAAA,KAAK,CAACkD,OAAN,CAAcH,eAAd;AACD;AACF;;AAEDI,IAAAA,kBAAkB,GAAG;AACnB,YAAMC,IAAI,GAAG,IAAb;AACAvD,MAAAA,YAAY,CAACwD,WAAb,GAFmB,CAInB;;AACA,UAAIC,yBAAyB,GAAG,EAAhC;;AAEA,UAAIC,aAAa,GAAGnD,CAAC,CAACoD,GAAF,CAAMJ,IAAI,CAACX,SAAX,EAAsB,UAAUgB,QAAV,EAAoB;AAC5D,cAAM;AAAEC,UAAAA,GAAG,EAAE;AAAEC,YAAAA;AAAF,WAAP;AAAiBjB,UAAAA;AAAjB,YAA0Be,QAAhC;AACA,cAAMd,UAAU,GAAGgB,IAAI,IAClBP,IAAI,CAACP,YAAL,CAAkBe,aAAlB,CAAgCD,IAAhC,EAAsCjB,IAAtC,CADc,IAEdU,IAAI,CAACT,UAFV;AAIA,eAAO,IAAI/D,kBAAJ,CAAuB6E,QAAvB,EAAiCL,IAAjC,EAAuC;AAC5CT,UAAAA,UAD4C;AAE5CG,UAAAA,cAAc,EAAEM,IAAI,CAACN,cAFuB;AAG5CC,UAAAA,eAAe,EAAEK,IAAI,CAACL;AAHsB,SAAvC,CAAP;AAKD,OAXmB,CAApB,CAPmB,CAoBnB;;;AACA,UAAIlD,YAAY,CAACgE,cAAb,EAAJ,EAAmC;AACjC,eAAO,EAAP;AACD,OAvBkB,CAyBnB;;;AACAzD,MAAAA,CAAC,CAAC0D,IAAF,CAAOP,aAAP,EAAsB,UAAUQ,WAAV,EAAuB;AAC3C3D,QAAAA,CAAC,CAAC0D,IAAF,CAAOC,WAAW,CAACC,aAAnB,EAAkC,UAAUC,YAAV,EAAwB;AACxD,cAAIC,eAAe,GAAGD,YAAY,CAACC,eAAnC,CADwD,CAExD;;AACA,cAAI,CAAEA,eAAN,EAAuB;AACrB;AACD;;AAED,cAAI,CAAE9D,CAAC,CAAC+D,GAAF,CAAMb,yBAAN,EAAiCY,eAAe,CAACE,EAAjD,CAAN,EAA4D;AAC1Dd,YAAAA,yBAAyB,CAACY,eAAe,CAACE,EAAjB,CAAzB,GAAgD;AAC9CF,cAAAA,eAAe,EAAEA,eAD6B;AAE9CF,cAAAA,aAAa,EAAE;AAF+B,aAAhD;AAID;;AACDV,UAAAA,yBAAyB,CAACY,eAAe,CAACE,EAAjB,CAAzB,CAA8CJ,aAA9C,CAA4DK,IAA5D,CACEJ,YADF;AAED,SAfD;AAgBD,OAjBD,EA1BmB,CA6CnB;;;AACA7D,MAAAA,CAAC,CAAC0D,IAAF,CAAOR,yBAAP,EAAkC,UAAU/B,IAAV,EAAgB6C,EAAhB,EAAoB;AACpD,YAAIF,eAAe,GAAG3C,IAAI,CAAC2C,eAA3B;AACA,YAAIF,aAAa,GAAGzC,IAAI,CAACyC,aAAzB;AAEA,YAAIM,QAAQ,GAAG,CACb,wBADa,EAEbJ,eAAe,CAACK,OAAhB,CAAwBZ,IAFX,EAGb,eAHa,EAGIP,IAAI,CAACV,IAHT,EAGe,GAHf,EAIb8B,IAJa,CAIR,EAJQ,CAAf;AAMAnE,QAAAA,OAAO,CAACoE,IAAR,CAAa,YAAUP,eAAe,CAACK,OAAhB,CAAwBZ,IAA/C,EAAqD,MAAM;AACzD9D,UAAAA,YAAY,CAAC6E,QAAb,CAAsB;AACpBC,YAAAA,KAAK,EAAEL;AADa,WAAtB,EAEG,YAAY;AACb,gBAAIM,UAAU,GAAGxE,CAAC,CAACoD,GAAF,CAAMQ,aAAN,EAAqB,UAAUC,YAAV,EAAwB;AAC5D,qBAAO,IAAIY,SAAJ,CAAcZ,YAAd,CAAP;AACD,aAFgB,CAAjB;;AAIA,kBAAMa,YAAY,GAAGjF,YAAY,CAACkF,YAAb,CACnBb,eAAe,CAACc,UAAhB,CAA2BC,qBADR,EAEnBf,eAAe,CAACc,UAFG,CAArB;;AAKA,gBAAI;AACFE,cAAAA,OAAO,CAACC,KAAR,CAAcL,YAAY,CAACF,UAAD,CAA1B;AACD,aAFD,CAEE,OAAOrC,CAAP,EAAU;AACV1C,cAAAA,YAAY,CAACuF,SAAb,CAAuB7C,CAAvB;AACD;AACF,WAjBD;AAkBD,SAnBD;AAoBD,OA9BD;;AAgCA,aAAOgB,aAAP;AACD;;AA9GkC;;AAiHrC,QAAMsB,SAAN,SAAwB/E,iBAAiB,CAAC+E,SAA1C,CAAoD;AAClDrC,IAAAA,WAAW,CAACyB,YAAD,EAAe;AACxB,cADwB,CAExB;AACA;AACA;;AACA,WAAKoB,aAAL,GAAqBpB,YAArB,CALwB,CAOxB;AACA;;AACA,WAAKqB,UAAL,GAAkB/E,MAAM,CAACgF,MAAP,CAAc,IAAd,CAAlB,CATwB,CAWxB;AACA;;AACA,WAAKC,iBAAL,GAAyBjF,MAAM,CAACgF,MAAP,CAAc,IAAd,CAAzB,CAbwB,CAexB;AACA;;AACA,WAAKE,aAAL,GAAqBlF,MAAM,CAACgF,MAAP,CAAc,IAAd,CAArB,CAjBwB,CAmBxB;AACA;AACA;;AACA,WAAKG,uBAAL,GAA+B,IAA/B;AACD;;AAEDC,IAAAA,mBAAmB,GAAG;AACpB,UAAIvC,IAAI,GAAG,IAAX;AACA,aAAOA,IAAI,CAACiC,aAAL,CAAmBO,aAAnB,CAAiCrE,IAAxC;AACD;;AAEDsE,IAAAA,cAAc,GAAG;AACf,UAAIzC,IAAI,GAAG,IAAX;AACA,aAAOA,IAAI,CAACiC,aAAL,CAAmBS,kBAAnB,CAAsCrC,QAAtC,CAA+CC,GAA/C,CAAmDC,IAA1D;AACD;;AAEDoC,IAAAA,aAAa,GAAG;AACd,aAAO,CAAC,CAAE,KAAKF,cAAL,EAAV;AACD;;AAEDG,IAAAA,iBAAiB,GAAG;AAClB,aAAO,CAAE,KAAKH,cAAL,EAAT;AACD;;AAEDjC,IAAAA,aAAa,GAAmB;AAAA,UAAlBqC,QAAkB,uEAAP,KAAO;AAC9B,YAAMtD,UAAU,GAAG,KAAK0C,aAAL,CAAmBS,kBAAnB,CAAsCnD,UAAzD;;AAEA,UAAIvC,CAAC,CAAC8F,QAAF,CAAWvD,UAAX,CAAJ,EAA4B;AAC1B,eAAOA,UAAP;AACD;;AAED,UAAI,CAAEsD,QAAN,EAAgB;AACd,cAAMtC,IAAI,GAAG,KAAKkC,cAAL,EAAb;AACA,cAAM,IAAIM,KAAJ,CACJ,8BACExC,IAAI,GAAG,aAAaA,IAAhB,GAAuB,KAD7B,CADI,CAAN;AAGD;;AAED,aAAO,IAAP;AACD;;AAEDyC,IAAAA,gBAAgB,GAAG;AACjB,UAAIhD,IAAI,GAAG,IAAX;AACA,aAAOA,IAAI,CAACiC,aAAL,CAAmBO,aAAnB,CAAiCS,IAAxC;AACD;;AAEDC,IAAAA,cAAc,GAAG;AACf;AACA;AACA,YAAM;AAAEV,QAAAA;AAAF,UAAoB,KAAKP,aAA/B;AACA,aAAOO,aAAa,CAACW,WAAd,KAA8BX,aAAa,CAACW,WAAd,GAA4B,EAA1D,CAAP;AACD;;AAEDC,IAAAA,YAAY,GAAG;AACb,YAAMD,WAAW,GAAG,KAAKD,cAAL,MAAyB,EAA7C;AAEA,aAAO,KAAKjB,aAAL,CAAmBmB,YAAnB,MAAqC,CAACD,WAAW,CAACE,IAAzD;AACD;;AAEDzH,IAAAA,wBAAwB,CAACqH,IAAD,EAAO;AAC7B,YAAMtC,WAAW,GAAG,KAAKsB,aAAL,CAAmBS,kBAAvC;AACA,aAAO9G,wBAAwB,CAC7B+E,WAAW,CAACN,QAAZ,CAAqBiD,QADQ,EAE7B1G,KAAK,CAAC2G,eAAN,CAAsBN,IAAtB,CAF6B,CAA/B;AAID;;AAEDO,IAAAA,gBAAgB,CAACP,IAAD,EAAO;AACrB,aAAO,KAAKrH,wBAAL,CAA8BqH,IAA9B,EAAoCQ,QAA3C;AACD;;AAEDC,IAAAA,KAAK,CAACC,OAAD,EAAU;AACb,aAAO3G,CAAC,CAAC+D,GAAF,CAAM,KAAKmB,UAAX,EAAuByB,OAAvB,IACH,KAAKzB,UAAL,CAAgByB,OAAhB,CADG,GAEH,KAAKzB,UAAL,CAAgByB,OAAhB,IAA2BxH,oBAAoB,CAACwH,OAAD,CAFnD;AAGD,KA/FiD,CAiGlD;AACA;AACA;;;AACAC,IAAAA,eAAe,CAACC,QAAD,EAAW;AACxB,UAAIF,OAAO,GAAG,KAAKvB,iBAAL,CAAuByB,QAAvB,CAAd;;AACA,UAAI,OAAOF,OAAP,KAAmB,QAAvB,EAAiC;AAC/B,eAAOA,OAAP;AACD;;AAED,YAAMpE,UAAU,GAAG,KAAKiB,aAAL,CAAmB,IAAnB,CAAnB;;AACA,UAAI,CAAExD,CAAC,CAAC8F,QAAF,CAAWvD,UAAX,CAAN,EAA8B;AAC5B,eAAO,KAAK6C,iBAAL,CAAuByB,QAAvB,IAAmC,IAA1C;AACD;;AAED,UAAIC,GAAG,GAAGlH,KAAK,CAACmH,WAAN,CACRnH,KAAK,CAAC+B,QAAN,CAAeY,UAAf,EAA2B,KAAKyD,gBAAL,EAA3B,CADQ,CAAV;;AAGA,aAAO,IAAP,EAAa;AACXW,QAAAA,OAAO,GAAG/G,KAAK,CAAC+B,QAAN,CAAemF,GAAf,EAAoBD,QAApB,CAAV;;AAEA,cAAMG,IAAI,GAAG,KAAKN,KAAL,CAAWC,OAAX,CAAb;;AACA,YAAIK,IAAI,IAAIA,IAAI,CAACC,MAAL,EAAZ,EAA2B;AACzB,iBAAO,KAAK7B,iBAAL,CAAuByB,QAAvB,IAAmCF,OAA1C;AACD;;AAED,YAAI/G,KAAK,CAACsH,YAAN,CAAmBJ,GAAnB,MAA4B,cAAhC,EAAgD;AAC9C;AACA,iBAAO,KAAK1B,iBAAL,CAAuByB,QAAvB,IAAmC,IAA1C;AACD;;AAED,YAAIC,GAAG,KAAKvE,UAAZ,EAAwB;AACxB,YAAI4E,SAAS,GAAGvH,KAAK,CAACmH,WAAN,CAAkBD,GAAlB,CAAhB;AACA,YAAIK,SAAS,KAAKL,GAAlB,EAAuB;AACvBA,QAAAA,GAAG,GAAGK,SAAN;AACD;;AAED,aAAO,KAAK/B,iBAAL,CAAuByB,QAAvB,IAAmC,IAA1C;AACD;;AAEDO,IAAAA,mBAAmB,CAACpD,EAAD,EAAKqD,UAAL,EAAiB;AAClC,YAAMC,IAAI,GAAG,KAAKjC,aAAL,CAAmBrB,EAAnB,CAAb;AACA,aAAOsD,IAAI,IAAIA,IAAI,CAACD,UAAD,CAAnB;AACD;;AAEDE,IAAAA,kBAAkB,CAACvD,EAAD,EAAKqD,UAAL,EAAiBG,QAAjB,EAA2B;AAC3C,UAAIF,IAAI,GAAG,KAAKjC,aAAL,CAAmBrB,EAAnB,CAAX;;AACA,UAAI,CAAEsD,IAAN,EAAY;AACVA,QAAAA,IAAI,GAAG,KAAKjC,aAAL,CAAmBrB,EAAnB,IAAyB7D,MAAM,CAACgF,MAAP,CAAc,IAAd,CAAhC;AACD;;AACD,aAAOmC,IAAI,CAACD,UAAD,CAAJ,GAAmBG,QAA1B;AACD;;AAEDC,IAAAA,OAAO,CAACzD,EAAD,EAAKqD,UAAL,EAAiB;AACtBA,MAAAA,UAAU,GAAGA,UAAU,IAAIzH,KAAK,CAAC+B,QAAN,CACzB,KAAK6B,aAAL,EADyB,EAEzB,KAAKwC,gBAAL,EAFyB,CAA3B;;AAKA,YAAM0B,KAAK,GAAG,KAAKN,mBAAL,CAAyBpD,EAAzB,EAA6BqD,UAA7B,CAAd;;AACA,UAAIK,KAAJ,EAAW;AACT,eAAOA,KAAP;AACD;;AAED,YAAMC,UAAU,GAAGxI,oBAAoB,CAACkI,UAAD,CAAvC;;AACA,UAAI,CAAEM,UAAF,IACA,CAAEA,UAAU,CAACV,MAAX,EADN,EAC2B;AACzB,cAAM,IAAIlB,KAAJ,CAAU,iBAAiBsB,UAA3B,CAAN;AACD;;AAED,YAAMO,KAAK,GAAG,KAAK3C,aAAL,CAAmBS,kBAAjC;AACA,YAAMmC,QAAQ,GAAGD,KAAK,CAACE,WAAN,CAAkB;AACjC;AACA;AACA;AACAC,QAAAA,UAAU,EAAExI,QAAQ,CAACyI,IAAT;AAJqB,OAAlB,CAAjB;AAMA,YAAMR,QAAQ,GAAGK,QAAQ,CAACJ,OAAT,CAAiBzD,EAAjB,EAAqBqD,UAArB,CAAjB;;AAEA,UAAIG,QAAQ,KAAK,SAAjB,EAA4B;AAC1B,cAAMS,KAAK,GAAG,IAAIlC,KAAJ,CAAU,yBAAyB/B,EAAzB,GAA8B,GAAxC,CAAd;AACAiE,QAAAA,KAAK,CAACC,IAAN,GAAa,kBAAb;AACA,cAAMD,KAAN;AACD;;AAED,aAAO,KAAKV,kBAAL,CAAwBvD,EAAxB,EAA4BqD,UAA5B,EAAwCG,QAAQ,CAACxD,EAAjD,CAAP;AACD;;AAEDxE,IAAAA,OAAO,CAACwE,EAAD,EAAKqD,UAAL,EAAiB;AACtB,aAAO,KAAKc,QAAL,CAAcnE,EAAd,EAAkBqD,UAAlB,CAAP;AACD,KA1LiD,CA4LlD;AACA;;;AACAc,IAAAA,QAAQ,CAACnE,EAAD,EAAKqD,UAAL,EAAiB;AACvB,aAAO7H,OAAO,CAAC,KAAKiI,OAAL,CAAazD,EAAb,EAAiBqD,UAAjB,CAAD,CAAd;AACD;;AAEDe,IAAAA,OAAO,GAAG;AACR,aAAO,KAAKnD,aAAL,CAAmBS,kBAAnB,CAAsC2C,SAAtC,CAAgD/F,IAAvD;AACD;;AAEDgG,IAAAA,aAAa,GAAG;AACd,aAAO,KAAKrD,aAAL,CAAmBO,aAAnB,CAAiC+C,IAAxC;AACD;AAED;AACF;AACA;AACA;AACA;;;AACEC,IAAAA,YAAY,GAAG;AACb,aAAO,KAAKvD,aAAL,CAAmBO,aAAnB,CAAiCiD,SAAxC;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;;;AACEC,IAAAA,kBAAkB,GAAG;AACnB,UAAI1F,IAAI,GAAG,IAAX;AACA,aAAOA,IAAI,CAACiC,aAAL,CAAmBS,kBAAnB,CAAsCrC,QAAtC,CAA+CsF,eAAtD;AACD;AAED;AACF;AACA;AACA;AACA;AACA;;;AACEC,IAAAA,cAAc,GAAG;AACf,UAAI5F,IAAI,GAAG,IAAX;AACA,aAAOA,IAAI,CAACiC,aAAL,CAAmBS,kBAAnB,CAAsCrC,QAAtC,CAA+CC,GAA/C,CAAmDuF,aAAnD,CAAiE7F,IAAI,CAACgD,gBAAL,EAAjE,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE8C,IAAAA,aAAa,CAACC,OAAD,EAAUC,aAAV,EAAyB;AACpC,WAAK/D,aAAL,CAAmB6D,aAAnB,CAAiCC,OAAjC,EAA0CC,aAA1C;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEC,IAAAA,aAAa,CAACF,OAAD,EAAUC,aAAV,EAAyB;AACpC,WAAK/D,aAAL,CAAmBgE,aAAnB,CAAiCF,OAAjC,EAA0CC,aAA1C;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEE,IAAAA,QAAQ,CAACH,OAAD,EAAUC,aAAV,EAAyB;AAC/B,WAAK/D,aAAL,CAAmBiE,QAAnB,CAA4BH,OAA5B,EAAqCC,aAArC;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACEG,IAAAA,OAAO,CAACJ,OAAD,EAAUC,aAAV,EAAyB;AAC9B,UAAI,OAAOA,aAAP,KAAyB,UAA7B,EAAyC;AACvC;AACA;AACA;AACA;AACA7I,QAAAA,MAAM,CAAC0C,MAAP,CAAckG,OAAd,EAAuBjE,OAAO,CAACC,KAAR,CAAciE,aAAa,EAA3B,CAAvB;AACD;;AAED,WAAK/D,aAAL,CAAmBkE,OAAnB,CAA2BJ,OAA3B;AACD;;AAEDK,IAAAA,YAAY,CAACC,OAAD,EAAUC,IAAV,EAAgB;AAC1B,WAAKrE,aAAL,CAAmBsE,QAAnB,CAA4BF,OAA5B,EAAqCC,IAArC;;AACA,UAAI,CAAE,KAAKpD,cAAL,GAAsBsD,IAA5B,EAAkC;AAChC,cAAMJ,YAAN,CAAmBC,OAAnB,EAA4BC,IAA5B;AACD;AACF;;AAjViD;;AAoVpD,QAAMG,YAAN,CAAmB;AACjBrH,IAAAA,WAAW,CAACsH,oBAAD,EACC5F,eADD,EAEC4B,kBAFD,EAEqB;AAC9B,YAAM1C,IAAI,GAAG,IAAb,CAD8B,CAE9B;;AACAA,MAAAA,IAAI,CAACwC,aAAL,GAAqBkE,oBAArB,CAH8B,CAI9B;;AACA1G,MAAAA,IAAI,CAAC2G,eAAL,GAAuB,EAAvB,CAL8B,CAM9B;;AACA3G,MAAAA,IAAI,CAAC4G,iBAAL,GAAyB,EAAzB,CAP8B,CAQ9B;;AACA5G,MAAAA,IAAI,CAAC6G,MAAL,GAAc,EAAd;AACA7G,MAAAA,IAAI,CAACc,eAAL,GAAuBA,eAAvB;AACAd,MAAAA,IAAI,CAAC0C,kBAAL,GAA0BA,kBAA1B;;AAEA,UAAI1C,IAAI,CAACwC,aAAL,CAAmBsE,IAAnB,KAA4B,QAAhC,EAA0C;AACxC,YAAIhG,eAAJ,EAAqB,CACnB;AACA;AACD,SAHD,MAGO,IAAId,IAAI,CAACwC,aAAL,CAAmBiD,SAAnB,KAAiC,IAArC,EAA2C;AAChDzF,UAAAA,IAAI,CAAC+G,+BAAL;AACD;AACF,OAPD,MAOO;AACL,YAAIjG,eAAJ,EAAqB;AACnB,gBAAMiC,KAAK,CAAC,qCACAiE,IAAI,CAACC,SAAL,CAAeP,oBAAf,CADD,CAAX;AAED,SAJI,CAKL;AACA;;;AACA,YAAI1G,IAAI,CAACwC,aAAL,CAAmBsE,IAAnB,KAA4B,IAAhC,EAAsC;AACpC9G,UAAAA,IAAI,CAAC+G,+BAAL;AACD,SAFD,MAEO;AACL/G,UAAAA,IAAI,CAAC2G,eAAL,CAAqB1F,IAArB,CAA0BjB,IAAI,CAACwC,aAA/B;AACD;AACF;AACF,KApCgB,CAsCjB;AACA;;;AACAuE,IAAAA,+BAA+B,GAAG;AAChC,WAAKd,aAAL,iCACM,KAAKzD,aAAL,CAAmBW,WAAnB,IAAkC,EADxC;AAEEF,QAAAA,IAAI,EAAE,KAAKT,aAAL,CAAmBS,IAF3B;AAGE9E,QAAAA,IAAI,EAAE,KAAKqE,aAAL,CAAmBrE;AAH3B;AAKD;;AAED+I,IAAAA,UAAU,CAAC3G,IAAD,EAAOwF,OAAP,EAAgB;AACxB,UAAIA,OAAO,IAAI/I,CAAC,CAAC+D,GAAF,CAAMgF,OAAN,EAAexF,IAAf,CAAf,EAAqC;AACnC,eAAOwF,OAAO,CAACxF,IAAD,CAAd;AACD;;AACD,YAAM4C,WAAW,GAAG,KAAKX,aAAL,CAAmBW,WAAvC;AACA,aAAOA,WAAW,IAAIA,WAAW,CAAC5C,IAAD,CAAjC;AACD;;AAED4G,IAAAA,OAAO,CAACpB,OAAD,EAAUqB,YAAV,EAAwB;AAC7B,UAAIZ,IAAI,GAAG,KAAKU,UAAL,CAAgB,MAAhB,EAAwBnB,OAAxB,CAAX;;AAEA,UAAI,OAAOS,IAAP,KAAgB,SAApB,EAA+B;AAC7B,eAAOA,IAAP;AACD;;AAED,YAAMa,KAAK,GAAG,CAAE,KAAK3E,kBAAL,CAAwBrC,QAAxB,CAAiCC,GAAjC,CAAqCC,IAArD;;AACA,UAAI,CAAE8G,KAAN,EAAa;AACX;AACA;AACA;AACA;AACA,eAAO,KAAP;AACD,OAd4B,CAgB7B;AACA;;;AAEA,UAAI,CAAE,KAAK3E,kBAAL,CAAwB4E,gBAA9B,EAAgD;AAC9C;AACA;AACA,eAAO,KAAP;AACD;;AAED,YAAM;AACJC,QAAAA,MAAM,GAAG,KADL;AAEJC,QAAAA,SAAS,GAAG;AAFR,UAGFC,MAAM,CAACC,mBAAP,IAA8B,EAHlC;AAKA,YAAMC,YAAY,GAAGJ,MAAM,IAAIC,SAA/B;;AAEA,UAAIJ,YAAJ,EAAkB;AAChB,YAAIO,YAAJ,EAAkB;AAChB,gBAAMC,UAAU,GAAG,KAAKV,UAAL,CAAgB,YAAhB,EAA8BnB,OAA9B,CAAnB,CADgB,CAGhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,gBAAM8B,iBAAiB,GAAG,OAAOD,UAAP,KAAsB,SAAtB,GACtBA,UADsB,GAEtBtL,cAAc,CAAC,KAAKkG,aAAL,CAAmBS,IAApB,CAFlB;;AAIA,cAAI4E,iBAAJ,EAAuB;AACrB;AACA,mBAAO,KAAP;AACD;;AAED,cAAI,CAAEL,SAAN,EAAiB;AACf;AACA;AACA,mBAAO,IAAP;AACD;AACF,SA3Be,CA6BhB;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,cAAMM,UAAU,GAAG,KAAKZ,UAAL,CAAgB,YAAhB,EAA8BnB,OAA9B,CAAnB;;AACA,YAAI,OAAO+B,UAAP,KAAsB,SAA1B,EAAqC;AACnC,iBAAO,CAAEA,UAAT;AACD;AACF,OAxE4B,CA0E7B;AACA;AACA;;;AACA,YAAMC,SAAS,GAAG,KAAKvF,aAAL,CAAmBS,IAAnB,CAAwB+E,KAAxB,CAA8BpL,KAAK,CAACqL,OAApC,CAAlB;AACA,YAAMC,WAAW,GAAGH,SAAS,CAACI,OAAV,CAAkB,SAAlB,KAAgC,CAApD;AACA,aAAOD,WAAP;AACD;;AAEDE,IAAAA,OAAO,CAACrC,OAAD,EAAU;AACf,aAAO,CAAC,EACN,KAAKmB,UAAL,CAAgB,MAAhB,EAAwBnB,OAAxB,KACA;AACA;AACA,WAAKmB,UAAL,CAAgB,KAAhB,EAAuBnB,OAAvB,CAJM,CAAR;AAMD;;AAED3C,IAAAA,YAAY,GAAG;AACb,aAAO,KAAKV,kBAAL,CAAwBU,YAA/B;AACD;;AAED0C,IAAAA,aAAa,CAACC,OAAD,EAAUC,aAAV,EAAyB;AACpC,UAAI,CAAE,KAAKlF,eAAX,EAA4B;AAC1B,cAAMiC,KAAK,CAAC,2CAAD,CAAX;AACD,OAHmC,CAKpC;AACA;;;AACAgD,MAAAA,OAAO,CAACS,IAAR,GAAe,KAAKW,OAAL,CAAapB,OAAb,EAAsB,KAAtB,CAAf;AAEA,YAAMsC,WAAW,GAAG,IAAIC,iBAAJ,CAAsB;AACxCzH,QAAAA,YAAY,EAAE,IAD0B;AAExCkF,QAAAA,OAFwC;AAGxCC,QAAAA;AAHwC,OAAtB,CAApB;;AAMA,UAAI,KAAKtD,kBAAL,CAAwB4E,gBAAxB,IACAe,WAAW,CAAC7B,IADhB,EACsB;AACpB;AACA;AACA;AACA;AACA,cAAM+B,UAAU,GAAG,KAAKtC,aAAL,CAAmBF,OAAnB,EAA4B,MAAM;AACnD,gBAAMyC,MAAM,GAAG,EAAf;AAEA,cAAIC,GAAG,GAAG,KAAK/F,kBAAL,CAAwB2C,SAAxB,CACPzF,iBADO,CACWyI,WADX,CAAV;;AAGA,cAAI,CAAEI,GAAF,IAAS,OAAOA,GAAP,KAAe,QAA5B,EAAsC;AACpC;AACA;AACAA,YAAAA,GAAG,GAAGJ,WAAW,CAAClK,IAAZ,CAAiBuK,QAAjB,CAA0B,MAA1B,CAAN;;AAEA,gBAAIL,WAAW,CAACjK,SAAhB,EAA2B;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,oBAAM;AAAEuK,gBAAAA;AAAF,kBAAgB,KAAKzC,QAAL,CAAc;AAClCjD,gBAAAA,IAAI,EAAEsF,UAAU,CAACK,UAAX,GAAwB,WADI;AAElCzK,gBAAAA,IAAI,EAAE6I,IAAI,CAACC,SAAL,CAAeoB,WAAW,CAACjK,SAA3B;AAF4B,eAAd,CAAtB;AAIAqK,cAAAA,GAAG,IAAI,4BAA4BE,SAA5B,GAAwC,IAA/C;AACD;AACF;;AAEDH,UAAAA,MAAM,CAACrK,IAAP,GAAc0K,MAAM,CAACC,IAAP,CAAY7M,aAAa,CAACwM,GAAD,CAAzB,EAAgC,MAAhC,CAAd,CA1BmD,CA4BnD;AACA;;AACAD,UAAAA,MAAM,CAACpK,SAAP,GAAmB,IAAnB;AAEA,iBAAOoK,MAAP;AACD,SAjCkB,CAAnB;AAmCD,OAzCD,MAyCO;AACL;AACA;AACA;AACA;AACA,aAAKvC,aAAL,iCACKF,OADL;AAEE;AACA;AACA3H,UAAAA,SAAS,EAAE,IAJb;AAKED,UAAAA,IAAI,EAAE0K,MAAM,CAACC,IAAP,CACJ,8DADI,EAEJ,MAFI,CALR;AAQEtC,UAAAA,IAAI,EAAE,IARR,CASE;AACA;AACA;;AAXF,YAYGuC,QAZH,GAYc,IAZd;;AAcA,YAAI,CAAEV,WAAW,CAAC7B,IAAd,IACA,CAAEqC,MAAM,CAACG,QAAP,CAAgBX,WAAW,CAAClK,IAA5B,CADN,EACyC;AACvC;AACA;AACA;AACA;AACD;;AAED,aAAKwI,eAAL,CAAqB1F,IAArB,CAA0BoH,WAA1B;AACD;AACF;;AAEDpC,IAAAA,aAAa,CAACF,OAAD,EAAUC,aAAV,EAAyB;AACpC;AACA,UAAI,CAAE,KAAKlF,eAAP,IACA,KAAK0B,aAAL,CAAmBiD,SAAnB,KAAiC,IADjC,IAEA,KAAKjD,aAAL,CAAmBsE,IAAnB,KAA4B,IAFhC,EAEsC;AACpC,cAAM/D,KAAK,CAAC,2CAAD,CAAX;AACD;;AAED,YAAMkG,QAAQ,GAAG,IAAIC,gBAAJ,CAAqB;AACpCrI,QAAAA,YAAY,EAAE,IADsB;AAEpCkF,QAAAA,OAFoC;AAGpCC,QAAAA;AAHoC,OAArB,CAAjB;AAMA,WAAKY,iBAAL,CAAuB3F,IAAvB,CAA4BgI,QAA5B;AAEA,aAAOA,QAAP;AACD;;AAED/C,IAAAA,QAAQ,CAACH,OAAD,EAAUC,aAAV,EAAyB;AAC/B,UAAI,CAAE,KAAKlF,eAAX,EAA4B;AAC1B,cAAMiC,KAAK,CAAC,sCAAD,CAAX;AACD;;AAED,YAAMkG,QAAQ,GAAG,IAAIE,mBAAJ,CAAwB;AACvCtI,QAAAA,YAAY,EAAE,IADyB;AAEvCkF,QAAAA,OAFuC;AAGvCC,QAAAA;AAHuC,OAAxB,CAAjB;AAMA,WAAKW,eAAL,CAAqB1F,IAArB,CAA0BgI,QAA1B;AAEA,aAAOA,QAAP;AACD;;AAED9C,IAAAA,OAAO,CAACJ,OAAD,EAAU;AACf,YAAM/F,IAAI,GAAG,IAAb;AACA,YAAMK,QAAQ,GAAGL,IAAI,CAAC0C,kBAAL,CAAwBrC,QAAzC;;AAEA,UAAI,CAAE9D,QAAQ,CAAC6M,OAAT,CAAiB/I,QAAQ,CAACf,IAA1B,EAAgC,KAAhC,CAAN,EAA8C;AAC5C,cAAM,IAAIyD,KAAJ,CAAU,8CACA,eADA,GACkB/C,IAAI,CAACwC,aAAL,CAAmBS,IAD/C,CAAN;AAED;;AACD,UAAI8C,OAAO,CAACsD,OAAR,KAAoB,MAApB,IAA8BtD,OAAO,CAACsD,OAAR,KAAoB,MAAtD,EAA8D;AAC5D,cAAM,IAAItG,KAAJ,CAAU,yCACA/C,IAAI,CAACwC,aAAL,CAAmBS,IAD7B,CAAN;AAED;;AACD,UAAI,OAAO8C,OAAO,CAAC5H,IAAf,KAAwB,QAA5B,EAAsC;AACpC,cAAM,IAAI4E,KAAJ,CAAU,uDACA/C,IAAI,CAACwC,aAAL,CAAmBS,IAD7B,CAAN;AAED;;AAEDjD,MAAAA,IAAI,CAAC2G,eAAL,CAAqB1F,IAArB,CAA0B;AACxB6F,QAAAA,IAAI,EAAEf,OAAO,CAACsD,OADU;AAExBlL,QAAAA,IAAI,EAAE0K,MAAM,CAACC,IAAP,CAAYlM,KAAK,CAAC0M,4BAAN,CAAmCvD,OAAO,CAAC5H,IAA3C,CAAZ,EAA8D,MAA9D,CAFkB;AAGxBqI,QAAAA,IAAI,EAAExG,IAAI,CAACmH,OAAL,CAAapB,OAAb,EAAsB,KAAtB;AAHkB,OAA1B;AAKD;;AAEDQ,IAAAA,QAAQ,CAACF,OAAD,EAAUC,IAAV,EAAgB;AACtB;AACA;AACA,WAAKO,MAAL,CAAY5F,IAAZ,CAAiB;AAAEoF,QAAAA,OAAF;AAAWC,QAAAA;AAAX,OAAjB;AACD;;AA7SgB;;AAgTnB,QAAMiD,cAAN,CAAqB;AACnBnK,IAAAA,WAAW,QAKR;AAAA,UALS;AACV0H,QAAAA,IADU;AAEVjG,QAAAA,YAFU;AAGVkF,QAAAA,OAAO,GAAG5I,MAAM,CAACgF,MAAP,CAAc,IAAd,CAHA;AAIV6D,QAAAA,aAAa,GAAG;AAJN,OAKT;AACD,WAAKwD,cAAL,GAAsBxD,aAAtB;AACA,WAAKyD,eAAL,GAAuB1D,OAAvB;AACA,WAAK2D,iBAAL,GAAyB,IAAzB,CAHC,CAID;;AACA,WAAKC,OAAL,GAAe9I,YAAY,CAACgG,MAA5B;AAEA,UAAI+C,UAAU,GAAG/I,YAAY,CAAC2B,aAAb,CAA2BS,IAA5C;;AACA,UAAIjG,CAAC,CAAC+D,GAAF,CAAMgF,OAAN,EAAe,YAAf,KACA,OAAOA,OAAO,CAAC6D,UAAf,KAA8B,QADlC,EAC4C;AAC1CA,QAAAA,UAAU,GAAG7D,OAAO,CAAC6D,UAArB;AACD;;AAED,YAAMhB,UAAU,GAAG7C,OAAO,CAAC9C,IAAR,IAAgB2G,UAAnC;AACA,YAAMjB,SAAS,GAAGC,UAAU,GACxB/H,YAAY,CAAC6B,kBAAb,CAAgCrC,QAAhC,CAAyCC,GAAzC,CAA6CuF,aAA7C,CAA2D+C,UAA3D,CADwB,GAExB/H,YAAY,CAAC2B,aAAb,CAA2BmG,SAF/B;AAIAxL,MAAAA,MAAM,CAAC0C,MAAP,CAAc,IAAd,EAAoB;AAClBiH,QAAAA,IADkB;AAElBN,QAAAA,IAAI,EAAE3F,YAAY,CAACsG,OAAb,CAAqBpB,OAArB,EAA8B,IAA9B,CAFY;AAGlB1C,QAAAA,IAAI,EAAExC,YAAY,CAACuH,OAAb,CAAqBrC,OAArB,CAHY;AAIlB+B,QAAAA,UAAU,EAAE,CAAC,CAAEjH,YAAY,CAACqG,UAAb,CAAwB,YAAxB,EAAsCnB,OAAtC,CAJG;AAKlB6D,QAAAA,UALkB;AAMlBhB,QAAAA,UANkB;AAOlBD,QAAAA,SAPkB;AAQlB;AACA;AACAkB,QAAAA,UAAU,EAAEhJ,YAAY,CAAC2B,aAAb,CAA2B+C;AAVrB,OAApB;AAYD;;AAEDuE,IAAAA,QAAQ,GAAG;AACT,UAAI,KAAKJ,iBAAT,EAA4B;AAC1B,aAAKA,iBAAL,CAAuB3H,KAAvB;AACD,OAFD,MAEO,IAAI,KAAKyH,cAAT,EAAyB;AAC9B,cAAMM,QAAQ,GAAG,KAAKN,cAAtB;AACA,aAAKA,cAAL,GAAsB,IAAtB;AACA,SAAC,KAAKE,iBAAL,GACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA5H,QAAAA,OAAO,CAAC2C,OAAR,GAAkBsF,IAAlB,CAAuBD,QAAvB,EAAiCC,IAAjC,CAAsCvB,MAAM,IAAI;AAC9C,cAAIA,MAAJ,EAAY;AACVrL,YAAAA,MAAM,CAAC0C,MAAP,CAAc,KAAK4J,eAAnB,EAAoCjB,MAApC;AACD,WAFD,MAEO,IAAI,KAAKmB,OAAL,CAAa5L,MAAb,KAAwB,CAA5B,EAA+B;AACpC;AACA;AACA;AACA,kBAAMkH,KAAK,GAAG,IAAIlC,KAAJ,CAAU,sBAAV,CAAd;AACAkC,YAAAA,KAAK,CAACqB,IAAN,GAAa;AAAE2C,cAAAA,QAAQ,EAAE,IAAZ;AAAkBa,cAAAA;AAAlB,aAAb;;AACA,iBAAKH,OAAL,CAAa1I,IAAb,CAAkBgE,KAAlB;AACD,WAV6C,CAW9C;AACA;;;AACA,eAAKyE,iBAAL,GAAyB,IAAzB;AACD,SAdD,CARD,EAsBK3H,KAtBL;AAuBD;AACF;;AAEDiI,IAAAA,gBAAgB,GAAG;AACjB,WAAKF,QAAL;AACA,aAAO,KAAKH,OAAL,CAAa5L,MAAb,GAAsB,CAA7B;AACD;;AAEDkM,IAAAA,mBAAmB,GAAG;AACpB,UAAI,KAAKD,gBAAL,EAAJ,EAA6B;AAC3B,cAAME,UAAU,GAAG,KAAKP,OAAL,CAAa,CAAb,CAAnB;AACAlN,QAAAA,YAAY,CAACwI,KAAb,CACEiF,UAAU,CAAC7D,OADb,EAEE6D,UAAU,CAAC5D,IAFb;AAID;;AACD,aAAO,KAAKqD,OAAL,CAAa5L,MAApB;AACD;;AAED,QAAII,IAAJ,GAAW;AAAE,aAAO,KAAKgM,IAAL,CAAU,MAAV,CAAP;AAA2B;;AACxC,QAAIhM,IAAJ,CAASiM,KAAT,EAAgB;AAAE,aAAO,KAAKC,IAAL,CAAU,MAAV,EAAkBD,KAAlB,CAAP;AAAkC;;AAEpD,QAAI7E,IAAJ,GAAW;AAAE,aAAO,KAAK4E,IAAL,CAAU,MAAV,CAAP;AAA2B;;AACxC,QAAI5E,IAAJ,CAAS6E,KAAT,EAAgB;AAAE,aAAO,KAAKC,IAAL,CAAU,MAAV,EAAkBD,KAAlB,CAAP;AAAkC;;AAEpD,QAAIhM,SAAJ,GAAgB;AAAE,aAAO,KAAK+L,IAAL,CAAU,WAAV,CAAP;AAAgC;;AAClD,QAAI/L,SAAJ,CAAcgM,KAAd,EAAqB;AAAE,aAAO,KAAKC,IAAL,CAAU,WAAV,EAAuBD,KAAvB,CAAP;AAAuC,KA7F3C,CA+FnB;AACA;;;AACAD,IAAAA,IAAI,CAAC5J,IAAD,EAAO;AACT,UAAIrD,MAAM,CAACoN,IAAP,CAAY,IAAZ,EAAkB/J,IAAlB,CAAJ,EAA6B;AAC3B,eAAO,KAAKA,IAAL,CAAP;AACD;;AAED,UAAI,KAAKyJ,gBAAL,EAAJ,EAA6B;AAC3B;AACA;AACA;AACA;AACA;AACA,cAAM,KAAKL,OAAL,CAAa,CAAb,CAAN;AACD;;AAED,cAAQpJ,IAAR;AACA,aAAK,MAAL;AACE,cAAI;AAAEpC,YAAAA,IAAI,GAAG;AAAT,cAAkB,KAAKsL,eAA3B;;AACA,cAAI,OAAOtL,IAAP,KAAgB,QAApB,EAA8B;AAC5BA,YAAAA,IAAI,GAAG0K,MAAM,CAACC,IAAP,CAAY3K,IAAZ,EAAkB,MAAlB,CAAP;AACD;;AACD,iBAAO,KAAKkM,IAAL,CAAU,MAAV,EAAkBlM,IAAlB,CAAP;;AAEF,aAAK,MAAL;AAAa;AACX,kBAAMoM,MAAM,GAAG,EAAf;;AAEA,gBAAI,OAAO,KAAKV,UAAZ,KAA2B,QAA/B,EAAyC;AACvCU,cAAAA,MAAM,CAACtJ,IAAP,CAAY,KAAK4I,UAAjB;AACD;;AAEDU,YAAAA,MAAM,CAACtJ,IAAP,CAAYtF,IAAI,CAAC,KAAKwO,IAAL,CAAU,MAAV,CAAD,CAAhB;AAEA,mBAAO,KAAKE,IAAL,CAAU,MAAV,EAAkB1O,IAAI,CAAC,GAAG4O,MAAJ,CAAtB,CAAP;AACD;;AAED,aAAK,WAAL;AACE,cAAI;AAAEnM,YAAAA;AAAF,cAAgB,KAAKqL,eAAzB;;AACA,cAAIrL,SAAS,IAAI,OAAOA,SAAP,KAAqB,QAAtC,EAAgD;AAC9CA,YAAAA,SAAS,GAAG4I,IAAI,CAACwD,KAAL,CAAWpM,SAAX,CAAZ;AACD;;AACD,iBAAO,KAAKiM,IAAL,CAAU,WAAV,EAAuBjM,SAAvB,CAAP;AAzBF;;AA4BA,UAAI,CAAElB,MAAM,CAACoN,IAAP,CAAY,KAAKb,eAAjB,EAAkClJ,IAAlC,CAAN,EAA+C;AAC7C,cAAM,IAAIwC,KAAJ,8CAAgDxC,IAAhD,EAAN;AACD;;AAED,aAAO,KAAKA,IAAL,IAAa,KAAKkJ,eAAL,CAAqBlJ,IAArB,CAApB;AACD,KAhJkB,CAkJnB;AACA;;;AACA8J,IAAAA,IAAI,CAAC9J,IAAD,EAAO6J,KAAP,EAAc;AAChBjN,MAAAA,MAAM,CAACsN,cAAP,CAAsB,IAAtB,EAA4BlK,IAA5B,EAAkC;AAChC6J,QAAAA,KADgC;AAEhCM,QAAAA,UAAU,EAAE,IAFoB;AAGhCC,QAAAA,QAAQ,EAAE,IAHsB;AAIhCC,QAAAA,YAAY,EAAE;AAJkB,OAAlC;AAMA,aAAOR,KAAP;AACD;;AA5JkB;;AA+JrB,QAAMlB,gBAAN,SAA+BK,cAA/B,CAA8C;AAC5CnK,IAAAA,WAAW,CAACyL,MAAD,EAAS;AAClB,4CAAWA,MAAX;AAAmB/D,QAAAA,IAAI,EAAE;AAAzB;AACD;;AAH2C;;AAM9C,QAAMwB,iBAAN,SAAgCiB,cAAhC,CAA+C;AAC7CnK,IAAAA,WAAW,CAACyL,MAAD,EAAS;AAClB,4CAAWA,MAAX;AAAmB/D,QAAAA,IAAI,EAAE;AAAzB;AACA,WAAKgE,WAAL,GAAmB,IAAnB;AACD;;AAJ4C;;AAO/C,QAAM3B,mBAAN,SAAkCI,cAAlC,CAAiD;AAC/CnK,IAAAA,WAAW,CAACyL,MAAD,EAAS;AAClB,4CAAWA,MAAX;AAAmB/D,QAAAA,IAAI,EAAE;AAAzB,UADkB,CAElB;;AACA,WAAK7D,IAAL,GAAY,KAAKwG,eAAL,CAAqBxG,IAAjC,CAHkB,CAIlB;;AACA,aAAO,KAAKuD,IAAZ;AACD;;AAP8C;;AAU1C,QAAMhL,kBAAN,CAAyB;AAC9B4D,IAAAA,WAAW,CAACiB,QAAD,EAAWgF,SAAX,SAIR;AAAA,UAJ8B;AAC/B9F,QAAAA,UAD+B;AAE/BG,QAAAA,cAF+B;AAG/BC,QAAAA;AAH+B,OAI9B;AACD,YAAMK,IAAI,GAAG,IAAb;AACAvD,MAAAA,YAAY,CAACwD,WAAb;AAEAD,MAAAA,IAAI,CAACK,QAAL,GAAgBA,QAAhB;AACAL,MAAAA,IAAI,CAACqF,SAAL,GAAiBA,SAAjB;AACArF,MAAAA,IAAI,CAACT,UAAL,GAAkBA,UAAlB;AACAS,MAAAA,IAAI,CAACN,cAAL,GAAsBA,cAAtB;AACAM,MAAAA,IAAI,CAACL,eAAL,GAAuBA,eAAvB;AACAK,MAAAA,IAAI,CAAC+K,gBAAL,GAAwB,CAAC,KAAD,EAAQ,OAAR,CAAxB;AACA/K,MAAAA,IAAI,CAACgL,iBAAL,GAAyB,IAAzB;AAEAhL,MAAAA,IAAI,CAACY,aAAL,GAAqB,EAArB;AACAP,MAAAA,QAAQ,CAAC4K,SAAT,CAAmBpM,OAAnB,CAA2BoK,QAAQ,IAAI;AACrC,cAAMiC,IAAI,GAAGlL,IAAI,CAACmL,gBAAL,CAAsBlC,QAAtB,CAAb;;AACA,YAAIiC,IAAJ,EAAU;AACRlL,UAAAA,IAAI,CAACY,aAAL,CAAmBK,IAAnB,CAAwBiK,IAAxB;AACD;AACF,OALD,EAbC,CAoBD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAlL,MAAAA,IAAI,CAACoL,2BAAL,GAAmC,EAAnC,CA9BC,CA8BsC;;AAEvCvO,MAAAA,QAAQ,CAACwO,gBAAT,CAA0B;AACxBC,QAAAA,YAAY,EAAEtL,IAAI,CAACK,QAAL,CAAckL,IADJ;AAExBjM,QAAAA,IAAI,EAAEU,IAAI,CAACqF,SAAL,CAAe/F,IAFG;AAGxBG,QAAAA,YAAY,EAAEO,IAAI,CAACqF,SAAL,CAAe5F,YAHL;AAIxB+L,QAAAA,aAAa,EAAE,IAJS;AAKxB;AACA;AACA;AACAC,QAAAA,aAAa,EAAE,IARS;AASxBC,QAAAA,YAAY,EAAE,IATU;AAUxBC,QAAAA,YAAY,EAAE;AAVU,OAA1B,EAWGC,WAAW,IAAI;AAChB5O,QAAAA,CAAC,CAAC0D,IAAF,CAAOkL,WAAW,CAACjG,eAAnB,EAAoC,UAAUkG,MAAV,EAAkB;AACpD;AACA,cAAI,CAAEA,MAAM,CAACC,QAAT,IAAqB9L,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkBiH,MAA3C,EAAmD;AACjDvH,YAAAA,IAAI,CAACoL,2BAAL,CAAiCS,MAAM,CAACtL,IAAxC,IAAgDqL,WAAW,CAACtL,GAAZ,CAAgBC,IAAhE;AACD;AACF,SALD;AAMD,OAlBD;AAoBAP,MAAAA,IAAI,CAACsH,gBAAL,GACEtK,CAAC,CAAC8F,QAAF,CAAW9C,IAAI,CAACT,UAAhB,KACAS,IAAI,CAACqF,SAAL,CAAe5F,YAAf,CAA4B8L,IAA5B,CACEvL,IAAI,CAACK,QAAL,CAAcC,GADhB,EAEE,SAFF,EAGEN,IAAI,CAACK,QAAL,CAAcf,IAHhB,CAFF;AAQA,YAAMyM,aAAa,GAAG/L,IAAI,CAACqF,SAAL,CAAe7F,SAAf,KAA6B,aAAnD;AACA,YAAMwM,cAAc,GAAGhM,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkBC,IAAlB,KAA2B,wBAA3B,IACrBP,IAAI,CAACqF,SAAL,CAAe5F,YAAf,CAA4B8L,IAA5B,CACEvL,IAAI,CAACK,QAAL,CAAcC,GADhB,EAEE,wBAFF,EAGEN,IAAI,CAACK,QAAL,CAAcf,IAHhB,CADF;AAMA,YAAM2M,aAAa,GAAGjM,IAAI,CAACK,QAAL,CAAcf,IAAd,KAAuB,aAA7C;AAEAU,MAAAA,IAAI,CAACoD,YAAL,GAAoBpD,IAAI,CAACsH,gBAAL,IAAyByE,aAAzB,IACfC,cADe,IACGC,aADvB,CArEC,CAwED;AACA;;AACAjM,MAAAA,IAAI,CAACkM,oBAAL,GAA4BlM,IAAI,CAACsH,gBAAL,GAAwB;AAClD6E,QAAAA,UAAU,EAAEnM,IAAI,CAAC+K;AADiC,OAAxB,GAExB,IAFJ;AAGD;;AAEDqB,IAAAA,oBAAoB,CAACnD,QAAD,EAAW;AAC7B,YAAMiC,IAAI,GAAG,KAAKC,gBAAL;AACXrE,QAAAA,IAAI,EAAE,QADK;AAEXrB,QAAAA,SAAS,EAAE;AAFA,SAIRwD,QAJQ;AAKX9F,QAAAA,WAAW;AACTqD,UAAAA,IAAI,EAAE;AADG,WAENyC,QAAQ,CAAC9F,WAFH;AALA,SAAb;;AAWA,UAAI+H,IAAJ,EAAU;AACR;AACA;AACA;AACA,YAAIA,IAAI,CAACtE,iBAAL,CAAuB7I,MAAvB,GAAgC,CAApC,EAAuC;AACrC,iBAAOmN,IAAI,CAACtE,iBAAZ;AACD;;AAED,cAAMyF,SAAS,GAAG,IAAI5K,SAAJ,CAAcyJ,IAAd,CAAlB;AACAmB,QAAAA,SAAS,CAAC/J,uBAAV,GAAoC,KAApC;;AAEA,YAAI4I,IAAI,CAACpK,eAAT,EAA0B;AACxB,gBAAM;AAAEc,YAAAA;AAAF,cAAiBsJ,IAAI,CAACpK,eAA5B;;AACA,cAAIc,UAAJ,EAAgB;AACd,kBAAMF,YAAY,GAAGjF,YAAY,CAACkF,YAAb,CACnBC,UAAU,CAACC,qBADQ,EAEnBD,UAFmB,CAArB;;AAIA,gBAAI;AACFE,cAAAA,OAAO,CAACC,KAAR,CAAcL,YAAY,CAAC,CAAC2K,SAAD,CAAD,CAA1B;AACD,aAFD,CAEE,OAAOlN,CAAP,EAAU;AACV1C,cAAAA,YAAY,CAACuF,SAAb,CAAuB7C,CAAvB;AACD;AACF;AACF;;AAED,eAAO+L,IAAI,CAACtE,iBAAZ;AACD;;AAED,aAAO,EAAP;AACD;;AAEDuE,IAAAA,gBAAgB,CAAClC,QAAD,EAAW;AACzB,UAAInI,eAAe,GAAG,IAAtB;;AACA,UAAImI,QAAQ,CAACnC,IAAT,KAAkB,QAAtB,EAAgC;AAC9B,YAAIrB,SAAS,GAAGwD,QAAQ,CAACxD,SAAzB;;AACA,YAAIA,SAAS,KAAK,IAAlB,EAAwB;AACtB,gBAAM6G,QAAQ,GAAG1P,KAAK,CAACsH,YAAN,CAAmB+E,QAAQ,CAAChG,IAA5B,CAAjB;AACAnC,UAAAA,eAAe,GAAG,KAAKyL,sBAAL,GAA8BC,aAA9B,CAA4CF,QAA5C,CAAlB;;AACA,cAAI,CAAExL,eAAN,EAAuB;AACrBrE,YAAAA,YAAY,CAACwI,KAAb,CACE,8BAAwBgE,QAAQ,CAAChG,IAAjC,sBACM,KAAK5C,QAAL,CAAcC,GAAd,CAAkBmM,WAAlB,EADN,4BACyDH,QADzD,2DADF;AAIA,mBAAO,IAAP,CALqB,CAMrB;AACD;AACF,SAXD,MAWO;AACLxL,UAAAA,eAAe,GAAG,KAAKyL,sBAAL,GAA8BG,cAA9B,CAA6CjH,SAA7C,CAAlB,CADK,CAEL;AACA;;AACA,cAAI,CAAE3E,eAAF,IAAqB2E,SAAS,KAAK,IAAvC,EAA6C;AAC3ChJ,YAAAA,YAAY,CAACwI,KAAb,CACE,8BAAwBgE,QAAQ,CAAChG,IAAjC,sBACM,KAAK5C,QAAL,CAAcC,GAAd,CAAkBmM,WAAlB,EADN,8BAC2DhH,SAD3D,2DADF;AAIA,mBAAO,IAAP,CAL2C,CAM3C;AACD;;AAED,eAAKkH,kBAAL,CAAwBlH,SAAxB;AACD;AACF;;AAED,aAAO,IAAIgB,YAAJ,CAAiBwC,QAAjB,EAA2BnI,eAA3B,EAA4C,IAA5C,CAAP;AACD;;AAED6L,IAAAA,kBAAkB,CAAClH,SAAD,EAAY;AAC5BA,MAAAA,SAAS,GAAGA,SAAS,CAACmH,WAAV,EAAZ;;AAEA,UAAI,CAAEnH,SAAS,CAACoH,UAAV,CAAqB,GAArB,CAAN,EAAiC;AAC/BpH,QAAAA,SAAS,GAAG,MAAMA,SAAlB;AACD;;AAED,UAAI,KAAKsF,gBAAL,CAAsB5C,OAAtB,CAA8B1C,SAA9B,IAA2C,CAA/C,EAAkD;AAChD,aAAKsF,gBAAL,CAAsB9J,IAAtB,CAA2BwE,SAA3B;AACD;AACF;;AAEDX,IAAAA,WAAW,GAAe;AAAA,UAAdiB,OAAc,uEAAJ,EAAI;AACxB,aAAO7J,QAAQ,CAAC4Q,WAAT;AACLC,QAAAA,MAAM,EAAE,gCADH;AAELxN,QAAAA,UAAU,EAAE,KAAKA,UAFZ;AAGLwF,QAAAA,UAAU,EAAE,KAAKM,SAAL,CAAe/F,IAHtB;AAIL6M,QAAAA,UAAU,EAAE,KAAKpB,gBAJZ;AAKLiC,QAAAA,gBAAgB,EAAE,KAAKC,oBAAL;AALb,SAMFlH,OANE,EAAP;AAQD;;AAEDkH,IAAAA,oBAAoB,GAAG;AACrB,UAAI,CAAE,KAAKjC,iBAAX,EAA8B;AAC5B,cAAMkC,IAAI,GAAG,KAAK7M,QAAL,CAAc8M,sBAA3B;AACA,aAAKnC,iBAAL,GAAyB,EAAzB;;AAEAhO,QAAAA,CAAC,CAAC0D,IAAF,CAAOwM,IAAP,EAAa,CAACE,GAAD,EAAMnK,IAAN,KAAe;AAC1B,cAAI,CAAEmK,GAAG,CAACC,KAAV,EAAiB;AACf,iBAAKrC,iBAAL,CAAuB/J,IAAvB,CACErE,KAAK,CAAC2G,eAAN,CAAsBN,IAAI,CAACqK,OAAL,CAAa,MAAb,EAAqB,EAArB,CAAtB,CADF;AAED;AACF,SALD;AAMD;;AAED,aAAO,KAAKtC,iBAAZ;AACD;;AAEDuB,IAAAA,sBAAsB,GAAG;AACvB,UAAI,CAAE,KAAKgB,mBAAX,EAAgC;AAC9B9Q,QAAAA,YAAY,CAACwD,WAAb;AAEA,cAAMkB,OAAO,GAAG,KAAKd,QAAL,CAAcC,GAA9B;AACA,cAAMkN,oBAAoB,GAAG3Q,QAAQ,CAAC4Q,uBAAT,CAAiCtM,OAAjC,EAA0C;AACrEoK,UAAAA,IAAI,EAAE,KAAKlL,QAAL,CAAckL,IADiD;AAErE9L,UAAAA,YAAY,EAAE,KAAK4F,SAAL,CAAe5F;AAFwC,SAA1C,CAA7B;AAKA,aAAK8N,mBAAL,GAA2B,IAAI7Q,iBAAiB,CAACgR,kBAAtB,CACzBvM,OAAO,CAACsL,WAAR,EADyB,EACF;AAAEkB,UAAAA,UAAU,EAAE;AAAd,SADE,CAA3B;;AAGA3Q,QAAAA,CAAC,CAAC0D,IAAF,CAAO8M,oBAAP,EAA6BI,QAAQ,IAAI;AACvCA,UAAAA,QAAQ,CAACC,wBAAT;;AACA,eAAKN,mBAAL,CAAyBO,KAAzB,CAA+BF,QAAQ,CAACG,gBAAT,CAA0BlR,QAAzD,EAAmE;AACjEyC,YAAAA,IAAI,EAAE,KAAK+F,SAAL,CAAe/F;AAD4C,WAAnE;AAGD,SALD;AAMD;;AAED,aAAO,KAAKiO,mBAAZ;AACD,KAhO6B,CAkO9B;;;AACA,WAAOS,uBAAP,CAA+B7N,aAA/B,EAA8C;AAC5C,YAAMC,GAAG,GAAG,IAAI6N,GAAJ,EAAZ;AAEA9N,MAAAA,aAAa,CAACtB,OAAd,CAAsB+F,KAAK,IAAI;AAC7B,cAAMrE,IAAI,GAAGqE,KAAK,CAACvE,QAAN,CAAeC,GAAf,CAAmBC,IAAnB,IAA2B,IAAxC;AACA,cAAMiB,UAAU,GAAG,EAAnB;AAEAoD,QAAAA,KAAK,CAAChE,aAAN,CAAoB/B,OAApB,CAA4BqM,IAAI,IAAI;AAClC1J,UAAAA,UAAU,CAACP,IAAX,CAAgB,GAAGiK,IAAI,CAACtE,iBAAxB;AACD,SAFD;AAIAxG,QAAAA,GAAG,CAAC8N,GAAJ,CAAQ3N,IAAR,EAAc;AACZ3D,UAAAA,KAAK,EAAE4E,UADK;AAEZsG,UAAAA,UAAU,EAAE9K,CAAC,CAACmR,IAAF,CAAO3M,UAAP,EAAmB4M,IAAI,IAAIA,IAAI,CAACtG,UAAhC,KAA+C,IAF/C;AAGZlD,UAAAA,KAHY;AAIZyJ,UAAAA,qBAAqB,EAAE,IAAI3S,QAAJ;AAJX,SAAd;AAMD,OAdD;;AAgBA,UAAI,CAAE0E,GAAG,CAACW,GAAJ,CAAQ,SAAR,CAAN,EAA0B;AACxB;AACA;AACA;AACA,eAAO,KAAKuN,iBAAL,CAAuBlO,GAAvB,CAAP;AACD,OAxB2C,CA0B5C;AACA;;;AACAA,MAAAA,GAAG,CAACmO,GAAJ,CAAQ,SAAR,EAAmB3R,KAAnB,CAAyB4R,IAAzB,CAA8BJ,IAAI,IAAI;AACpC,YAAIA,IAAI,CAACxE,UAAL,KAAoB,qBAAxB,EAA+C;AAC7C,iBAAO,KAAP;AACD;;AAED,cAAM6E,qBAAqB,GAAG,EAA9B;AAEArO,QAAAA,GAAG,CAACvB,OAAJ,CAAY,CAACyH,IAAD,EAAO/F,IAAP,KAAgB;AAC1B,cAAI,CAAEA,IAAN,EAAY;AAEZ,gBAAMuH,UAAU,GAAGxB,IAAI,CAACwB,UAAL,qBACPvH,IADO,cACC+F,IAAI,CAACwB,UAAL,CAAgBc,UADjB,CAAnB;AAGA6F,UAAAA,qBAAqB,CAACxN,IAAtB,CACE,aAAa+F,IAAI,CAACC,SAAL,CAAe1G,IAAf,CAAb,IACGuH,UAAU,GAAG,OAAOd,IAAI,CAACC,SAAL,CAAea,UAAf,CAAV,GAAuC,EADpD,IAEA,MAHF;AAKD,SAXD;;AAaA,YAAI2G,qBAAqB,CAAC1Q,MAAtB,KAAiC,CAArC,EAAwC;AACtC,iBAAO,KAAP;AACD;;AAEDqQ,QAAAA,IAAI,CAACjQ,IAAL,GAAY0K,MAAM,CAACC,IAAP,CACVsF,IAAI,CAACjQ,IAAL,CAAUuK,QAAV,CAAmB,MAAnB,IAA6B,IAA7B,GACE+F,qBAAqB,CAACrN,IAAtB,CAA2B,EAA3B,CAFQ,EAGV,MAHU,CAAZ;AAMAgN,QAAAA,IAAI,CAAC7I,IAAL,GAAY5J,IAAI,CAACyS,IAAI,CAACjQ,IAAN,CAAhB;AAEA,eAAO,IAAP;AACD,OAjCD,EA5B4C,CA+D5C;AACA;;AACA,YAAMuQ,iBAAiB,GAAGvR,MAAM,CAACgF,MAAP,CAAc,IAAd,CAA1B,CAjE4C,CAmE5C;AACA;;AACA,YAAMwM,mBAAmB,GAAGxR,MAAM,CAACgF,MAAP,CAAc,IAAd,CAA5B;AACA,YAAMyM,UAAU,GAAG,IAAIX,GAAJ,EAAnB;AAEA9N,MAAAA,aAAa,CAACtB,OAAd,CAAsB+F,KAAK,IAAI;AAC7B,cAAMrE,IAAI,GAAGqE,KAAK,CAACvE,QAAN,CAAeC,GAAf,CAAmBC,IAAnB,IAA2B,IAAxC;AACA,cAAM8G,KAAK,GAAG,CAAE9G,IAAhB;;AAEA,YAAI,CAAEqE,KAAK,CAAC0C,gBAAR,IAA4B,CAAED,KAAlC,EAAyC;AACvC;AACA;AACA;AACD;;AAED,cAAM2F,gBAAgB,GAAG,EAAzB;;AACAhQ,QAAAA,CAAC,CAAC0D,IAAF,CAAOkE,KAAK,CAACvE,QAAN,CAAe8M,sBAAtB,EAA8C,CAACC,GAAD,EAAMxD,UAAN,KAAqB;AACjE,cAAI,CAAEwD,GAAG,CAACC,KAAV,EAAiB;AACf;AACA;AACA;AACAL,YAAAA,gBAAgB,CAAC/L,IAAjB,CAAsB2I,UAAtB;AACD;AACF,SAPD;;AASA,cAAMiF,KAAK,GAAGzO,GAAG,CAACmO,GAAJ,CAAQhO,IAAR,CAAd;AAEA,cAAMuO,OAAO,GAAG,IAAI9S,aAAJ,CAAkB;AAChCuE,UAAAA,IADgC;AAEhCwO,UAAAA,UAAU,EAAEnK,KAAK,CAACS,SAAN,CAAgB/F,IAFI;AAGhC6M,UAAAA,UAAU,EAAEvH,KAAK,CAACmG,gBAHc;AAIhCxL,UAAAA,UAAU,EAAEqF,KAAK,CAACrF,UAJc;AAKhCyN,UAAAA,gBALgC;AAMhC1J,UAAAA,QAAQ,EAAEuL,KAAK,CAACR,qBANgB;AAOhCW,UAAAA,QAAQ,EAAEpK,KAAK,CAACjF;AAPgB,SAAlB,CAAhB;AAUAmP,QAAAA,OAAO,CAACG,aAAR,CAAsBJ,KAAK,CAACjS,KAA5B;;AAEA,YAAIgI,KAAK,CAAC0C,gBAAV,EAA4B;AAC1BwH,UAAAA,OAAO,CAACI,WAAR;AACAlT,UAAAA,aAAa,CAACmT,YAAd,CACET,iBADF,EAEEI,OAAO,CAACJ,iBAFV;AAID;;AAEDE,QAAAA,UAAU,CAACV,GAAX,CAAe3N,IAAf,EAAqBuO,OAArB;AACD,OA3CD;;AA6CA,eAASM,aAAT,CAAuBC,cAAvB,EAAuC;AACrC,cAAMC,UAAU,GAAG,IAAIrB,GAAJ,EAAnB;;AAEAjR,QAAAA,CAAC,CAAC0D,IAAF,CAAO2O,cAAP,EAAuB,CAACE,cAAD,EAAiBvO,EAAjB,KAAwB;AAC7C,gBAAMwO,KAAK,GAAGxO,EAAE,CAACgH,KAAH,CAAS,GAAT,CAAd;AACA,cAAIzH,IAAI,GAAG,IAAX;;AAEA,cAAIiP,KAAK,CAAC,CAAD,CAAL,KAAa,QAAjB,EAA2B;AACzB,gBAAIC,KAAK,GAAG,KAAZ;AACAlP,YAAAA,IAAI,GAAGiP,KAAK,CAAC,CAAD,CAAZ;;AAEA,gBAAIA,KAAK,CAACzR,MAAN,GAAe,CAAnB,EAAsB;AACpByR,cAAAA,KAAK,CAAC,CAAD,CAAL,GAAW,GAAX;AACAxO,cAAAA,EAAE,GAAGwO,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAetO,IAAf,CAAoB,GAApB,CAAL;AACAqO,cAAAA,KAAK,GAAG,IAAR;AAED,aALD,MAKO;AACL,oBAAMZ,KAAK,GAAGzO,GAAG,CAACmO,GAAJ,CAAQhO,IAAR,CAAd;AACA,oBAAMuH,UAAU,GAAG+G,KAAK,IAAIA,KAAK,CAAC/G,UAAlC;;AACA,kBAAIA,UAAJ,EAAgB;AACd9G,gBAAAA,EAAE,GAAG,OAAO8G,UAAU,CAAC8B,UAAvB;AACA6F,gBAAAA,KAAK,GAAG,IAAR;AACD;AACF;;AAED,gBAAI,CAAEA,KAAN,EAAa;AACX;AACD;AACF;;AAED,cAAI,CAAEb,UAAU,CAAC7N,GAAX,CAAeR,IAAf,CAAN,EAA4B;AAC1B;AACD;;AAED,cAAI,CAAE+O,UAAU,CAACvO,GAAX,CAAeR,IAAf,CAAN,EAA4B;AAC1B+O,YAAAA,UAAU,CAACpB,GAAX,CAAe3N,IAAf,EAAqBpD,MAAM,CAACgF,MAAP,CAAc,IAAd,CAArB;AACD;;AAEDnG,UAAAA,aAAa,CAACmT,YAAd,CACEG,UAAU,CAACf,GAAX,CAAehO,IAAf,CADF,EAEE;AAAE,aAACS,EAAD,GAAMuO;AAAR,WAFF;AAID,SAvCD;;AAyCA,cAAMI,kBAAkB,GAAGxS,MAAM,CAACgF,MAAP,CAAc,IAAd,CAA3B;AAEAmN,QAAAA,UAAU,CAACzQ,OAAX,CAAmB,CAAC+Q,OAAD,EAAUrP,IAAV,KAAmB;AACpC,gBAAM;AAAEsP,YAAAA,UAAF;AAAcC,YAAAA;AAAd,cACJlB,UAAU,CAACL,GAAX,CAAehO,IAAf,EAAqBwP,kBAArB,CAAwCH,OAAxC,CADF;AAEA5T,UAAAA,aAAa,CAACmT,YAAd,CAA2BR,mBAA3B,EAAgDkB,UAAhD;AACA7T,UAAAA,aAAa,CAACmT,YAAd,CAA2BQ,kBAA3B,EAA+CG,YAA/C;AACD,SALD;;AAOA,YAAI,CAAE9S,CAAC,CAACgT,OAAF,CAAUL,kBAAV,CAAN,EAAqC;AACnCP,UAAAA,aAAa,CAACO,kBAAD,CAAb;AACD;AACF;;AAEDP,MAAAA,aAAa,CAACV,iBAAD,CAAb;AAEAvR,MAAAA,MAAM,CAAC8S,IAAP,CAAYtB,mBAAZ,EAAiC9P,OAAjC,CAAyCmC,EAAE,IAAI;AAC7C,eAAO0N,iBAAiB,CAAC1N,EAAD,CAAxB;AACD,OAFD;;AAIA,WAAKkP,wBAAL,CAA8BxB,iBAA9B;;AAEAE,MAAAA,UAAU,CAAC/P,OAAX,CAAmB,CAACiQ,OAAD,EAAUvO,IAAV,KAAmB;AACpC,cAAM8G,KAAK,GAAG,CAAE9G,IAAhB;AACA,cAAM4P,WAAW,GAAGrB,OAAO,CAACsB,cAAR,EAApB;AACA,cAAMvB,KAAK,GAAGzO,GAAG,CAACmO,GAAJ,CAAQhO,IAAR,CAAd;;AAEA,YAAIsO,KAAK,CAACjK,KAAN,CAAY0C,gBAAhB,EAAkC;AAChC6I,UAAAA,WAAW,CAACtR,OAAZ,CAAoBuP,IAAI,IAAI;AAC1B;AACA;AACAA,YAAAA,IAAI,CAAClC,oBAAL,GAA4B2C,KAAK,CAACjK,KAAN,CAAYsH,oBAAxC;AACD,WAJD;AAKD;;AAED,YAAI7E,KAAJ,EAAW;AACT,gBAAMgJ,0BAA0B,GAAG,EAAnC;AACA,gBAAMC,YAAY,GAAGlQ,GAAG,CAACmO,GAAJ,CAAQ,SAAR,CAArB;AAEA4B,UAAAA,WAAW,CAACtR,OAAZ,CAAoBuP,IAAI,IAAI;AAC1B,kBAAMoB,KAAK,GAAGpB,IAAI,CAACmC,WAAL,CAAiBvI,KAAjB,CAAuB,GAAvB,CAAd;AACAvM,YAAAA,MAAM,CAAC+U,WAAP,CAAmBhB,KAAK,CAAC,CAAD,CAAxB,EAA6B,EAA7B;AACA,kBAAMiB,gBAAgB,GAAGjB,KAAK,CAACrH,OAAN,CAAc,cAAd,CAAzB;;AAEA,gBAAIsI,gBAAgB,KAAK,CAAC,CAAtB,IAA4BA,gBAAgB,KAAK,CAArB,IACAjB,KAAK,CAAC,CAAD,CAAL,KAAa,QAD7C,EACwD;AACtDa,cAAAA,0BAA0B,CAACpP,IAA3B,CAAgCmN,IAAhC;AACD,aAHD,MAGO;AACL;AACA;AACA;AACA;AACA;AACA;AACAA,cAAAA,IAAI,CAAClC,oBAAL,GAA4BkC,IAAI,CAAClC,oBAAL,IAC1BoE,YAAY,CAAC1L,KAAb,CAAmBsH,oBADrB,CAPK,CAUL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAoE,cAAAA,YAAY,CAAC1T,KAAb,CAAmBqE,IAAnB,CAAwBmN,IAAxB;AACD;AACF,WA/BD;AAiCAS,UAAAA,KAAK,CAACjS,KAAN,GAAcyT,0BAAd;AAED,SAvCD,MAuCO;AACLxB,UAAAA,KAAK,CAACjS,KAAN,GAAcuT,WAAd;AACD;AACF,OAvDD;AAyDA,aAAO,KAAK7B,iBAAL,CAAuBlO,GAAvB,CAAP;AACD;;AAED,WAAOkO,iBAAP,CAAyBoC,gBAAzB,EAA2C;AACzC;AACAA,MAAAA,gBAAgB,CAAC7R,OAAjB,CAAyBgQ,KAAK,IAAI;AAChCA,QAAAA,KAAK,CAACjS,KAAN,CAAYiC,OAAZ,CAAoBuP,IAAI,IAAI;AAC1B,gBAAM;AACJxE,YAAAA,UADI;AAEJjG,YAAAA,OAAO,GAAGiG,UAAU,IAClBhN,KAAK,CAAC+B,QAAN,CAAekQ,KAAK,CAACjK,KAAN,CAAYrF,UAA3B,EAAuCqK,UAAvC;AAHE,cAIFwE,IAJJ;AAKA,gBAAM;AAAEC,YAAAA;AAAF,cAA4BQ,KAAlC;;AACA,cACE,OAAOlL,OAAP,KAAmB,QAAnB,IACA;AACA;AACA;AACA;AACA;AACA,WAAE0K,qBAAqB,CAACsC,gBAAtB,CAAuChN,OAAvC,CAPJ,EAQE;AACA;AACA;AACA;AACA;AACA0K,YAAAA,qBAAqB,CAACuC,OAAtB,CAA8BjN,OAA9B,EAAuCtH,oBAAoB,CAACsH,OAAD,CAA3D;AACD;AACF,SAtBD;AAuBD,OAxBD;AAyBA,aAAO+M,gBAAP;AACD;;AAED,WAAOR,wBAAP,CAAgCb,cAAhC,EAAgD;AAC9C,YAAMwB,kBAAkB,GAAG,EAA3B;AACA,YAAMC,QAAQ,GAAG,EAAjB;AAEA3T,MAAAA,MAAM,CAAC8S,IAAP,CAAYZ,cAAZ,EAA4BxQ,OAA5B,CAAoCmC,EAAE,IAAI;AACxC;AACA;AACAqO,QAAAA,cAAc,CAACrO,EAAD,CAAd,CAAmBwN,IAAnB,CAAwBlI,IAAI,IAAIyK,SAAS,CAAC/P,EAAD,EAAKsF,IAAL,CAAzC;AACD,OAJD;;AAMA,eAASyK,SAAT,CAAmB/P,EAAnB,EAAuBsF,IAAvB,EAA6B;AAC3B,YAAIA,IAAI,CAACxH,WAAT,EAAsB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,YAAIwH,IAAI,CAAC0K,gBAAT,EAA2B;AACzB;AACA;AACA;AACA;AACD;;AAED,YAAIhQ,EAAE,IAAI3C,iBAAN,IACA9B,QAAQ,CAAC6M,OAAT,CAAiB9C,IAAI,CAACyI,UAAtB,EAAkC,IAAlC,CADJ,EAC6C;AAC3C;AACA;AACA;AACA;AACD;;AAED,YAAI/N,EAAE,KAAK,mBAAP,IACAsF,IAAI,CAACxH,WAAL,KAAqB,SADrB,IAEAwH,IAAI,CAACjC,UAAL,CAAgB4M,QAAhB,CAAyB,UAAzB,CAFJ,EAE0C;AACxC;AACA;AACA;AACD;;AAED,cAAMzB,KAAK,GAAGxO,EAAE,CAACgH,KAAH,CAAS,GAAT,CAAd;;AAEA,YAAI,KAAKG,OAAL,CAAanH,EAAE,CAACkQ,MAAH,CAAU,CAAV,CAAb,IAA6B,CAAjC,EAAoC;AAClC,gBAAMC,UAAU,GAAG3B,KAAK,CAAC,CAAD,CAAL,CAAS3C,UAAT,CAAoB,GAApB,IACf2C,KAAK,CAAC,CAAD,CAAL,GAAW,GAAX,GAAiBA,KAAK,CAAC,CAAD,CADP,GAEfA,KAAK,CAAC,CAAD,CAFT;;AAIA,cAAI2B,UAAU,KAAK,QAAnB,EAA6B;AAC3B;AACA;AACD;;AAED,cAAI,CAAEnU,CAAC,CAAC+D,GAAF,CAAM8P,kBAAN,EAA0BM,UAA1B,CAAN,EAA6C;AAC3C;AACA;AACAN,YAAAA,kBAAkB,CAACM,UAAD,CAAlB,GAAiCnQ,EAAjC;AACD;;AAED,cAAIA,EAAE,CAAC6L,UAAH,CAAc,yBAAd,CAAJ,EAA8C;AAC5C;AACA;AACA;AACA7L,YAAAA,EAAE,GAAGwO,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAetO,IAAf,CAAoB,GAApB,CAAL;AACD;AAEF,SAvBD,MAuBO,IAAIkF,IAAI,CAACxH,WAAT,EAAsB;AAC3B;AACA;AACA;AACA;AACD;;AAEDgS,QAAAA,QAAQ,CAAC7P,IAAT,aAAmB+F,IAAI,CAACC,SAAL,CAAejG,EAAf,CAAnB,iBACEsF,IAAI,CAACjC,UADP,eACsBiC,IAAI,CAACyI,UAD3B;AAGA,eAAO,IAAP;AACD;;AAED,UAAI+B,QAAQ,CAAC/S,MAAT,GAAkB,CAAtB,EAAyB;AACvBhC,QAAAA,OAAO,CAACqV,OAAR,CAAgB,uCAAhB;AACAN,QAAAA,QAAQ,CAACjS,OAAT,CAAiBwS,IAAI,IAAItV,OAAO,CAACuV,IAAR,CAAaD,IAAb,CAAzB;AACAtV,QAAAA,OAAO,CAACuV,IAAR;AAEA,cAAMC,YAAY,GAAGpU,MAAM,CAAC8S,IAAP,CAAYY,kBAAZ,CAArB;;AACA,YAAIU,YAAY,CAACxT,MAAb,GAAsB,CAA1B,EAA6B;AAC3BhC,UAAAA,OAAO,CAACuV,IAAR,CAAa,4EAAb;AACAvV,UAAAA,OAAO,CAACuV,IAAR;AACAvV,UAAAA,OAAO,CAACuV,IAAR,CAAa,iCAAiCC,YAAY,CAACnQ,IAAb,CAAkB,GAAlB,CAA9C;AACArF,UAAAA,OAAO,CAACuV,IAAR;AACD;AACF;AACF,KAnlB6B,CAqlB9B;AACA;AACA;AACA;;;AACAE,IAAAA,YAAY,CAACC,WAAD,EAAcC,UAAd,EAA0B;AACpCjV,MAAAA,YAAY,CAACwD,WAAb;AAEA,YAAMgL,SAAS,GAAG,EAAlB;AAEA,WAAKrK,aAAL,CAAmB/B,OAAnB,CAA2BqM,IAAI,IAAI;AACjCD,QAAAA,SAAS,CAAChK,IAAV,CAAe,GAAGiK,IAAI,CAACvE,eAAvB;AACD,OAFD;AAIAsE,MAAAA,SAAS,CAAChK,IAAV,CAAe,GAAG,KAAK0Q,OAAL,CAAaF,WAAb,EAA0BC,UAA1B,CAAlB;AAEA,aAAOzG,SAAP;AACD;;AAED0G,IAAAA,OAAO,CAACF,WAAD,EAAqC;AAAA,UAAvBC,UAAuB,uEAAV,MAAM,CAAE,CAAE;AAC1C,YAAM1R,IAAI,GAAG,IAAb;AACAvD,MAAAA,YAAY,CAACwD,WAAb;AAEA,UAAI8O,UAAU,GAAG/O,IAAI,CAACqF,SAAL,CAAe/F,IAAhC,CAJ0C,CAM1C;;AACA,YAAM+H,KAAK,GAAG,CAAErH,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkBC,IAAlC;AACA,YAAMqR,KAAK,GAAGrV,QAAQ,CAAC6M,OAAT,CAAiBpJ,IAAI,CAACK,QAAL,CAAcf,IAA/B,EAAqC,KAArC,CAAd;AACA,YAAMuS,aAAa,GAAG;AACpBxK,QAAAA,KADoB;AAEpB0H,QAAAA,UAFoB;AAGpB;AACA;AACA;AACA+C,QAAAA,iBAAiB,EAAEzK,KAAK,GAAG,SAAH,GACtB,eAAe1K,cAAc,CAACoV,OAAf,CACb/R,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkBC,IAAlB,IACGP,IAAI,CAACK,QAAL,CAAc2R,IAAd,KAAuB,MAAvB,GAAgC,EAAhC,GAAsC,MAAMhS,IAAI,CAACK,QAAL,CAAc2R,IAD7D,IAEE,KAHW,CAPG;AAWpBzR,QAAAA,IAAI,EAAEP,IAAI,CAACK,QAAL,CAAcC,GAAd,CAAkBC,IAAlB,IAA0B,IAXZ;AAYpBoF,QAAAA,eAAe,EAAE3I,CAAC,CAACiV,KAAF,CAAQjS,IAAI,CAACK,QAAL,CAAcsF,eAAtB,EAAuC,MAAvC,CAZG;AAapBuM,QAAAA,OAAO,EAAElS,IAAI,CAACoL,2BAbM;AAcpB;AACA+G,QAAAA,4BAA4B,EAAEP;AAfV,OAAtB;AAkBA,YAAMQ,UAAU,GAAG,EAAnB;AACA,YAAMC,cAAc,GAAG1W,IAAI,CAACqL,IAAI,CAACC,SAAL,CAAe;AACzC4K,QAAAA,aADyC;AAEzCjV,QAAAA,KAAK,EAAE6U,WAAW,CAACrR,GAAZ,CAAiBiM,SAAD,IAAe;AACpC+F,UAAAA,UAAU,CAACnR,IAAX,CAAgBoL,SAAS,CAAC9G,IAA1B;AACA,iBAAO;AACL2G,YAAAA,oBAAoB,EAAEG,SAAS,CAACH,oBAD3B;AAELqE,YAAAA,WAAW,EAAElE,SAAS,CAACkE,WAFlB;AAGLnS,YAAAA,SAAS,EAAE,CAAC,CAAEiO,SAAS,CAACjO,SAHnB;AAIL0J,YAAAA,UAAU,EAAEuE,SAAS,CAACvE,UAJjB;AAKLwK,YAAAA,QAAQ,EAAEjG,SAAS,CAACiG,QALf;AAMLC,YAAAA,KAAK,EAAElG,SAAS,CAACkG,KANZ;AAOL/L,YAAAA,IAAI,EAAE6F,SAAS,CAAC7F,IAPX;AAQLnD,YAAAA,IAAI,EAAEgJ,SAAS,CAAChJ;AARX,WAAP;AAUD,SAZM;AAFkC,OAAf,CAAD,CAA3B;AAgBA,YAAMmP,cAAc,GAAG7W,IAAI,CAACqL,IAAI,CAACC,SAAL,CAAe;AACzCrJ,QAAAA,iBADyC;AAEzCwU,QAAAA;AAFyC,OAAf,CAAD,CAA3B;AAIA,YAAMK,QAAQ,aAAMJ,cAAN,cAAwBG,cAAxB,CAAd;AACAd,MAAAA,UAAU,CAACe,QAAD,EAAWhB,WAAX,CAAV;;AAEA,UAAI5T,YAAY,CAACkD,GAAb,CAAiB0R,QAAjB,CAAJ,EAAgC;AAC9B,YAAI/U,WAAJ,EAAiB;AACfgV,UAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EACYd,aAAa,CAACtR,IAD1B,EACgCwO,UADhC;AAED;;AACD,eAAOlR,YAAY,CAAC0Q,GAAb,CAAiBkE,QAAjB,CAAP;AACD;;AAED,YAAMG,aAAa,GAAG5S,IAAI,CAACN,cAAL,IACpB9C,KAAK,CAAC+B,QAAN,CAAeqB,IAAI,CAACN,cAApB,EAAoC+S,QAAQ,GAAG,QAA/C,CADF;AAGA,YAAMI,qBAAqB,GAAGD,aAAa,IACzChW,KAAK,CAAC+B,QAAN,CAAeqB,IAAI,CAACN,cAApB,EAAoC2S,cAAc,GAAG,UAArD,CADF,CA9D0C,CAiE1C;AACA;AACA;;AACA,eAASS,wBAAT,CAAkC7H,SAAlC,EAA6C;AAC3CA,QAAAA,SAAS,CAACpM,OAAV,CAAmBkU,CAAD,IAAO;AACvBA,UAAAA,CAAC,CAAC5U,IAAF,GAAS0K,MAAM,CAACC,IAAP,CAAYiK,CAAC,CAAC5U,IAAd,EAAoB,MAApB,CAAT;AACD,SAFD;AAGD;;AAED,UAAIyU,aAAJ,EAAmB;AACjB,YAAII,UAAU,GAAG,IAAjB;;AACA,YAAI;AACFA,UAAAA,UAAU,GAAGpW,KAAK,CAACqW,cAAN,CAAqBL,aAArB,CAAb;AACD,SAFD,CAEE,OAAOzT,CAAP,EAAU;AACV;AACA,cAAI,EAAEA,CAAC,YAAY+T,WAAf,CAAJ,EAAiC;AAC/B,kBAAM/T,CAAN;AACD;AACF;;AACD,YAAI6T,UAAU,IAAIA,UAAU,YAAYG,KAAxC,EAA+C;AAC7C;AACAL,UAAAA,wBAAwB,CAACE,UAAD,CAAxB;;AACA,cAAItV,WAAJ,EAAiB;AACfgV,YAAAA,OAAO,CAACC,GAAR,CAAY,wBAAZ,EAAsCd,aAAa,CAACtR,IAApD,EAA0DwO,UAA1D;AACD,WAL4C,CAM7C;AACA;;;AACAlR,UAAAA,YAAY,CAACqQ,GAAb,CAAiBuE,QAAjB,EAA2BO,UAA3B;AACA,iBAAOA,UAAP;AACD;AACF;;AAED,UAAItV,WAAJ,EAAiB;AACfgV,QAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCd,aAAa,CAACtR,IAAhD,EAAsDwO,UAAtD;AACD,OAnGyC,CAqG1C;AACA;;;AACA,UAAIqE,QAAQ,GAAG,IAAf;AACA,UAAIC,WAAW,GAAG,IAAlB;AACA5W,MAAAA,YAAY,CAAC6E,QAAb,CAAsB,SAAtB,EAAiC,MAAM;AACrC+R,QAAAA,WAAW,GAAGvW,MAAM,CAACwW,QAAP,CAAgB7B,WAAhB,EAA6BI,aAA7B,CAAd;;AACA,YAAIpV,YAAY,CAACgE,cAAb,EAAJ,EAAmC;AACjC2S,UAAAA,QAAQ,GAAG,KAAX;AACD;AACF,OALD,EAzG0C,CA+G1C;;AACA,YAAMG,GAAG,GAAGF,WAAW,CAACjT,GAAZ,CAAiBgO,IAAD,IAAU;AACpC,cAAMoF,EAAE,GAAI,OAAOpF,IAAI,CAAChQ,SAAZ,KAA0B,QAA3B,GACP4I,IAAI,CAACwD,KAAL,CAAW4D,IAAI,CAAChQ,SAAhB,CADO,GACsBgQ,IAAI,CAAChQ,SADtC;AAEA,eAAO;AACL0I,UAAAA,IAAI,EAAE,IADD;AAEL;AACA;AACA;AACA3I,UAAAA,IAAI,EAAEiQ,IAAI,CAACqF,MALN;AAMLlO,UAAAA,IAAI,EAAE6I,IAAI,CAAC7I,IANN;AAOLoD,UAAAA,SAAS,EAAEyF,IAAI,CAACzF,SAPX;AAQLvK,UAAAA,SAAS,EAAEoV;AARN,SAAP;AAUD,OAbW,CAAZ;AAeA,UAAIE,SAAJ;;AACA,UAAIN,QAAQ,IAAIR,aAAhB,EAA+B;AAC7Bc,QAAAA,SAAS,GAAG1M,IAAI,CAACC,SAAL,CAAesM,GAAf,CAAZ;AACD,OAlIyC,CAoI1C;;;AACAT,MAAAA,wBAAwB,CAACS,GAAD,CAAxB;;AAEA,UAAIH,QAAJ,EAAc;AACZvV,QAAAA,YAAY,CAACqQ,GAAb,CAAiBuE,QAAjB,EAA2Bc,GAA3B;;AACA,YAAIX,aAAJ,EAAmB;AACjB;AACA9Q,UAAAA,OAAO,CAAC2C,OAAR,GAAkBsF,IAAlB,CAAuB,MAAM;AAC3B,gBAAI;AACFnN,cAAAA,KAAK,CAAC+W,YAAN,CAAmBd,qBAAnB;AACD,aAFD,SAEU;AACRjW,cAAAA,KAAK,CAACgX,mBAAN,CAA0BhB,aAA1B,EAAyCc,SAAzC;AACD;AACF,WAND;AAOD;AACF;;AAED,aAAOH,GAAP;AACD;;AA7vB6B;;AAgwBhCvW,EAAAA,CAAC,CAAC0D,IAAF,CAAO,CACL,cADK,EAEL,SAFK,CAAP,EAGGmT,MAAM,IAAI;AACX,UAAMC,KAAK,GAAGtY,kBAAkB,CAAC4B,SAAjC;AACA0W,IAAAA,KAAK,CAACD,MAAD,CAAL,GAAgB5W,OAAO,CACrB,wBAAwB4W,MADH,EAErBC,KAAK,CAACD,MAAD,CAFgB,CAAvB;AAID,GATD,E,CAWA;;;AACA7W,EAAAA,CAAC,CAAC0D,IAAF,CAAO,CACL,yBADK,CAAP,EAEGmT,MAAM,IAAI;AACXrY,IAAAA,kBAAkB,CAACqY,MAAD,CAAlB,GAA6B5W,OAAO,CAClC,wBAAwB4W,MADU,EAElCrY,kBAAkB,CAACqY,MAAD,CAFgB,CAApC;AAGD,GAND","sourcesContent":["var archinfo = require('../utils/archinfo');\nvar buildmessage = require('../utils/buildmessage.js');\nvar buildPluginModule = require('./build-plugin.js');\nvar colonConverter = require('../utils/colon-converter.js');\nvar files = require('../fs/files');\nvar compiler = require('./compiler.js');\nvar linker = require('./linker.js');\nvar util = require('util');\nvar _ = require('underscore');\nvar Profile = require('../tool-env/profile').Profile;\nimport assert from \"assert\";\nimport {\n  WatchSet,\n  sha1,\n  readAndWatchFileWithHash,\n} from  '../fs/watch';\nimport LRU from 'lru-cache';\nimport {sourceMapLength} from '../utils/utils.js';\nimport {Console} from '../console/console.js';\nimport ImportScanner from './import-scanner';\nimport {cssToCommonJS} from \"./css-modules\";\nimport Resolver from \"./resolver\";\nimport {\n  optimisticStatOrNull,\n  optimisticReadJsonOrNull,\n  optimisticHashOrNull,\n} from \"../fs/optimistic\";\n\nimport { isTestFilePath } from './test-files.js';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n// This file implements the new compiler plugins added in Meteor 1.2, which are\n// registered with the Plugin.registerCompiler API.\n//\n// Unlike legacy source handlers (Plugin.registerSourceHandler), compilers run\n// in the context of an entire app. That is to say, they don't run when you run\n// `meteor publish`; whenever they run, they have access to all the files of\n// their type across all packages as well as the app. This allows them to\n// implement cross-file and cross-package inclusion, or config files in the app\n// that affect how packages are processed, among other possibilities.\n//\n// Compilers can specify which extensions or filenames they process. They only\n// process files in packages (or the app) that directly use the plugin's package\n// (or that use it indirectly via the \"imply\" directive); just because compiler\n// plugins act on multiple packages at a time doesn't mean they automatically\n// act on all packages in your app.\n//\n// The CompilerPluginProcessor is the main entry point to this file; it is used\n// by the bundler to run all plugins on a target. It doesn't have much\n// interesting state and perhaps could have just been a function.\n//\n// It receives an ordered list of unibuilds (essentially, packages) from the\n// bundler. It turns them into an ordered list of PackageSourceBatch objects,\n// each of which represents the source files in a single package. Each\n// PackageSourceBatch consists of an ordered list of ResourceSlots representing\n// the resources in that package. The idea here is that, because Meteor executes\n// all JS files in the order produced by the bundler, we need to make sure to\n// maintain the order of packages from the bundler and the order of source files\n// within a package. Each ResourceSlot represents a resource (either a 'source'\n// resource which will be processed by a compiler plugin, or something else like\n// a static asset or some JavaScript produced by a legacy source handler), and\n// when the compiler plugin calls something like `inputFile.addJavaScript` on a\n// file, we replace that source file with the resource produced by the plugin.\n//\n// InputFile is a wrapper around ResourceSlot that is the object presented to\n// the compiler in the plugin. It is part of the documented registerCompiler\n// API.\n\n// Cache the (slightly post-processed) results of linker.fullLink.\nconst CACHE_SIZE = process.env.METEOR_LINKER_CACHE_SIZE || 1024*1024*100;\nconst CACHE_DEBUG = !! process.env.METEOR_TEST_PRINT_LINKER_CACHE_DEBUG;\nconst LINKER_CACHE_SALT = 24; // Increment this number to force relinking.\nconst LINKER_CACHE = new LRU({\n  max: CACHE_SIZE,\n  // Cache is measured in bytes. We don't care about servePath.\n  // Key is JSONification of all options plus all hashes.\n  length: function (files) {\n    return files.reduce((soFar, current) => {\n      return soFar + current.data.length + sourceMapLength(current.sourceMap);\n    }, 0);\n  }\n});\n\nconst serverLibPackages = {\n  // Make sure fibers is defined, if nothing else.\n  fibers: true\n};\n\nfunction populateServerLibPackages() {\n  const devBundlePath = files.getDevBundle();\n  const nodeModulesPath = files.pathJoin(\n    devBundlePath, \"server-lib\", \"node_modules\"\n  );\n\n  files.readdir(nodeModulesPath).forEach(packageName => {\n    const packagePath = files.pathJoin(nodeModulesPath, packageName);\n    const packageStat = files.statOrNull(packagePath);\n    if (packageStat && packageStat.isDirectory()) {\n      serverLibPackages[packageName] = true;\n    }\n  });\n}\n\ntry {\n  populateServerLibPackages();\n} catch (e) {\n  // At least we tried!\n}\n\nexport class CompilerPluginProcessor {\n  constructor({\n    unibuilds,\n    arch,\n    sourceRoot,\n    buildMode,\n    isopackCache,\n    linkerCacheDir,\n    scannerCacheDir,\n    minifyCssResource,\n  }) {\n    Object.assign(this, {\n      unibuilds,\n      arch,\n      sourceRoot,\n      buildMode,\n      isopackCache,\n      linkerCacheDir,\n      scannerCacheDir,\n      minifyCssResource,\n    });\n\n    if (linkerCacheDir) {\n      files.mkdir_p(linkerCacheDir);\n    }\n\n    if (scannerCacheDir) {\n      files.mkdir_p(scannerCacheDir);\n    }\n  }\n\n  runCompilerPlugins() {\n    const self = this;\n    buildmessage.assertInJob();\n\n    // plugin id -> {sourceProcessor, resourceSlots}\n    var sourceProcessorsWithSlots = {};\n\n    var sourceBatches = _.map(self.unibuilds, function (unibuild) {\n      const { pkg: { name }, arch } = unibuild;\n      const sourceRoot = name\n        && self.isopackCache.getSourceRoot(name, arch)\n        || self.sourceRoot;\n\n      return new PackageSourceBatch(unibuild, self, {\n        sourceRoot,\n        linkerCacheDir: self.linkerCacheDir,\n        scannerCacheDir: self.scannerCacheDir,\n      });\n    });\n\n    // If we failed to match sources with processors, we're done.\n    if (buildmessage.jobHasMessages()) {\n      return [];\n    }\n\n    // Find out which files go with which CompilerPlugins.\n    _.each(sourceBatches, function (sourceBatch) {\n      _.each(sourceBatch.resourceSlots, function (resourceSlot) {\n        var sourceProcessor = resourceSlot.sourceProcessor;\n        // Skip non-sources.\n        if (! sourceProcessor) {\n          return;\n        }\n\n        if (! _.has(sourceProcessorsWithSlots, sourceProcessor.id)) {\n          sourceProcessorsWithSlots[sourceProcessor.id] = {\n            sourceProcessor: sourceProcessor,\n            resourceSlots: []\n          };\n        }\n        sourceProcessorsWithSlots[sourceProcessor.id].resourceSlots.push(\n          resourceSlot);\n      });\n    });\n\n    // Now actually run the handlers.\n    _.each(sourceProcessorsWithSlots, function (data, id) {\n      var sourceProcessor = data.sourceProcessor;\n      var resourceSlots = data.resourceSlots;\n\n      var jobTitle = [\n        \"processing files with \",\n        sourceProcessor.isopack.name,\n        \" (for target \", self.arch, \")\"\n      ].join('');\n\n      Profile.time(\"plugin \"+sourceProcessor.isopack.name, () => {\n        buildmessage.enterJob({\n          title: jobTitle\n        }, function () {\n          var inputFiles = _.map(resourceSlots, function (resourceSlot) {\n            return new InputFile(resourceSlot);\n          });\n\n          const markedMethod = buildmessage.markBoundary(\n            sourceProcessor.userPlugin.processFilesForTarget,\n            sourceProcessor.userPlugin\n          );\n\n          try {\n            Promise.await(markedMethod(inputFiles));\n          } catch (e) {\n            buildmessage.exception(e);\n          }\n        });\n      });\n    });\n\n    return sourceBatches;\n  }\n}\n\nclass InputFile extends buildPluginModule.InputFile {\n  constructor(resourceSlot) {\n    super();\n    // We use underscored attributes here because this is user-visible\n    // code and we don't want users to be accessing anything that we don't\n    // document.\n    this._resourceSlot = resourceSlot;\n\n    // Map from absolute paths to stat objects (or null if the file does\n    // not exist).\n    this._statCache = Object.create(null);\n\n    // Map from control file names (e.g. package.json, .babelrc) to\n    // absolute paths, or null to indicate absence.\n    this._controlFileCache = Object.create(null);\n\n    // Map from imported module identifier strings (possibly relative) to\n    // fully require.resolve'd module identifiers.\n    this._resolveCache = Object.create(null);\n\n    // Communicate to compiler plugins that methods like addJavaScript\n    // accept a lazy finalizer function as a second argument, so that\n    // compilation can be avoided until/unless absolutely necessary.\n    this.supportsLazyCompilation = true;\n  }\n\n  getContentsAsBuffer() {\n    var self = this;\n    return self._resourceSlot.inputResource.data;\n  }\n\n  getPackageName() {\n    var self = this;\n    return self._resourceSlot.packageSourceBatch.unibuild.pkg.name;\n  }\n\n  isPackageFile() {\n    return !! this.getPackageName();\n  }\n\n  isApplicationFile() {\n    return ! this.getPackageName();\n  }\n\n  getSourceRoot(tolerant = false) {\n    const sourceRoot = this._resourceSlot.packageSourceBatch.sourceRoot;\n\n    if (_.isString(sourceRoot)) {\n      return sourceRoot;\n    }\n\n    if (! tolerant) {\n      const name = this.getPackageName();\n      throw new Error(\n        \"Unknown source root for \" + (\n          name ? \"package \" + name : \"app\"));\n    }\n\n    return null;\n  }\n\n  getPathInPackage() {\n    var self = this;\n    return self._resourceSlot.inputResource.path;\n  }\n\n  getFileOptions() {\n    // XXX fileOptions only exists on some resources (of type \"source\"). The JS\n    // resources might not have this property.\n    const { inputResource } = this._resourceSlot;\n    return inputResource.fileOptions || (inputResource.fileOptions = {});\n  }\n\n  hmrAvailable() {\n    const fileOptions = this.getFileOptions() || {};\n\n    return this._resourceSlot.hmrAvailable() && !fileOptions.bare;\n  }\n\n  readAndWatchFileWithHash(path) {\n    const sourceBatch = this._resourceSlot.packageSourceBatch;\n    return readAndWatchFileWithHash(\n      sourceBatch.unibuild.watchSet,\n      files.convertToOSPath(path),\n    );\n  }\n\n  readAndWatchFile(path) {\n    return this.readAndWatchFileWithHash(path).contents;\n  }\n\n  _stat(absPath) {\n    return _.has(this._statCache, absPath)\n      ? this._statCache[absPath]\n      : this._statCache[absPath] = optimisticStatOrNull(absPath);\n  }\n\n  // Search ancestor directories for control files (e.g. package.json,\n  // .babelrc), and return the absolute path of the first one found, or\n  // null if the search failed.\n  findControlFile(basename) {\n    let absPath = this._controlFileCache[basename];\n    if (typeof absPath === \"string\") {\n      return absPath;\n    }\n\n    const sourceRoot = this.getSourceRoot(true);\n    if (! _.isString(sourceRoot)) {\n      return this._controlFileCache[basename] = null;\n    }\n\n    let dir = files.pathDirname(\n      files.pathJoin(sourceRoot, this.getPathInPackage()));\n\n    while (true) {\n      absPath = files.pathJoin(dir, basename);\n\n      const stat = this._stat(absPath);\n      if (stat && stat.isFile()) {\n        return this._controlFileCache[basename] = absPath;\n      }\n\n      if (files.pathBasename(dir) === \"node_modules\") {\n        // The search for control files should not escape node_modules.\n        return this._controlFileCache[basename] = null;\n      }\n\n      if (dir === sourceRoot) break;\n      let parentDir = files.pathDirname(dir);\n      if (parentDir === dir) break;\n      dir = parentDir;\n    }\n\n    return this._controlFileCache[basename] = null;\n  }\n\n  _resolveCacheLookup(id, parentPath) {\n    const byId = this._resolveCache[id];\n    return byId && byId[parentPath];\n  }\n\n  _resolveCacheStore(id, parentPath, resolved) {\n    let byId = this._resolveCache[id];\n    if (! byId) {\n      byId = this._resolveCache[id] = Object.create(null);\n    }\n    return byId[parentPath] = resolved;\n  }\n\n  resolve(id, parentPath) {\n    parentPath = parentPath || files.pathJoin(\n      this.getSourceRoot(),\n      this.getPathInPackage()\n    );\n\n    const resId = this._resolveCacheLookup(id, parentPath);\n    if (resId) {\n      return resId;\n    }\n\n    const parentStat = optimisticStatOrNull(parentPath);\n    if (! parentStat ||\n        ! parentStat.isFile()) {\n      throw new Error(\"Not a file: \" + parentPath);\n    }\n\n    const batch = this._resourceSlot.packageSourceBatch;\n    const resolver = batch.getResolver({\n      // Make sure we use a server architecture when resolving, so that we\n      // don't accidentally use package.json \"browser\" fields.\n      // https://github.com/meteor/meteor/issues/9870\n      targetArch: archinfo.host(),\n    });\n    const resolved = resolver.resolve(id, parentPath);\n\n    if (resolved === \"missing\") {\n      const error = new Error(\"Cannot find module '\" + id + \"'\");\n      error.code = \"MODULE_NOT_FOUND\";\n      throw error;\n    }\n\n    return this._resolveCacheStore(id, parentPath, resolved.id);\n  }\n\n  require(id, parentPath) {\n    return this._require(id, parentPath);\n  }\n\n  // This private helper method exists to prevent ambiguity between the\n  // module-global `require` function and the method name.\n  _require(id, parentPath) {\n    return require(this.resolve(id, parentPath));\n  }\n\n  getArch() {\n    return this._resourceSlot.packageSourceBatch.processor.arch;\n  }\n\n  getSourceHash() {\n    return this._resourceSlot.inputResource.hash;\n  }\n\n  /**\n   * @summary Returns the extension that matched the compiler plugin.\n   * The longest prefix is preferred.\n   * @returns {String}\n   */\n  getExtension() {\n    return this._resourceSlot.inputResource.extension;\n  }\n\n  /**\n   * @summary Returns a list of symbols declared as exports in this target. The\n   * result of `api.export('symbol')` calls in target's control file such as\n   * package.js.\n   * @memberof InputFile\n   * @returns {String[]}\n   */\n  getDeclaredExports() {\n    var self = this;\n    return self._resourceSlot.packageSourceBatch.unibuild.declaredExports;\n  }\n\n  /**\n   * @summary Returns a relative path that can be used to form error messages or\n   * other display properties. Can be used as an input to a source map.\n   * @memberof InputFile\n   * @returns {String}\n   */\n  getDisplayPath() {\n    var self = this;\n    return self._resourceSlot.packageSourceBatch.unibuild.pkg._getServePath(self.getPathInPackage());\n  }\n\n  /**\n   * @summary Web targets only. Add a stylesheet to the document. Not available\n   * for linter build plugins.\n   * @param {Object} options\n   * @param {String} options.path The requested path for the added CSS, may not\n   * be satisfied if there are path conflicts.\n   * @param {String} options.data The content of the stylesheet that should be\n   * added.\n   * @param {String|Object} options.sourceMap A stringified JSON\n   * sourcemap, in case the stylesheet was generated from a different\n   * file.\n   * @param {Function} lazyFinalizer Optional function that can be called\n   *                   to obtain any remaining options that may be\n   *                   expensive to compute, and thus should only be\n   *                   computed if/when we are sure this CSS will be used\n   *                   by the application.\n   * @memberOf InputFile\n   * @instance\n   */\n  addStylesheet(options, lazyFinalizer) {\n    this._resourceSlot.addStylesheet(options, lazyFinalizer);\n  }\n\n  /**\n   * @summary Add JavaScript code. The code added will only see the\n   * namespaces imported by this package as runtime dependencies using\n   * ['api.use'](#PackageAPI-use). If the file being compiled was added\n   * with the bare flag, the resulting JavaScript won't be wrapped in a\n   * closure.\n   * @param {Object} options\n   * @param {String} options.path The path at which the JavaScript file\n   * should be inserted, may not be honored in case of path conflicts.\n   * @param {String} options.data The code to be added.\n   * @param {String|Object} options.sourceMap A stringified JSON\n   * sourcemap, in case the JavaScript file was generated from a\n   * different file.\n   * @param {Function} lazyFinalizer Optional function that can be called\n   *                   to obtain any remaining options that may be\n   *                   expensive to compute, and thus should only be\n   *                   computed if/when we are sure this JavaScript will\n   *                   be used by the application.\n   * @memberOf InputFile\n   * @instance\n   */\n  addJavaScript(options, lazyFinalizer) {\n    this._resourceSlot.addJavaScript(options, lazyFinalizer);\n  }\n\n  /**\n   * @summary Add a file to serve as-is to the browser or to include on\n   * the browser, depending on the target. On the web, it will be served\n   * at the exact path requested. For server targets, it can be retrieved\n   * using `Assets.getText` or `Assets.getBinary`.\n   * @param {Object} options\n   * @param {String} options.path The path at which to serve the asset.\n   * @param {Buffer|String} options.data The data that should be placed in the\n   * file.\n   * @param {String} [options.hash] Optionally, supply a hash for the output\n   * file.\n   * @param {Function} lazyFinalizer Optional function that can be called\n   *                   to obtain any remaining options that may be\n   *                   expensive to compute, and thus should only be\n   *                   computed if/when we are sure this asset will be\n   *                   used by the application.\n   * @memberOf InputFile\n   * @instance\n   */\n  addAsset(options, lazyFinalizer) {\n    this._resourceSlot.addAsset(options, lazyFinalizer);\n  }\n\n  /**\n   * @summary Works in web targets only. Add markup to the `head` or `body`\n   * section of the document.\n   * @param  {Object} options\n   * @param {String} options.section Which section of the document should\n   * be appended to. Can only be \"head\" or \"body\".\n   * @param {String} options.data The content to append.\n   * @param {Function} lazyFinalizer Optional function that can be called\n   *                   to obtain any remaining options that may be\n   *                   expensive to compute, and thus should only be\n   *                   computed if/when we are sure this HTML will be used\n   *                   by the application.\n   * @memberOf InputFile\n   * @instance\n   */\n  addHtml(options, lazyFinalizer) {\n    if (typeof lazyFinalizer === \"function\") {\n      // For now, just call the lazyFinalizer function immediately. Since\n      // HTML is not compiled, this immediate invocation is probably\n      // permanently appropriate for addHtml, whereas methods like\n      // addJavaScript benefit from waiting to call lazyFinalizer.\n      Object.assign(options, Promise.await(lazyFinalizer()));\n    }\n\n    this._resourceSlot.addHtml(options);\n  }\n\n  _reportError(message, info) {\n    this._resourceSlot.addError(message, info);\n    if (! this.getFileOptions().lazy) {\n      super._reportError(message, info);\n    }\n  }\n}\n\nclass ResourceSlot {\n  constructor(unibuildResourceInfo,\n              sourceProcessor,\n              packageSourceBatch) {\n    const self = this;\n    // XXX ideally this should be an classy object, but it's not.\n    self.inputResource = unibuildResourceInfo;\n    // Everything but JS.\n    self.outputResources = [];\n    // JS, which gets linked together at the end.\n    self.jsOutputResources = [];\n    // Errors encountered while processing this resource.\n    self.errors = [];\n    self.sourceProcessor = sourceProcessor;\n    self.packageSourceBatch = packageSourceBatch;\n\n    if (self.inputResource.type === \"source\") {\n      if (sourceProcessor) {\n        // If we have a sourceProcessor, it will handle the adding of the\n        // final processed JavaScript.\n      } else if (self.inputResource.extension === \"js\") {\n        self._addDirectlyToJsOutputResources();\n      }\n    } else {\n      if (sourceProcessor) {\n        throw Error(\"sourceProcessor for non-source? \" +\n                    JSON.stringify(unibuildResourceInfo));\n      }\n      // Any resource that isn't handled by compiler plugins just gets passed\n      // through.\n      if (self.inputResource.type === \"js\") {\n        self._addDirectlyToJsOutputResources();\n      } else {\n        self.outputResources.push(self.inputResource);\n      }\n    }\n  }\n\n  // Add this resource directly to jsOutputResources without modifying the\n  // original data. #HardcodeJs\n  _addDirectlyToJsOutputResources() {\n    this.addJavaScript({\n      ...(this.inputResource.fileOptions || {}),\n      path: this.inputResource.path,\n      data: this.inputResource.data,\n    });\n  }\n\n  _getOption(name, options) {\n    if (options && _.has(options, name)) {\n      return options[name];\n    }\n    const fileOptions = this.inputResource.fileOptions;\n    return fileOptions && fileOptions[name];\n  }\n\n  _isLazy(options, isJavaScript) {\n    let lazy = this._getOption(\"lazy\", options);\n\n    if (typeof lazy === \"boolean\") {\n      return lazy;\n    }\n\n    const isApp = ! this.packageSourceBatch.unibuild.pkg.name;\n    if (! isApp) {\n      // Meteor package files must be explicitly added by api.addFiles or\n      // api.mainModule, and are implicitly eager unless specified\n      // otherwise via this.inputResource.fileOptions.lazy, which we\n      // already checked above.\n      return false;\n    }\n\n    // The rest of this method assumes we're considering a resource in an\n    // application rather than a Meteor package.\n\n    if (! this.packageSourceBatch.useMeteorInstall) {\n      // If this application is somehow still not using the module system,\n      // then everything is eagerly loaded.\n      return false;\n    }\n\n    const {\n      isTest = false,\n      isAppTest = false,\n    } = global.testCommandMetadata || {};\n\n    const runningTests = isTest || isAppTest;\n\n    if (isJavaScript) {\n      if (runningTests) {\n        const testModule = this._getOption(\"testModule\", options);\n\n        // If we set fileOptions.testModule = true in _inferFileOptions,\n        // then consider this module an eager entry point for tests. If we\n        // set it to false (rather than leaving it undefined), that means\n        // a meteor.testModule was configured in package.json, and this\n        // test module was not it. In that case, we fall through to the\n        // mainModule check, ignoring isTestFilePath, because we can\n        // assume this is not an eager test module. If testModule was not\n        // set to a boolean, then isTestFilePath should determine if this\n        // is an eager test module.\n        const isEagerTestModule = typeof testModule === \"boolean\"\n          ? testModule\n          : isTestFilePath(this.inputResource.path);\n\n        if (isEagerTestModule) {\n          // If we know it's eager, then it isn't lazy.\n          return false;\n        }\n\n        if (! isAppTest) {\n          // If running `meteor test` without the --full-app option, then\n          // any JS modules that are not eager test modules must be lazy.\n          return true;\n        }\n      }\n\n      // PackageSource#_inferFileOptions (in package-source.js) sets the\n      // mainModule option to false to indicate that a meteor.mainModule\n      // was configured for this architecture, but this module was not it.\n      // It's important to wait until this point (ResourceSlot#_isLazy) to\n      // make the final call, because we can finally tell whether the\n      // output resource is JavaScript or not (non-JS resources are not\n      // affected by the meteor.mainModule option).\n      const mainModule = this._getOption(\"mainModule\", options);\n      if (typeof mainModule === \"boolean\") {\n        return ! mainModule;\n      }\n    }\n\n    // In other words, the imports directory remains relevant for non-JS\n    // resources, and for JS resources in the absence of an explicit\n    // meteor.mainModule configuration in package.json.\n    const splitPath = this.inputResource.path.split(files.pathSep);\n    const isInImports = splitPath.indexOf(\"imports\") >= 0;\n    return isInImports;\n  }\n\n  _isBare(options) {\n    return !! (\n      this._getOption(\"bare\", options) ||\n      // XXX eventually get rid of backwards-compatible \"raw\" name\n      // XXX COMPAT WITH 0.6.4\n      this._getOption(\"raw\", options)\n    );\n  }\n\n  hmrAvailable() {\n    return this.packageSourceBatch.hmrAvailable;\n  }\n\n  addStylesheet(options, lazyFinalizer) {\n    if (! this.sourceProcessor) {\n      throw Error(\"addStylesheet on non-source ResourceSlot?\");\n    }\n\n    // In contrast to addJavaScript, CSS resources passed to addStylesheet\n    // default to being eager (non-lazy).\n    options.lazy = this._isLazy(options, false);\n\n    const cssResource = new CssOutputResource({\n      resourceSlot: this,\n      options,\n      lazyFinalizer,\n    });\n\n    if (this.packageSourceBatch.useMeteorInstall &&\n        cssResource.lazy) {\n      // If the current packageSourceBatch supports modules, and this CSS\n      // file is lazy, add it as a lazy JS module instead of adding it\n      // unconditionally as a CSS resource, so that it can be imported\n      // when needed.\n      const jsResource = this.addJavaScript(options, () => {\n        const result = {};\n\n        let css = this.packageSourceBatch.processor\n          .minifyCssResource(cssResource);\n\n        if (! css && typeof css !== \"string\") {\n          // The minifier didn't do anything, so we should use the\n          // original contents of cssResource.data.\n          css = cssResource.data.toString(\"utf8\");\n\n          if (cssResource.sourceMap) {\n            // Add the source map as an asset, and append a\n            // sourceMappingURL comment to the end of the CSS text that\n            // will be dynamically inserted when/if this JS module is\n            // evaluated at runtime. Note that this only happens when the\n            // minifier did not modify the CSS, and thus does not happen\n            // when we are building for production.\n            const { servePath } = this.addAsset({\n              path: jsResource.targetPath + \".map.json\",\n              data: JSON.stringify(cssResource.sourceMap)\n            });\n            css += \"\\n//# sourceMappingURL=\" + servePath + \"\\n\";\n          }\n        }\n\n        result.data = Buffer.from(cssToCommonJS(css), \"utf8\");\n\n        // The JavaScript module that dynamically loads this CSS should\n        // not inherit the source map of the original CSS output.\n        result.sourceMap = null;\n\n        return result;\n      });\n\n    } else {\n      // Eager CSS is added unconditionally to a combined <style> tag at\n      // the beginning of the <head>. If the corresponding module ever\n      // gets imported, its module.exports object should be an empty stub,\n      // rather than a <style> node added dynamically to the <head>.\n      this.addJavaScript({\n        ...options,\n        // As above, the JavaScript module that dynamically loads this CSS\n        // should not inherit the source map of the original CSS output.\n        sourceMap: null,\n        data: Buffer.from(\n          \"// These styles have already been applied to the document.\\n\",\n          \"utf8\"),\n        lazy: true,\n        // If a compiler plugin calls addJavaScript with the same\n        // sourcePath, that code should take precedence over this empty\n        // stub, so setting .implicit marks the resource as disposable.\n      }).implicit = true;\n\n      if (! cssResource.lazy &&\n          ! Buffer.isBuffer(cssResource.data)) {\n        // If there was an error processing this file, cssResource.data\n        // will not be a Buffer, and accessing cssResource.data here\n        // should cause the error to be reported via inputFile.error.\n        return;\n      }\n\n      this.outputResources.push(cssResource);\n    }\n  }\n\n  addJavaScript(options, lazyFinalizer) {\n    // #HardcodeJs this gets called by constructor in the \"js\" case\n    if (! this.sourceProcessor &&\n        this.inputResource.extension !== \"js\" &&\n        this.inputResource.type !== \"js\") {\n      throw Error(\"addJavaScript on non-source ResourceSlot?\");\n    }\n\n    const resource = new JsOutputResource({\n      resourceSlot: this,\n      options,\n      lazyFinalizer,\n    });\n\n    this.jsOutputResources.push(resource);\n\n    return resource;\n  }\n\n  addAsset(options, lazyFinalizer) {\n    if (! this.sourceProcessor) {\n      throw Error(\"addAsset on non-source ResourceSlot?\");\n    }\n\n    const resource = new AssetOutputResource({\n      resourceSlot: this,\n      options,\n      lazyFinalizer,\n    });\n\n    this.outputResources.push(resource);\n\n    return resource;\n  }\n\n  addHtml(options) {\n    const self = this;\n    const unibuild = self.packageSourceBatch.unibuild;\n\n    if (! archinfo.matches(unibuild.arch, \"web\")) {\n      throw new Error(\"Document sections can only be emitted to \" +\n                      \"web targets: \" + self.inputResource.path);\n    }\n    if (options.section !== \"head\" && options.section !== \"body\") {\n      throw new Error(\"'section' must be 'head' or 'body': \" +\n                      self.inputResource.path);\n    }\n    if (typeof options.data !== \"string\") {\n      throw new Error(\"'data' option to appendDocument must be a string: \" +\n                      self.inputResource.path);\n    }\n\n    self.outputResources.push({\n      type: options.section,\n      data: Buffer.from(files.convertToStandardLineEndings(options.data), 'utf8'),\n      lazy: self._isLazy(options, false),\n    });\n  }\n\n  addError(message, info) {\n    // If this file is ever actually imported, only then will we report\n    // the error.\n    this.errors.push({ message, info });\n  }\n}\n\nclass OutputResource {\n  constructor({\n    type,\n    resourceSlot,\n    options = Object.create(null),\n    lazyFinalizer = null,\n  }) {\n    this._lazyFinalizer = lazyFinalizer;\n    this._initialOptions = options;\n    this._finalizerPromise = null;\n    // Share the errors array of the resourceSlot.\n    this._errors = resourceSlot.errors;\n\n    let sourcePath = resourceSlot.inputResource.path;\n    if (_.has(options, \"sourcePath\") &&\n        typeof options.sourcePath === \"string\") {\n      sourcePath = options.sourcePath;\n    }\n\n    const targetPath = options.path || sourcePath;\n    const servePath = targetPath\n      ? resourceSlot.packageSourceBatch.unibuild.pkg._getServePath(targetPath)\n      : resourceSlot.inputResource.servePath;\n\n    Object.assign(this, {\n      type,\n      lazy: resourceSlot._isLazy(options, true),\n      bare: resourceSlot._isBare(options),\n      mainModule: !! resourceSlot._getOption(\"mainModule\", options),\n      sourcePath,\n      targetPath,\n      servePath,\n      // Remember the source hash so that changes to the source that\n      // disappear after compilation can still contribute to the hash.\n      _inputHash: resourceSlot.inputResource.hash,\n    });\n  }\n\n  finalize() {\n    if (this._finalizerPromise) {\n      this._finalizerPromise.await();\n    } else if (this._lazyFinalizer) {\n      const finalize = this._lazyFinalizer;\n      this._lazyFinalizer = null;\n      (this._finalizerPromise =\n       // It's important to initialize this._finalizerPromise to the new\n       // Promise before calling finalize(), so there's no possibility of\n       // finalize() triggering code that reenters this function before we\n       // have the final version of this._finalizerPromise. If this code\n       // used `new Promise(resolve => resolve(finalize()))` instead of\n       // `Promise.resolve().then(finalize)`, the finalize() call would\n       // begin before this._finalizerPromise was fully initialized.\n       Promise.resolve().then(finalize).then(result => {\n         if (result) {\n           Object.assign(this._initialOptions, result);\n         } else if (this._errors.length === 0) {\n           // In case the finalize() call failed without reporting any\n           // errors, create at least one generic error that can be\n           // reported when reportPendingErrors is called.\n           const error = new Error(\"lazyFinalizer failed\");\n           error.info = { resource: this, finalize }\n           this._errors.push(error);\n         }\n         // The this._finalizerPromise object only survives for the\n         // duration of the initial finalization.\n         this._finalizerPromise = null;\n       })).await();\n    }\n  }\n\n  hasPendingErrors() {\n    this.finalize();\n    return this._errors.length > 0;\n  }\n\n  reportPendingErrors() {\n    if (this.hasPendingErrors()) {\n      const firstError = this._errors[0];\n      buildmessage.error(\n        firstError.message,\n        firstError.info\n      );\n    }\n    return this._errors.length;\n  }\n\n  get data() { return this._get(\"data\"); }\n  set data(value) { return this._set(\"data\", value); }\n\n  get hash() { return this._get(\"hash\"); }\n  set hash(value) { return this._set(\"hash\", value); }\n\n  get sourceMap() { return this._get(\"sourceMap\"); }\n  set sourceMap(value) { return this._set(\"sourceMap\", value); }\n\n  // Method for getting properties that may be computed lazily, or that\n  // require some one-time post-processing.\n  _get(name) {\n    if (hasOwn.call(this, name)) {\n      return this[name];\n    }\n\n    if (this.hasPendingErrors()) {\n      // If you're considering using this resource, you should call\n      // hasPendingErrors or reportPendingErrors to find out if it's safe\n      // to access computed properties like .data, .hash, or .sourceMap.\n      // If you get here without checking for errors first, those errors\n      // will be fatal.\n      throw this._errors[0];\n    }\n\n    switch (name) {\n    case \"data\":\n      let { data = null } = this._initialOptions;\n      if (typeof data === \"string\") {\n        data = Buffer.from(data, \"utf8\");\n      }\n      return this._set(\"data\", data);\n\n    case \"hash\": {\n      const hashes = [];\n\n      if (typeof this._inputHash === \"string\") {\n        hashes.push(this._inputHash);\n      }\n\n      hashes.push(sha1(this._get(\"data\")));\n\n      return this._set(\"hash\", sha1(...hashes));\n    }\n\n    case \"sourceMap\":\n      let { sourceMap } = this._initialOptions;\n      if (sourceMap && typeof sourceMap === \"string\") {\n        sourceMap = JSON.parse(sourceMap);\n      }\n      return this._set(\"sourceMap\", sourceMap);\n    }\n\n    if (! hasOwn.call(this._initialOptions, name)) {\n      throw new Error(`Unknown JsOutputResource property: ${name}`);\n    }\n\n    return this[name] = this._initialOptions[name];\n  }\n\n  // This method must be used to set any properties that have a getter\n  // defined above (data, hash, sourceMap).\n  _set(name, value) {\n    Object.defineProperty(this, name, {\n      value,\n      enumerable: true,\n      writable: true,\n      configurable: true,\n    });\n    return value;\n  }\n}\n\nclass JsOutputResource extends OutputResource {\n  constructor(params) {\n    super({ ...params, type: \"js\" });\n  }\n}\n\nclass CssOutputResource extends OutputResource {\n  constructor(params) {\n    super({ ...params, type: \"css\" });\n    this.refreshable = true;\n  }\n}\n\nclass AssetOutputResource extends OutputResource {\n  constructor(params) {\n    super({ ...params, type: \"asset\" });\n    // Asset paths must always be explicitly specified.\n    this.path = this._initialOptions.path;\n    // Eagerness/laziness should never matter for assets.\n    delete this.lazy;\n  }\n}\n\nexport class PackageSourceBatch {\n  constructor(unibuild, processor, {\n    sourceRoot,\n    linkerCacheDir,\n    scannerCacheDir,\n  }) {\n    const self = this;\n    buildmessage.assertInJob();\n\n    self.unibuild = unibuild;\n    self.processor = processor;\n    self.sourceRoot = sourceRoot;\n    self.linkerCacheDir = linkerCacheDir;\n    self.scannerCacheDir = scannerCacheDir;\n    self.importExtensions = [\".js\", \".json\"];\n    self._nodeModulesPaths = null;\n\n    self.resourceSlots = [];\n    unibuild.resources.forEach(resource => {\n      const slot = self.makeResourceSlot(resource);\n      if (slot) {\n        self.resourceSlots.push(slot);\n      }\n    });\n\n    // Compute imports by merging the exports of all of the packages we\n    // use. Note that in the case of conflicting symbols, later packages get\n    // precedence.\n    //\n    // We don't get imports from unordered dependencies (since they\n    // may not be defined yet) or from\n    // weak/debugOnly/prodOnly/testOnly dependencies (because the\n    // meaning of a name shouldn't be affected by the non-local\n    // decision of whether or not an unrelated package in the target\n    // depends on something).\n    self.importedSymbolToPackageName = {}; // map from symbol to supplying package name\n\n    compiler.eachUsedUnibuild({\n      dependencies: self.unibuild.uses,\n      arch: self.processor.arch,\n      isopackCache: self.processor.isopackCache,\n      skipUnordered: true,\n      // don't import symbols from debugOnly, prodOnly and testOnly packages, because\n      // if the package is not linked it will cause a runtime error.\n      // the code must access them with `Package[\"my-package\"].MySymbol`.\n      skipDebugOnly: true,\n      skipProdOnly: true,\n      skipTestOnly: true,\n    }, depUnibuild => {\n      _.each(depUnibuild.declaredExports, function (symbol) {\n        // Slightly hacky implementation of test-only exports.\n        if (! symbol.testOnly || self.unibuild.pkg.isTest) {\n          self.importedSymbolToPackageName[symbol.name] = depUnibuild.pkg.name;\n        }\n      });\n    });\n\n    self.useMeteorInstall =\n      _.isString(self.sourceRoot) &&\n      self.processor.isopackCache.uses(\n        self.unibuild.pkg,\n        \"modules\",\n        self.unibuild.arch\n      );\n\n    const isDevelopment = self.processor.buildMode === 'development';\n    const usesHMRPackage = self.unibuild.pkg.name !== \"hot-module-replacement\" &&\n      self.processor.isopackCache.uses(\n        self.unibuild.pkg,\n        \"hot-module-replacement\",\n        self.unibuild.arch\n      );\n    const supportedArch = self.unibuild.arch === 'web.browser';\n\n    self.hmrAvailable = self.useMeteorInstall && isDevelopment\n      && usesHMRPackage && supportedArch;\n\n    // These are the options that should be passed as the second argument\n    // to meteorInstall when modules in this source batch are installed.\n    self.meteorInstallOptions = self.useMeteorInstall ? {\n      extensions: self.importExtensions,\n    } : null;\n  }\n\n  compileOneJsResource(resource) {\n    const slot = this.makeResourceSlot({\n      type: \"source\",\n      extension: \"js\",\n      // Need { data, path, hash } here, at least.\n      ...resource,\n      fileOptions: {\n        lazy: true,\n        ...resource.fileOptions,\n      }\n    });\n\n    if (slot) {\n      // If the resource was not handled by a source processor, it will be\n      // added directly to slot.jsOutputResources by makeResourceSlot,\n      // meaning we do not need to compile it.\n      if (slot.jsOutputResources.length > 0) {\n        return slot.jsOutputResources\n      }\n\n      const inputFile = new InputFile(slot);\n      inputFile.supportsLazyCompilation = false;\n\n      if (slot.sourceProcessor) {\n        const { userPlugin } = slot.sourceProcessor;\n        if (userPlugin) {\n          const markedMethod = buildmessage.markBoundary(\n            userPlugin.processFilesForTarget,\n            userPlugin\n          );\n          try {\n            Promise.await(markedMethod([inputFile]));\n          } catch (e) {\n            buildmessage.exception(e);\n          }\n        }\n      }\n\n      return slot.jsOutputResources;\n    }\n\n    return [];\n  }\n\n  makeResourceSlot(resource) {\n    let sourceProcessor = null;\n    if (resource.type === \"source\") {\n      var extension = resource.extension;\n      if (extension === null) {\n        const filename = files.pathBasename(resource.path);\n        sourceProcessor = this._getSourceProcessorSet().getByFilename(filename);\n        if (! sourceProcessor) {\n          buildmessage.error(\n            `no plugin found for ${ resource.path } in ` +\n              `${ this.unibuild.pkg.displayName() }; a plugin for ${ filename } ` +\n              `was active when it was published but none is now`);\n          return null;\n          // recover by ignoring\n        }\n      } else {\n        sourceProcessor = this._getSourceProcessorSet().getByExtension(extension);\n        // If resource.extension === 'js', it's ok for there to be no\n        // sourceProcessor, since we #HardcodeJs in ResourceSlot.\n        if (! sourceProcessor && extension !== 'js') {\n          buildmessage.error(\n            `no plugin found for ${ resource.path } in ` +\n              `${ this.unibuild.pkg.displayName() }; a plugin for *.${ extension } ` +\n              `was active when it was published but none is now`);\n          return null;\n          // recover by ignoring\n        }\n\n        this.addImportExtension(extension);\n      }\n    }\n\n    return new ResourceSlot(resource, sourceProcessor, this);\n  }\n\n  addImportExtension(extension) {\n    extension = extension.toLowerCase();\n\n    if (! extension.startsWith(\".\")) {\n      extension = \".\" + extension;\n    }\n\n    if (this.importExtensions.indexOf(extension) < 0) {\n      this.importExtensions.push(extension);\n    }\n  }\n\n  getResolver(options = {}) {\n    return Resolver.getOrCreate({\n      caller: \"PackageSourceBatch#getResolver\",\n      sourceRoot: this.sourceRoot,\n      targetArch: this.processor.arch,\n      extensions: this.importExtensions,\n      nodeModulesPaths: this._getNodeModulesPaths(),\n      ...options,\n    });\n  }\n\n  _getNodeModulesPaths() {\n    if (! this._nodeModulesPaths) {\n      const nmds = this.unibuild.nodeModulesDirectories;\n      this._nodeModulesPaths = [];\n\n      _.each(nmds, (nmd, path) => {\n        if (! nmd.local) {\n          this._nodeModulesPaths.push(\n            files.convertToOSPath(path.replace(/\\/$/g, \"\")));\n        }\n      });\n    }\n\n    return this._nodeModulesPaths;\n  }\n\n  _getSourceProcessorSet() {\n    if (! this._sourceProcessorSet) {\n      buildmessage.assertInJob();\n\n      const isopack = this.unibuild.pkg;\n      const activePluginPackages = compiler.getActivePluginPackages(isopack, {\n        uses: this.unibuild.uses,\n        isopackCache: this.processor.isopackCache\n      });\n\n      this._sourceProcessorSet = new buildPluginModule.SourceProcessorSet(\n        isopack.displayName(), { hardcodeJs: true });\n\n      _.each(activePluginPackages, otherPkg => {\n        otherPkg.ensurePluginsInitialized();\n        this._sourceProcessorSet.merge(otherPkg.sourceProcessors.compiler, {\n          arch: this.processor.arch,\n        });\n      });\n    }\n\n    return this._sourceProcessorSet;\n  }\n\n  // Returns a map from package names to arrays of JS output files.\n  static computeJsOutputFilesMap(sourceBatches) {\n    const map = new Map;\n\n    sourceBatches.forEach(batch => {\n      const name = batch.unibuild.pkg.name || null;\n      const inputFiles = [];\n\n      batch.resourceSlots.forEach(slot => {\n        inputFiles.push(...slot.jsOutputResources);\n      });\n\n      map.set(name, {\n        files: inputFiles,\n        mainModule: _.find(inputFiles, file => file.mainModule) || null,\n        batch,\n        importScannerWatchSet: new WatchSet(),\n      });\n    });\n\n    if (! map.has(\"modules\")) {\n      // In the unlikely event that no package is using the modules\n      // package, then the map is already complete, and we don't need to\n      // do any import scanning.\n      return this._watchOutputFiles(map);\n    }\n\n    // Append install(<name>) calls to the install-packages.js file in the\n    // modules package for every Meteor package name used.\n    map.get(\"modules\").files.some(file => {\n      if (file.sourcePath !== \"install-packages.js\") {\n        return false;\n      }\n\n      const meteorPackageInstalls = [];\n\n      map.forEach((info, name) => {\n        if (! name) return;\n\n        const mainModule = info.mainModule &&\n          `meteor/${name}/${info.mainModule.targetPath}`;\n\n        meteorPackageInstalls.push(\n          \"install(\" + JSON.stringify(name) +\n            (mainModule ? \", \" + JSON.stringify(mainModule) : '') +\n          \");\\n\"\n        );\n      });\n\n      if (meteorPackageInstalls.length === 0) {\n        return false;\n      }\n\n      file.data = Buffer.from(\n        file.data.toString(\"utf8\") + \"\\n\" +\n          meteorPackageInstalls.join(\"\"),\n        \"utf8\"\n      );\n\n      file.hash = sha1(file.data);\n\n      return true;\n    });\n\n    // Map from module identifiers that previously could not be imported\n    // to lists of info objects describing the failed imports.\n    const allMissingModules = Object.create(null);\n\n    // Records the subset of allMissingModules that were successfully\n    // relocated to a source batch that could handle them.\n    const allRelocatedModules = Object.create(null);\n    const scannerMap = new Map;\n\n    sourceBatches.forEach(batch => {\n      const name = batch.unibuild.pkg.name || null;\n      const isApp = ! name;\n\n      if (! batch.useMeteorInstall && ! isApp) {\n        // If this batch represents a package that does not use the module\n        // system, then we don't need to scan its dependencies.\n        return;\n      }\n\n      const nodeModulesPaths = [];\n      _.each(batch.unibuild.nodeModulesDirectories, (nmd, sourcePath) => {\n        if (! nmd.local) {\n          // Local node_modules directories will be found by the\n          // ImportScanner, but we need to tell it about any external\n          // node_modules directories (e.g. .npm/package/node_modules).\n          nodeModulesPaths.push(sourcePath);\n        }\n      });\n\n      const entry = map.get(name);\n\n      const scanner = new ImportScanner({\n        name,\n        bundleArch: batch.processor.arch,\n        extensions: batch.importExtensions,\n        sourceRoot: batch.sourceRoot,\n        nodeModulesPaths,\n        watchSet: entry.importScannerWatchSet,\n        cacheDir: batch.scannerCacheDir,\n      });\n\n      scanner.addInputFiles(entry.files);\n\n      if (batch.useMeteorInstall) {\n        scanner.scanImports();\n        ImportScanner.mergeMissing(\n          allMissingModules,\n          scanner.allMissingModules\n        );\n      }\n\n      scannerMap.set(name, scanner);\n    });\n\n    function handleMissing(missingModules) {\n      const missingMap = new Map;\n\n      _.each(missingModules, (importInfoList, id) => {\n        const parts = id.split(\"/\");\n        let name = null;\n\n        if (parts[0] === \"meteor\") {\n          let found = false;\n          name = parts[1];\n\n          if (parts.length > 2) {\n            parts[1] = \".\";\n            id = parts.slice(1).join(\"/\");\n            found = true;\n\n          } else {\n            const entry = map.get(name);\n            const mainModule = entry && entry.mainModule;\n            if (mainModule) {\n              id = \"./\" + mainModule.sourcePath;\n              found = true;\n            }\n          }\n\n          if (! found) {\n            return;\n          }\n        }\n\n        if (! scannerMap.has(name)) {\n          return;\n        }\n\n        if (! missingMap.has(name)) {\n          missingMap.set(name, Object.create(null));\n        }\n\n        ImportScanner.mergeMissing(\n          missingMap.get(name),\n          { [id]: importInfoList }\n        );\n      });\n\n      const nextMissingModules = Object.create(null);\n\n      missingMap.forEach((missing, name) => {\n        const { newlyAdded, newlyMissing } =\n          scannerMap.get(name).scanMissingModules(missing);\n        ImportScanner.mergeMissing(allRelocatedModules, newlyAdded);\n        ImportScanner.mergeMissing(nextMissingModules, newlyMissing);\n      });\n\n      if (! _.isEmpty(nextMissingModules)) {\n        handleMissing(nextMissingModules);\n      }\n    }\n\n    handleMissing(allMissingModules);\n\n    Object.keys(allRelocatedModules).forEach(id => {\n      delete allMissingModules[id];\n    });\n\n    this._warnAboutMissingModules(allMissingModules);\n\n    scannerMap.forEach((scanner, name) => {\n      const isApp = ! name;\n      const outputFiles = scanner.getOutputFiles();\n      const entry = map.get(name);\n\n      if (entry.batch.useMeteorInstall) {\n        outputFiles.forEach(file => {\n          // Give every file the same meteorInstallOptions object, so the\n          // linker can emit one meteorInstall call per options object.\n          file.meteorInstallOptions = entry.batch.meteorInstallOptions;\n        });\n      }\n\n      if (isApp) {\n        const appFilesWithoutNodeModules = [];\n        const modulesEntry = map.get(\"modules\");\n\n        outputFiles.forEach(file => {\n          const parts = file.absModuleId.split(\"/\");\n          assert.strictEqual(parts[0], \"\");\n          const nodeModulesIndex = parts.indexOf(\"node_modules\");\n\n          if (nodeModulesIndex === -1 || (nodeModulesIndex === 1 &&\n                                          parts[2] === \"meteor\")) {\n            appFilesWithoutNodeModules.push(file);\n          } else {\n            // There's a chance the application does not use the module\n            // system, which means entry.batch.useMeteorInstall will be\n            // false and file.meteorInstallOptions will not have been\n            // defined above. In that case, just use meteorInstallOptions\n            // from the modules source batch, since we're moving this file\n            // into the modules bundle.\n            file.meteorInstallOptions = file.meteorInstallOptions ||\n              modulesEntry.batch.meteorInstallOptions;\n\n            // This file is going to be installed in a node_modules\n            // directory, so we move it to the modules bundle so that it\n            // can be imported by any package that uses the modules\n            // package. Note that this includes all files within any\n            // node_modules directory in the app, even though packages in\n            // client/node_modules will not be importable by Meteor\n            // packages, because it's important for all npm packages in\n            // the app to share the same limited scope (i.e. the scope of\n            // the modules package). However, these relocated files have\n            // their own meteorInstallOptions, and will be installed with\n            // a separate call to meteorInstall in the modules bundle.\n            modulesEntry.files.push(file);\n          }\n        });\n\n        entry.files = appFilesWithoutNodeModules;\n\n      } else {\n        entry.files = outputFiles;\n      }\n    });\n\n    return this._watchOutputFiles(map);\n  }\n\n  static _watchOutputFiles(jsOutputFilesMap) {\n    // Watch all output files produced by computeJsOutputFilesMap.\n    jsOutputFilesMap.forEach(entry => {\n      entry.files.forEach(file => {\n        const {\n          sourcePath,\n          absPath = sourcePath &&\n            files.pathJoin(entry.batch.sourceRoot, sourcePath),\n        } = file;\n        const { importScannerWatchSet } = entry;\n        if (\n          typeof absPath === \"string\" &&\n          // Blindly calling importScannerWatchSet.addFile would be\n          // logically correct here, but we can save the cost of calling\n          // optimisticHashOrNull(absPath) if the importScannerWatchSet\n          // already knows about the file and it has not been marked as\n          // potentially unused.\n          ! importScannerWatchSet.isDefinitelyUsed(absPath)\n        ) {\n          // If this file was previously added to the importScannerWatchSet\n          // using the addPotentiallyUnusedFile method (see compileUnibuild),\n          // calling addFile here will update its usage status to reflect that\n          // the ImportScanner did, in fact, end up \"using\" the file.\n          importScannerWatchSet.addFile(absPath, optimisticHashOrNull(absPath));\n        }\n      });\n    });\n    return jsOutputFilesMap;\n  }\n\n  static _warnAboutMissingModules(missingModules) {\n    const topLevelMissingIDs = {};\n    const warnings = [];\n\n    Object.keys(missingModules).forEach(id => {\n      // Issue at most one warning per module identifier, even if there\n      // are multiple parent modules that failed to import it.\n      missingModules[id].some(info => maybeWarn(id, info));\n    });\n\n    function maybeWarn(id, info) {\n      if (info.packageName) {\n        // Silence warnings generated by Meteor packages, since package\n        // authors can be trusted to test their packages, and may have\n        // different/better approaches to ensuring their dependencies are\n        // available. This blanket check makes some of the checks below\n        // redundant, but I would rather create a bit of dead code than\n        // risk introducing bugs when/if this check is reverted.\n        return;\n      }\n\n      if (info.possiblySpurious) {\n        // Silence warnings for missing dependencies in Browserify/Webpack\n        // bundles, since we can reasonably conclude at this point that\n        // they are false positives.\n        return;\n      }\n\n      if (id in serverLibPackages &&\n          archinfo.matches(info.bundleArch, \"os\")) {\n        // Packages in dev_bundle/server-lib/node_modules can always be\n        // resolved at runtime on the server, so we don't need to warn\n        // about them here.\n        return;\n      }\n\n      if (id === \"meteor-node-stubs\" &&\n          info.packageName === \"modules\" &&\n          info.parentPath.endsWith(\"stubs.js\")) {\n        // Don't warn about the require(\"meteor-node-stubs\") call in\n        // packages/modules/stubs.js.\n        return;\n      }\n\n      const parts = id.split(\"/\");\n\n      if (\"./\".indexOf(id.charAt(0)) < 0) {\n        const packageDir = parts[0].startsWith(\"@\")\n          ? parts[0] + \"/\" + parts[1]\n          : parts[0];\n\n        if (packageDir === \"meteor\") {\n          // Don't print warnings for uninstalled Meteor packages.\n          return;\n        }\n\n        if (! _.has(topLevelMissingIDs, packageDir)) {\n          // This information will be used to recommend installing npm\n          // packages below.\n          topLevelMissingIDs[packageDir] = id;\n        }\n\n        if (id.startsWith(\"meteor-node-stubs/deps/\")) {\n          // Instead of printing a warning that meteor-node-stubs/deps/fs\n          // is missing, warn about the \"fs\" module, but still recommend\n          // installing meteor-node-stubs via npm below.\n          id = parts.slice(2).join(\"/\");\n        }\n\n      } else if (info.packageName) {\n        // Disable warnings about relative module resolution failures in\n        // Meteor packages, since there's not much the application\n        // developer can do about those.\n        return;\n      }\n\n      warnings.push(`  ${JSON.stringify(id)} in ${\n        info.parentPath} (${info.bundleArch})`);\n\n      return true;\n    }\n\n    if (warnings.length > 0) {\n      Console.rawWarn(\"\\nUnable to resolve some modules:\\n\\n\");\n      warnings.forEach(text => Console.warn(text));\n      Console.warn();\n\n      const topLevelKeys = Object.keys(topLevelMissingIDs);\n      if (topLevelKeys.length > 0) {\n        Console.warn(\"If you notice problems related to these missing modules, consider running:\");\n        Console.warn();\n        Console.warn(\"  meteor npm install --save \" + topLevelKeys.join(\" \"));\n        Console.warn();\n      }\n    }\n  }\n\n  // Called by bundler's Target._emitResources.  It returns the actual resources\n  // that end up in the program for this package.  By this point, it knows what\n  // its dependencies are and what their exports are, so it can set up\n  // linker-style imports and exports.\n  getResources(jsResources, onCacheKey) {\n    buildmessage.assertInJob();\n\n    const resources = [];\n\n    this.resourceSlots.forEach(slot => {\n      resources.push(...slot.outputResources);\n    });\n\n    resources.push(...this._linkJS(jsResources, onCacheKey));\n\n    return resources;\n  }\n\n  _linkJS(jsResources, onCacheKey = () => {}) {\n    const self = this;\n    buildmessage.assertInJob();\n\n    var bundleArch = self.processor.arch;\n\n    // Run the linker.\n    const isApp = ! self.unibuild.pkg.name;\n    const isWeb = archinfo.matches(self.unibuild.arch, \"web\");\n    const linkerOptions = {\n      isApp,\n      bundleArch,\n      // I was confused about this, so I am leaving a comment -- the\n      // combinedServePath is either [pkgname].js or [pluginName]:plugin.js.\n      // XXX: If we change this, we can get rid of source arch names!\n      combinedServePath: isApp ? \"/app.js\" :\n        \"/packages/\" + colonConverter.convert(\n          self.unibuild.pkg.name +\n            (self.unibuild.kind === \"main\" ? \"\" : (\":\" + self.unibuild.kind)) +\n            \".js\"),\n      name: self.unibuild.pkg.name || null,\n      declaredExports: _.pluck(self.unibuild.declaredExports, 'name'),\n      imports: self.importedSymbolToPackageName,\n      // XXX report an error if there is a package called global-imports\n      includeSourceMapInstructions: isWeb,\n    };\n\n    const fileHashes = [];\n    const cacheKeyPrefix = sha1(JSON.stringify({\n      linkerOptions,\n      files: jsResources.map((inputFile) => {\n        fileHashes.push(inputFile.hash);\n        return {\n          meteorInstallOptions: inputFile.meteorInstallOptions,\n          absModuleId: inputFile.absModuleId,\n          sourceMap: !! inputFile.sourceMap,\n          mainModule: inputFile.mainModule,\n          imported: inputFile.imported,\n          alias: inputFile.alias,\n          lazy: inputFile.lazy,\n          bare: inputFile.bare,\n        };\n      })\n    }));\n    const cacheKeySuffix = sha1(JSON.stringify({\n      LINKER_CACHE_SALT,\n      fileHashes\n    }));\n    const cacheKey = `${cacheKeyPrefix}_${cacheKeySuffix}`;\n    onCacheKey(cacheKey, jsResources);\n\n    if (LINKER_CACHE.has(cacheKey)) {\n      if (CACHE_DEBUG) {\n        console.log('LINKER IN-MEMORY CACHE HIT:',\n                    linkerOptions.name, bundleArch);\n      }\n      return LINKER_CACHE.get(cacheKey);\n    }\n\n    const cacheFilename = self.linkerCacheDir &&\n      files.pathJoin(self.linkerCacheDir, cacheKey + '.cache');\n\n    const wildcardCacheFilename = cacheFilename &&\n      files.pathJoin(self.linkerCacheDir, cacheKeyPrefix + \"_*.cache\");\n\n    // The return value from _linkJS includes Buffers, but we want everything to\n    // be JSON for writing to the disk cache. This function converts the string\n    // version to the Buffer version.\n    function bufferifyJSONReturnValue(resources) {\n      resources.forEach((r) => {\n        r.data = Buffer.from(r.data, 'utf8');\n      });\n    }\n\n    if (cacheFilename) {\n      let diskCached = null;\n      try {\n        diskCached = files.readJSONOrNull(cacheFilename);\n      } catch (e) {\n        // Ignore JSON parse errors; pretend there was no cache.\n        if (!(e instanceof SyntaxError)) {\n          throw e;\n        }\n      }\n      if (diskCached && diskCached instanceof Array) {\n        // Fix the non-JSON part of our return value.\n        bufferifyJSONReturnValue(diskCached);\n        if (CACHE_DEBUG) {\n          console.log('LINKER DISK CACHE HIT:', linkerOptions.name, bundleArch);\n        }\n        // Add the bufferized value of diskCached to the in-memory LRU cache\n        // so we don't have to go to disk next time.\n        LINKER_CACHE.set(cacheKey, diskCached);\n        return diskCached;\n      }\n    }\n\n    if (CACHE_DEBUG) {\n      console.log('LINKER CACHE MISS:', linkerOptions.name, bundleArch);\n    }\n\n    // nb: linkedFiles might be aliased to an entry in LINKER_CACHE, so don't\n    // mutate anything from it.\n    let canCache = true;\n    let linkedFiles = null;\n    buildmessage.enterJob('linking', () => {\n      linkedFiles = linker.fullLink(jsResources, linkerOptions);\n      if (buildmessage.jobHasMessages()) {\n        canCache = false;\n      }\n    });\n    // Add each output as a resource\n    const ret = linkedFiles.map((file) => {\n      const sm = (typeof file.sourceMap === 'string')\n        ? JSON.parse(file.sourceMap) : file.sourceMap;\n      return {\n        type: \"js\",\n        // This is a string... but we will convert it to a Buffer\n        // before returning from the method (but after writing\n        // to cache).\n        data: file.source,\n        hash: file.hash,\n        servePath: file.servePath,\n        sourceMap: sm\n      };\n    });\n\n    let retAsJSON;\n    if (canCache && cacheFilename) {\n      retAsJSON = JSON.stringify(ret);\n    }\n\n    // Convert strings to buffers, now that we've serialized it.\n    bufferifyJSONReturnValue(ret);\n\n    if (canCache) {\n      LINKER_CACHE.set(cacheKey, ret);\n      if (cacheFilename) {\n        // Write asynchronously.\n        Promise.resolve().then(() => {\n          try {\n            files.rm_recursive(wildcardCacheFilename);\n          } finally {\n            files.writeFileAtomically(cacheFilename, retAsJSON);\n          }\n        });\n      }\n    }\n\n    return ret;\n  }\n}\n\n_.each([\n  \"getResources\",\n  \"_linkJS\",\n], method => {\n  const proto = PackageSourceBatch.prototype;\n  proto[method] = Profile(\n    \"PackageSourceBatch#\" + method,\n    proto[method]\n  );\n});\n\n// static methods to measure in profile\n_.each([\n  \"computeJsOutputFilesMap\"\n], method => {\n  PackageSourceBatch[method] = Profile(\n    \"PackageSourceBatch.\" + method,\n    PackageSourceBatch[method]);\n});\n"],"file":"tools/isobuild/compiler-plugin.js.map"}