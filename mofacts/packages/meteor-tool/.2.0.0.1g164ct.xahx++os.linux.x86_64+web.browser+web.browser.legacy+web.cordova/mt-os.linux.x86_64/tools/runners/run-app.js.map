{"version":3,"sources":["/tools/runners/run-app.js"],"names":["pluginVersionsFromStarManifest","module","link","v","CordovaBuilder","closeAllWatchers","eachline","loadIsopackage","_","require","Fiber","uuid","fiberHelpers","files","watch","bundler","buildmessage","runLog","stats","Console","catalog","Profile","release","hasOwn","Object","prototype","hasOwnProperty","bashParse","s","search","Error","without","split","getNodeOptionsFromEnvironment","process","env","SERVER_NODE_OPTIONS","AppProcess","options","self","projectContext","bundlePath","port","listenHost","rootUrl","mongoUrl","oplogUrl","mobileServerUrl","onExit","onListen","nodeOptions","inspect","settings","testMetadata","autoRestart","hmrSecret","proc","madeExitCallback","extend","start","_spawn","stdout","line","match","logAppOutput","stderr","on","code","signal","_maybeCallOnExit","err","log","message","arrow","stdin","stop","pid","removeAllListeners","kill","_computeEnvironment","PORT","ROOT_URL","MONGO_URL","MOBILE_DDP_URL","MOBILE_ROOT_URL","MONGO_OPLOG_URL","METEOR_SETTINGS","TEST_METADATA","JSON","stringify","BIND_IP","APP_ID","appIdentifier","METEOR_AUTO_RESTART","HTTP_FORWARDED_COUNT","parseInt","break","METEOR_INSPECT_BRK","shellDir","getMeteorShellDirectory","mkdir_p","METEOR_SHELL_DIR","convertToOSPath","METEOR_PARENT_PID","METEOR_BAD_PARENT_PID_FOR_TEST","METEOR_PRINT_ON_LISTEN","METEOR_HMR_SECRET","entryPoint","pathJoin","opts","clone","push","child_process","child","spawn","execPath","stdio","enable","AppRunner","buildOptions","cordovaRunner","settingsFile","proxy","once","watchForChanges","undefined","onRunEnd","noRestartBanner","recordPackageUsage","omitPackageMapDeltaDisplayOnFirstRun","fiber","startPromise","runPromise","exitPromise","watchPromise","_promiseResolvers","hmrServer","_beforeStartPromise","builders","create","_makePromise","_fiber","run","await","name","Promise","resolve","_resolvePromise","value","_cleanUpPromises","each","outcome","makeBeforeStartPromise","_runOnce","firstRun","enableProgressDisplay","clearLog","setMode","getProjectLocalDirectory","cachedServerWatchSet","bundleApp","triedToRefreshRecently","reset","softRefreshIsopacks","preservePackageMap","messages","capture","readProjectMetadata","hasMessages","runResult","errors","watchSet","getProjectAndLocalPackagesWatchSet","wrongRelease","usingRightReleaseForApp","displayReleaseNeeded","releaseFile","displayReleaseName","prepareProjectForBuild","packageMapDelta","displayOnConsole","recordPackages","what","bundleResult","bundle","outputPath","includeNodeModules","hasCachedBundle","previousBuilders","onJsOutputFiles","compare","bind","allowDelayedClientBuilds","isHeadless","forceInPlaceBuild","serverWatchSet","combinedWatchSetForBundleResult","br","merge","clientWatchSet","bundleResultOrRunResult","settingsWatchSet","WatchSet","settingsMessages","title","rootPath","cwd","getSettings","canRefreshClient","packageMap","getInfo","pluginVersions","starManifest","started","prepareProject","printWarningsIfNeeded","havePlatformsChangedSinceLastRun","havePluginsChangedSinceLastRun","listenPromise","beforeRun","appProcess","setAppState","stopped","maybePrintLintWarnings","lintAppAndLocalPackages","warnings","formattedMessages","formatMessages","startRunTargets","serverWatcher","clientWatcher","onMessage","command","reject","Watcher","onChange","includePotentiallyUnusedFiles","async","setupClientWatcher","isUpToDate","pauseClient","arch","sendMessage","refreshClient","runPostStartupCallbacks","callbacks","postStartupCallbacks","length","fn","shift","error","postStartupResult","race","then","ret","logClientRestart","oldPromise","logTemporary","logRestart","wantExit","watcher","exports"],"mappings":"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","sourcesContent":["var _ = require('underscore');\nvar Fiber = require('fibers');\nconst uuid = require(\"uuid\");\nvar fiberHelpers = require('../utils/fiber-helpers.js');\nvar files = require('../fs/files');\nvar watch = require('../fs/watch');\nvar bundler = require('../isobuild/bundler.js');\nvar buildmessage = require('../utils/buildmessage.js');\nvar runLog = require('./run-log.js');\nvar stats = require('../meteor-services/stats.js');\nvar Console = require('../console/console.js').Console;\nvar catalog = require('../packaging/catalog/catalog.js');\nvar Profile = require('../tool-env/profile').Profile;\nvar release = require('../packaging/release.js');\nimport { pluginVersionsFromStarManifest } from '../cordova/index.js';\nimport { CordovaBuilder } from '../cordova/builder.js';\nimport { closeAllWatchers } from \"../fs/safe-watcher\";\nimport { eachline } from \"../utils/eachline\";\nimport { loadIsopackage } from '../tool-env/isopackets.js';\n\nconst hasOwn = Object.prototype.hasOwnProperty;\n\n// Parse out s as if it were a bash command line.\nvar bashParse = function (s) {\n  if (s.search(\"\\\"\") !== -1 || s.search(\"'\") !== -1) {\n    throw new Error(\"Meteor cannot currently handle quoted SERVER_NODE_OPTIONS\");\n  }\n  return _.without(s.split(/\\s+/), '');\n};\n\nvar getNodeOptionsFromEnvironment = function () {\n  return bashParse(process.env.SERVER_NODE_OPTIONS || \"\");\n};\n\n///////////////////////////////////////////////////////////////////////////////\n// AppProcess\n///////////////////////////////////////////////////////////////////////////////\n\n// Given a bundle, run a program in the bundle. Report when it dies.\n//\n// Call start() to start the process. You will then eventually receive\n// a call to onExit(code, signal): code is the numeric exit code of a\n// normal exit, signal is the string signal name if killed, and if\n// both are undefined it means something went wrong in invoking the\n// program and it was logged.\n//\n// If the app successfully starts up, you will also receive onListen()\n// once the app says it's ready to receive connections.\n//\n// Call stop() at any time after start() returns to terminate the\n// process if it is running. You will get an onExit callback if this\n// resulted in the process dying. stop() is idempotent.\n//\n// Required options: bundlePath, port, rootUrl, mongoUrl, oplogUrl\n// Optional options: onExit, onListen, nodeOptions, settings\n\nvar AppProcess = function (options) {\n  var self = this;\n\n  self.projectContext = options.projectContext;\n  self.bundlePath = options.bundlePath;\n  self.port = options.port;\n  self.listenHost = options.listenHost;\n  self.rootUrl = options.rootUrl;\n  self.mongoUrl = options.mongoUrl;\n  self.oplogUrl = options.oplogUrl;\n  self.mobileServerUrl = options.mobileServerUrl;\n\n  self.onExit = options.onExit;\n  self.onListen = options.onListen;\n  self.nodeOptions = options.nodeOptions || [];\n  self.inspect = options.inspect;\n  self.settings = options.settings;\n  self.testMetadata = options.testMetadata;\n  self.autoRestart = options.autoRestart;\n\n  self.hmrSecret = options.hmrSecret;\n\n  self.proc = null;\n  self.madeExitCallback = false;\n};\n\n_.extend(AppProcess.prototype, {\n  // Call to start the process.\n  start: function () {\n    var self = this;\n\n    if (self.proc) {\n      throw new Error(\"already started?\");\n    }\n\n    // Start the app!\n    self.proc = self._spawn();\n\n    eachline(self.proc.stdout, function (line) {\n      if (line.match(/^LISTENING\\s*$/)) {\n        // This is the child process telling us that it's ready to receive\n        // connections.  (It does this because we told it to with\n        // $METEOR_PRINT_ON_LISTEN.)\n        self.onListen && self.onListen();\n\n      } else {\n        runLog.logAppOutput(line);\n      }\n    });\n\n    eachline(self.proc.stderr, function (line) {\n      runLog.logAppOutput(line, true);\n    });\n\n    // Watch for exit and for stdio to be fully closed (so that we don't miss\n    // log lines).\n    self.proc.on('close', async function (code, signal) {\n      self._maybeCallOnExit(code, signal);\n    });\n\n    self.proc.on('error', async function (err) {\n      runLog.log(\"Couldn't spawn process: \" + err.message,  { arrow: true });\n\n      // node docs say that it might make both an 'error' and a\n      // 'close' callback, so we use a guard to make sure we only call\n      // onExit once.\n      self._maybeCallOnExit();\n    });\n\n    // This happens sometimes when we write a keepalive after the app\n    // is dead. If we don't register a handler, we get a top level\n    // exception and the whole app dies.\n    // http://stackoverflow.com/questions/2893458/uncatchable-errors-in-node-js\n    self.proc.stdin.on('error', function () {});\n  },\n\n  _maybeCallOnExit: function (code, signal) {\n    var self = this;\n    if (self.madeExitCallback) {\n      return;\n    }\n    self.madeExitCallback = true;\n    self.onExit && self.onExit(code, signal);\n  },\n\n  // Idempotent. Once stop() returns it is guaranteed that you will\n  // receive no more callbacks from this AppProcess.\n  stop: function () {\n    var self = this;\n\n    if (self.proc && self.proc.pid) {\n      self.proc.removeAllListeners('close');\n      self.proc.removeAllListeners('error');\n      self.proc.kill();\n    }\n    self.proc = null;\n\n    self.onListen = null;\n    self.onExit = null;\n  },\n\n  _computeEnvironment: function () {\n    var self = this;\n    var env = _.extend({}, process.env);\n\n    env.PORT = self.port;\n    env.ROOT_URL = self.rootUrl;\n    env.MONGO_URL = self.mongoUrl;\n    if (self.mobileServerUrl) {\n      env.MOBILE_DDP_URL = self.mobileServerUrl;\n      env.MOBILE_ROOT_URL = self.mobileServerUrl;\n    }\n\n    if (self.oplogUrl) {\n      env.MONGO_OPLOG_URL = self.oplogUrl;\n    }\n    if (self.settings) {\n      env.METEOR_SETTINGS = self.settings;\n    } else {\n      // Warn the developer that we are not going to use their environment var.\n      if (env.METEOR_SETTINGS) {\n        runLog.log(\n          \"WARNING: The 'METEOR_SETTINGS' environment variable is ignored \" +\n          \"when running in development (as you are doing now).  Instead, use \" +\n          \"the '--settings settings.json' option to see reactive changes \" +\n          \"when settings are changed.  For more information, see the \" +\n          \"documentation for 'Meteor.settings': \" +\n          \"https://docs.meteor.com/api/core.html#Meteor-settings\" +\n          \"\\n\");\n      }\n\n      // To provide a consistent, reactive experience in development, do\n      // not use settings provided via the environment variable.\n      delete env.METEOR_SETTINGS;\n    }\n    if (self.testMetadata) {\n      env.TEST_METADATA = JSON.stringify(self.testMetadata);\n    } else {\n      delete env.TEST_METADATA;\n    }\n    if (self.listenHost) {\n      env.BIND_IP = self.listenHost;\n    } else {\n      delete env.BIND_IP;\n    }\n    env.APP_ID = self.projectContext.appIdentifier;\n    env.METEOR_AUTO_RESTART = self.autoRestart;\n\n    // We run the server behind our own proxy, so we need to increment\n    // the HTTP forwarded count.\n    env.HTTP_FORWARDED_COUNT =\n      \"\" + ((parseInt(process.env['HTTP_FORWARDED_COUNT']) || 0) + 1);\n\n    if (self.inspect &&\n        self.inspect.break) {\n      env.METEOR_INSPECT_BRK = self.inspect.port;\n    } else {\n      delete env.METEOR_INSPECT_BRK;\n    }\n\n    var shellDir = self.projectContext.getMeteorShellDirectory();\n    files.mkdir_p(shellDir);\n\n    // We need to convert to OS path here because the running app doesn't\n    // have access to path translation functions\n    env.METEOR_SHELL_DIR = files.convertToOSPath(shellDir);\n\n    env.METEOR_PARENT_PID =\n      process.env.METEOR_BAD_PARENT_PID_FOR_TEST ? \"foobar\" : process.pid;\n\n    env.METEOR_PRINT_ON_LISTEN = 'true';\n\n    if (self.hmrSecret) {\n      env.METEOR_HMR_SECRET = self.hmrSecret;\n    }\n\n    return env;\n  },\n\n  // Spawn the server process and return the handle from child_process.spawn.\n  _spawn: function () {\n    var self = this;\n\n    // Path conversions\n    var entryPoint = files.convertToOSPath(\n      files.pathJoin(self.bundlePath, 'main.js'));\n\n    // Setting options\n    var opts = _.clone(self.nodeOptions);\n\n    if (self.inspect) {\n      // Always use --inspect rather than --inspect-brk, even when\n      // self.inspect.break is true, because --inspect-brk stops at the\n      // very first instruction executed by the child process, which is\n      // too early to set any meaningful breakpoints. Instead, we want to\n      // stop just after server code has loaded but before it begins to\n      // execute. See _computeEnvironment for logic that sets\n      // env.METEOR_INSPECT_BRK in that case.\n      opts.push(\"--inspect=\" + self.inspect.port);\n    }\n\n    opts.push(entryPoint);\n\n    // Call node\n    var child_process = require('child_process');\n    // setup the 'ipc' pipe if further communication between app and proxy is\n    // expected\n    var child = child_process.spawn(process.execPath, opts, {\n      env: self._computeEnvironment(),\n      stdio: ['pipe', 'pipe', 'pipe', 'ipc'],\n    });\n\n    // Add a child.sendMessage(topic, payload) method to this child\n    // process object.\n    loadIsopackage(\"inter-process-messaging\").enable(child);\n\n    return child;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n// AppRunner\n///////////////////////////////////////////////////////////////////////////////\n\n// Given an app, bundle and run the app. If the app's source changes,\n// kill, rebundle, and rerun it. If the app dies, restart it, unless\n// it dies repeatedly immediately after being started, in which case\n// wait for source changes to restart.\n//\n// Communicates with a Proxy to tell it when the app is up,\n// temporarily down, or crashing.\n//\n// Options include:\n//\n// - onRunEnd(result): If provided, called after each run of the program (or\n//   attempted run, if, say, bundling fails). Blocks restarting until it\n//   returns. See below for the format of 'result'. Return truthy to continue;\n//   return falsey to give up (without logging any more status messages). Do not\n//   call stop() from onRunEnd as that would necessarily deadlock.\n//\n// - watchForChanges: If true, the default, then (a) the program will\n//   be killed and restarted if its source files change; (b) if\n//   something goes really wrong (bundling fails, the program crashes\n//   constantly) such that we give up, we will start trying again if\n//   the source files change. If false, then we don't do (a) and if\n//   (b) happens we just give up permanently.\n//\n// - noRestartBanner: Set to true to skip the banner that is normally\n//   printed after each restart of the app once it is ready to listen\n//   for connections.\n//\n// - Other options: port, mongoUrl, oplogUrl, buildOptions, rootUrl,\n//   settingsFile, program, proxy, recordPackageUsage, once\n//\n// To use, construct an instance of AppRunner, and then call start() to start it\n// running. To stop it, either return false from onRunEnd, or call stop().  (But\n// don't call stop() from inside onRunEnd: that causes a deadlock.)\n//\n// The 'result' argument to onRunEnd is an object with keys:\n//\n// - outcome: the reason the run ended. One of:\n//\n//   - 'terminated': the process exited. Additionally, a 'code'\n//     attribute will be set of the process exited on its own accord,\n//     a 'signal' attribute will be set if the process was killed on a\n//     signal, or neither will be set if the process could not be\n//     spawned (spawn call failed, or no such program in bundle) -- in\n//     this last case an explanation will have been written to the run\n//     log, and you may assume that it will take more than source code\n//     changes to fix the problem.\n//\n//   - 'bundle-fail': bundling failed.\n//\n//   - 'changed': watchForChanges was true and a source file changed.\n//\n//   - 'wrong-release': the release that this app targets does not\n//     match the currently running version of Meteor (eg, the user\n//     typed 'meteor update' in another window). An 'displayReleaseNeeded'\n//     attribute will be present giving the app's release name.\n//\n//   - 'conflicting-versions': the constraint solver could not find a set of\n//     package versions to use that would satisfy the constraints of\n//     .meteor/versions and .meteor/packages. This could be caused by conflicts\n//     in .meteor/versions, conflicts in .meteor/packages, and/or inconsistent\n//     changes to the dependencies in local packages.\n//\n//   - 'stopped': stop() was called while a run was in progress.\n//\n// - errors: for 'bundle-fail', the buildmessage messages object corresponding\n//      to the error\n//\n// - watchSet: for runs in which there's a reason to wait for file changes\n//      ('bundle-fail' and 'terminated'), the WatchSet to wait on.\nvar AppRunner = function (options) {\n  var self = this;\n\n  self.projectContext = options.projectContext;\n\n  // note: run-all.js updates port directly\n  self.port = options.port;\n  self.listenHost = options.listenHost;\n  self.mongoUrl = options.mongoUrl;\n  self.oplogUrl = options.oplogUrl;\n  self.buildOptions = options.buildOptions;\n  self.rootUrl = options.rootUrl;\n  self.mobileServerUrl = options.mobileServerUrl;\n  self.cordovaRunner = options.cordovaRunner;\n  self.settingsFile = options.settingsFile;\n  self.testMetadata = options.testMetadata;\n  self.inspect = options.inspect;\n  self.proxy = options.proxy;\n  self.autoRestart = !options.once;\n  self.watchForChanges =\n    options.watchForChanges === undefined ? true : options.watchForChanges;\n  self.onRunEnd = options.onRunEnd;\n  self.noRestartBanner = options.noRestartBanner;\n  self.recordPackageUsage =\n    options.recordPackageUsage === undefined ? true : options.recordPackageUsage;\n  self.omitPackageMapDeltaDisplayOnFirstRun =\n    options.omitPackageMapDeltaDisplayOnFirstRun;\n\n  self.fiber = null;\n  self.startPromise = null;\n  self.runPromise = null;\n  self.exitPromise = null;\n  self.watchPromise = null;\n  self._promiseResolvers = {};\n\n  self.hmrServer = options.hmrServer;\n  self.hmrSecret = options.hmrSecret;\n\n  // If this promise is set with self.makeBeforeStartPromise, then for the first\n  // run, we will wait on it just before self.appProcess.start() is called.\n  self._beforeStartPromise = null;\n\n  // Builders saved across rebuilds, so that targets can be re-written in\n  // place instead of created again from scratch.\n  self.builders = Object.create(null);\n};\n\n_.extend(AppRunner.prototype, {\n  // Start the app running, and restart it as necessary. Returns\n  // immediately.\n  start: function () {\n    var self = this;\n\n    if (self.fiber) {\n      throw new Error(\"already started?\");\n    }\n\n    self.startPromise = self._makePromise(\"start\");\n\n    self.fiber = Fiber(function () {\n      self._fiber();\n    });\n    self.fiber.run();\n\n    self.startPromise.await();\n    self.startPromise = null;\n  },\n\n  _makePromise: function (name) {\n    var self = this;\n    return new Promise(function (resolve) {\n      self._promiseResolvers[name] = resolve;\n    });\n  },\n\n  _resolvePromise: function (name, value) {\n    var resolve = this._promiseResolvers[name];\n    if (resolve) {\n      this._promiseResolvers[name] = null;\n      resolve(value);\n    }\n  },\n\n  _cleanUpPromises: function () {\n    if (this._promiseResolvers) {\n      _.each(this._promiseResolvers, function (resolve) {\n        resolve && resolve();\n      });\n      this._promiseResolvers = null;\n    }\n  },\n\n  // Shut down the app. stop() will block until the app is shut\n  // down. This may involve waiting for bundling to\n  // finish. Idempotent, however only one thread may be in stop() at a\n  // time.\n  stop: function () {\n    var self = this;\n\n    if (! self.fiber) {\n      // nothing to do\n      return;\n    }\n\n    if (self.exitPromise) {\n      throw new Error(\"another fiber already stopping?\");\n    }\n\n    // The existence of this promise makes the fiber break out of its loop.\n    self.exitPromise = self._makePromise(\"exit\");\n\n    self._resolvePromise(\"run\", { outcome: 'stopped' });\n    self._resolvePromise(\"watch\");\n\n    if (self._beforeStartPromise) {\n      // If we stopped before mongod started (eg, due to mongod startup\n      // failure), unblock the runner fiber from waiting for mongod to start.\n      self._resolvePromise(\"beforeStart\", true);\n    }\n\n    self.exitPromise.await();\n    self.exitPromise = null;\n  },\n\n  // Returns a function that can be called to resolve _beforeStartPromise.\n  makeBeforeStartPromise: function () {\n    if (this._beforeStartPromise) {\n      throw new Error(\"makeBeforeStartPromise called twice?\");\n    }\n    this._beforeStartPromise = this._makePromise(\"beforeStart\");\n    return this._promiseResolvers[\"beforeStart\"];\n  },\n\n  // Run the program once, wait for it to exit, and then return. The\n  // return value is same as onRunEnd.\n  _runOnce: function (options) {\n    var self = this;\n    options = options || {};\n    var firstRun = options.firstRun;\n\n    Console.enableProgressDisplay(true);\n\n    runLog.clearLog();\n    self.proxy.setMode(\"hold\");\n\n    // Bundle up the app\n    var bundlePath = self.projectContext.getProjectLocalDirectory('build');\n\n    // Cache the server target because the server will not change inside\n    // a single invocation of _runOnce().\n    var cachedServerWatchSet;\n\n    var bundleApp = function () {\n      if (! firstRun) {\n        // If the build fails in a way that could be fixed by a refresh, allow\n        // it even if we refreshed previously, since that might have been a\n        // little while ago.\n        catalog.triedToRefreshRecently = false;\n\n        // If this isn't the first time we've run, we need to reset the project\n        // context since everything we have cached may have changed.\n        // XXX We can try to be a little less conservative here:\n        // - Don't re-build the whole local catalog if we know which local\n        //   packages have changed.  (This one might be a little trickier due\n        //   to how the WatchSets are laid out.  Might be possible to avoid\n        //   re-building the local catalog at all if packages didn't change\n        //   at all, though.)\n        self.projectContext.reset({}, {\n          // Don't forget all Isopack objects; just make sure to check that they\n          // are up to date.\n          softRefreshIsopacks: true,\n          // Don't forget the package map we calculated last time, even if we\n          // didn't write it to disk (because, eg, we're not running with a\n          // release that matches the app's release).  While we will still check\n          // our constraints, we will use the map we calculated last time as the\n          // previous solution (not what's on disk). Package deltas should be\n          // shown from the previous solution.\n          preservePackageMap: true\n        });\n        var messages = buildmessage.capture(function () {\n          self.projectContext.readProjectMetadata();\n        });\n        if (messages.hasMessages()) {\n          return {\n            runResult: {\n              outcome: 'bundle-fail',\n              errors: messages,\n              watchSet: self.projectContext.getProjectAndLocalPackagesWatchSet()\n            }\n          };\n        }\n      }\n\n      // Check to make sure we're running the right version of Meteor.\n      var wrongRelease = ! release.usingRightReleaseForApp(self.projectContext);\n      if (wrongRelease) {\n        return {\n          runResult: {\n            outcome: 'wrong-release',\n            displayReleaseNeeded:\n              self.projectContext.releaseFile.displayReleaseName\n          }\n        };\n      }\n\n      messages = buildmessage.capture(function () {\n        self.projectContext.prepareProjectForBuild();\n      });\n      if (messages.hasMessages()) {\n        return {\n          runResult: {\n            outcome: 'bundle-fail',\n            errors: messages,\n            watchSet: self.projectContext.getProjectAndLocalPackagesWatchSet()\n          }\n        };\n      }\n\n      // Show package changes... unless it's the first time in test-packages.\n      if (!(self.omitPackageMapDeltaDisplayOnFirstRun && firstRun)) {\n        self.projectContext.packageMapDelta.displayOnConsole();\n      }\n\n      if (self.recordPackageUsage) {\n        stats.recordPackages({\n          what: \"sdk.run\",\n          projectContext: self.projectContext\n        });\n      }\n\n      var bundleResult = Profile.run((firstRun?\"B\":\"Reb\")+\"uild App\", () => {\n        return bundler.bundle({\n          projectContext: self.projectContext,\n          outputPath: bundlePath,\n          includeNodeModules: \"symlink\",\n          buildOptions: self.buildOptions,\n          hasCachedBundle: !! cachedServerWatchSet,\n          previousBuilders: self.builders,\n          onJsOutputFiles: self.hmrServer ? self.hmrServer.compare.bind(self.hmrServer) : undefined,\n          // Permit delayed bundling of client architectures if the\n          // console is interactive.\n          allowDelayedClientBuilds: ! Console.isHeadless(),\n\n          // None of the targets are used during full rebuilds\n          // so we can safely build in place on Windows\n          forceInPlaceBuild: !cachedServerWatchSet\n        });\n      });\n\n      // Keep the server watch set from the initial bundle, because subsequent\n      // bundles will not contain a server target.\n      if (cachedServerWatchSet) {\n        bundleResult.serverWatchSet = cachedServerWatchSet;\n      } else {\n        cachedServerWatchSet = bundleResult.serverWatchSet;\n      }\n\n      if (bundleResult.errors) {\n        return {\n          runResult: {\n            outcome: 'bundle-fail',\n            errors: bundleResult.errors,\n            watchSet: combinedWatchSetForBundleResult(bundleResult)\n          }\n        };\n      } else {\n        return { bundleResult: bundleResult };\n      }\n    };\n\n    var combinedWatchSetForBundleResult = function (br) {\n      var watchSet = br.serverWatchSet.clone();\n      watchSet.merge(br.clientWatchSet);\n      return watchSet;\n    };\n\n    var bundleResult;\n    var bundleResultOrRunResult = bundleApp();\n    if (bundleResultOrRunResult.runResult) {\n      return bundleResultOrRunResult.runResult;\n    }\n    bundleResult = bundleResultOrRunResult.bundleResult;\n\n    firstRun = false;\n\n    // Read the settings file, if any\n    var settings = null;\n    var settingsWatchSet = new watch.WatchSet;\n    var settingsMessages = buildmessage.capture({\n      title: \"preparing to run\",\n      rootPath: process.cwd()\n    }, function () {\n      if (self.settingsFile) {\n        settings = files.getSettings(self.settingsFile, settingsWatchSet);\n      }\n    });\n    if (settingsMessages.hasMessages()) {\n      return {\n        outcome: 'bundle-fail',\n        errors: settingsMessages,\n        watchSet: settingsWatchSet\n      };\n    }\n\n    var serverWatchSet = bundleResult.serverWatchSet;\n    serverWatchSet.merge(settingsWatchSet);\n\n    // We only can refresh the client without restarting the server if the\n    // client contains the 'autoupdate' package.\n    var canRefreshClient = self.projectContext.packageMap &&\n          self.projectContext.packageMap.getInfo('autoupdate');\n\n    if (! canRefreshClient) {\n      // Restart server on client changes if we can't refresh the client.\n      serverWatchSet = combinedWatchSetForBundleResult(bundleResult);\n    }\n\n    const cordovaRunner = self.cordovaRunner;\n    if (cordovaRunner) {\n      const pluginVersions =\n        pluginVersionsFromStarManifest(bundleResult.starManifest);\n\n      if (!cordovaRunner.started) {\n        const { settingsFile, mobileServerUrl } = self;\n        const messages = buildmessage.capture(() => {\n          cordovaRunner.prepareProject(bundlePath, pluginVersions,\n            { settingsFile, mobileServerUrl });\n        });\n\n        if (messages.hasMessages()) {\n          return {\n            outcome: 'bundle-fail',\n            errors: messages,\n            watchSet: combinedWatchSetForBundleResult(bundleResult)\n          };\n        }\n        cordovaRunner.printWarningsIfNeeded();\n      } else {\n        // If the set of Cordova platforms or plugins changes from one run\n        // to the next, we just exit, because we don't yet have a way to,\n        // for example, get the new plugins to the mobile clients or stop a\n        // running client on a platform that has been removed.\n\n        if (cordovaRunner.havePlatformsChangedSinceLastRun()) {\n          return { outcome: 'outdated-cordova-platforms' };\n        }\n\n        if (cordovaRunner.havePluginsChangedSinceLastRun(pluginVersions)) {\n          return { outcome: 'outdated-cordova-plugins' };\n        }\n      }\n    }\n\n    // Atomically (1) see if we've been stop()'d, (2) if not, create a\n    // promise that can be used to stop() us once we start running.\n    if (self.exitPromise) {\n      return { outcome: 'stopped' };\n    }\n\n    // We should have reset self.runPromise to null by now, but await it\n    // just in case it's still defined.\n    Promise.await(self.runPromise);\n\n    var runPromise = self.runPromise = self._makePromise(\"run\");\n    var listenPromise = self._makePromise(\"listen\");\n\n    // Run the program\n    options.beforeRun && options.beforeRun();\n    var appProcess = new AppProcess({\n      projectContext: self.projectContext,\n      bundlePath: bundlePath,\n      port: self.port,\n      listenHost: self.listenHost,\n      rootUrl: self.rootUrl,\n      mongoUrl: self.mongoUrl,\n      oplogUrl: self.oplogUrl,\n      mobileServerUrl: self.mobileServerUrl,\n      onExit: function (code, signal) {\n        self._resolvePromise(\"run\", {\n          outcome: 'terminated',\n          code: code,\n          signal: signal,\n          watchSet: combinedWatchSetForBundleResult(bundleResult)\n        });\n      },\n      inspect: self.inspect,\n      onListen: function () {\n        self.proxy.setMode(\"proxy\");\n        if (self.hmrServer) {\n          self.hmrServer.setAppState(\"okay\");\n        }\n        options.onListen && options.onListen();\n        self._resolvePromise(\"start\");\n        self._resolvePromise(\"listen\");\n      },\n      nodeOptions: getNodeOptionsFromEnvironment(),\n      settings: settings,\n      testMetadata: self.testMetadata,\n      autoRestart: self.autoRestart,\n      hmrSecret: self.hmrSecret\n    });\n\n    if (options.firstRun && self._beforeStartPromise) {\n      var stopped = self._beforeStartPromise.await();\n      if (stopped) {\n        return true;\n      }\n    }\n\n    appProcess.start();\n    function maybePrintLintWarnings(bundleResult) {\n      if (! (self.projectContext.lintAppAndLocalPackages &&\n             bundleResult.warnings)) {\n        return;\n      }\n      if (bundleResult.warnings.hasMessages()) {\n        const formattedMessages = bundleResult.warnings.formatMessages();\n        runLog.log(\n          `Linted your app.\\n\\n${ formattedMessages }`,\n          { arrow: true });\n      } else {\n        runLog.log('Linted your app. No linting errors.',\n                   { arrow: true });\n      }\n    }\n    maybePrintLintWarnings(bundleResult);\n\n    if (cordovaRunner && !cordovaRunner.started) {\n      cordovaRunner.startRunTargets();\n    }\n\n    // Start watching for changes for files if requested. There's no\n    // hurry to do this, since clientWatchSet contains a snapshot of the\n    // state of the world at the time of bundling, in the form of\n    // hashes and lists of matching files in each directory.\n    var serverWatcher;\n    var clientWatcher;\n\n    appProcess.proc.onMessage(\"shell-server\", message => {\n      if (message && message.command === \"reload\") {\n        self._resolvePromise(\"run\", { outcome: \"changed\" });\n      } else {\n        return Promise.reject(\"Unsupported shell command: \" + message);\n      }\n    });\n\n    if (self.watchForChanges) {\n      serverWatcher = new watch.Watcher({\n        watchSet: serverWatchSet,\n        onChange: function () {\n          self._resolvePromise(\"run\", {\n            outcome: 'changed'\n          });\n        },\n        includePotentiallyUnusedFiles: false,\n        async: true,\n      });\n    }\n\n    var setupClientWatcher = function () {\n      clientWatcher && clientWatcher.stop();\n      clientWatcher = new watch.Watcher({\n        watchSet: bundleResult.clientWatchSet,\n        onChange: function () {\n          // Pass false for the includePotentiallyUnusedFiles parameter (which\n          // defaults to true) to avoid restarting the server due to changes in\n          // files that were not used by the server bundle. This assumes we have\n          // already called PackageSourceBatch.computeJsOutputFilesMap and\n          // _watchOutputFiles to finalize the usage statuses of potentially\n          // unused files in serverWatchSet, which is a safe assumption here.\n          var outcome = watch.isUpToDate(serverWatchSet, false)\n                      ? 'changed-refreshable' // only a client asset has changed\n                      : 'changed'; // both a client and server asset changed\n          self._resolvePromise('run', { outcome: outcome });\n        },\n        async: true\n      });\n    };\n    if (self.watchForChanges && canRefreshClient) {\n      setupClientWatcher();\n    }\n\n    function pauseClient(arch) {\n      return appProcess.proc.sendMessage(\"webapp-pause-client\", { arch });\n    }\n\n    async function refreshClient(arch) {\n      if (typeof arch === \"string\") {\n        // This message will reload the client program and unpause it.\n        await appProcess.proc.sendMessage(\"webapp-reload-client\", { arch });\n      }\n      // If arch is not a string, the receiver of this message should\n      // assume all clients need to be refreshed.\n      await appProcess.proc.sendMessage(\"client-refresh\");\n    }\n\n    function runPostStartupCallbacks(bundleResult) {\n      const callbacks = bundleResult.postStartupCallbacks;\n      if (! callbacks) return;\n\n      const messages = buildmessage.capture({\n        title: \"running post-startup callbacks\"\n      }, () => {\n        while (callbacks.length > 0) {\n          const fn = callbacks.shift();\n          try {\n            Promise.await(fn({\n              // Miscellany that the callback might find useful.\n              pauseClient,\n              refreshClient,\n              runLog,\n            }));\n          } catch (error) {\n            buildmessage.error(error.message);\n          }\n        }\n      });\n\n      if (messages.hasMessages()) {\n        return {\n          outcome: \"bundle-fail\",\n          errors: messages,\n          watchSet: bundleResult.clientWatchSet,\n        };\n      }\n    }\n\n    Console.enableProgressDisplay(false);\n\n    const postStartupResult = Promise.race([\n      listenPromise,\n      runPromise\n    ]).then(() => {\n      return runPostStartupCallbacks(bundleResult);\n    }).await();\n\n    if (postStartupResult) return postStartupResult;\n\n    // Wait for either the process to exit, or (if watchForChanges) a\n    // source file to change. Or, for stop() to be called.\n    var ret = runPromise.await();\n\n    try {\n      while (ret.outcome === 'changed-refreshable') {\n        if (! canRefreshClient) {\n          throw Error(\"Can't refresh client?\");\n        }\n\n        // We stay in this loop as long as only refreshable assets have changed.\n        // When ret.refreshable becomes false, we restart the server.\n        bundleResultOrRunResult = bundleApp();\n        if (bundleResultOrRunResult.runResult) {\n          return bundleResultOrRunResult.runResult;\n        }\n        bundleResult = bundleResultOrRunResult.bundleResult;\n\n        maybePrintLintWarnings(bundleResult);\n\n        runLog.logClientRestart();\n\n        var oldPromise = self.runPromise = self._makePromise(\"run\");\n\n        refreshClient();\n\n        // Establish a watcher on the new files.\n        setupClientWatcher();\n\n        const postStartupResult = runPostStartupCallbacks(bundleResult);\n        if (postStartupResult) return postStartupResult;\n\n        // Wait until another file changes.\n        ret = oldPromise.await();\n      }\n    } finally {\n      self.runPromise = null;\n\n      if (ret.outcome === 'changed') {\n        runLog.logTemporary(\"=> Server modified -- restarting...\");\n      }\n\n      self.proxy.setMode(\"hold\");\n      if (self.hmrServer) {\n        self.hmrServer.setAppState(\"okay\");\n      }\n      appProcess.stop();\n\n      serverWatcher && serverWatcher.stop();\n      clientWatcher && clientWatcher.stop();\n    }\n\n    return ret;\n  },\n\n  _fiber: function () {\n    var self = this;\n    var firstRun = true;\n\n    while (true) {\n      var runResult = self._runOnce({\n        onListen: function () {\n          if (! self.noRestartBanner && ! firstRun) {\n            runLog.logRestart();\n            Console.enableProgressDisplay(false);\n          }\n        },\n        firstRun: firstRun\n      });\n      firstRun = false;\n\n      var wantExit = self.onRunEnd ? !self.onRunEnd(runResult) : false;\n      if (wantExit || self.exitPromise || runResult.outcome === \"stopped\") {\n        break;\n      }\n\n      if (runResult.outcome === \"wrong-release\" ||\n          runResult.outcome === \"conflicting-versions\") {\n        // Since the only implementation of onRunEnd sets wantExit on these\n        // outcomes, we will never get here currently. Moreover, it's not\n        // actually possible for us to handle these cases correctly, because our\n        // contract says that we should wait for changes, but runResult doesn't\n        // actually contain a watchset. Oops. Just throw an exception for now.\n        throw new Error(\"can't handle outcome \" + runResult.outcome);\n      }\n\n      else if (runResult.outcome === \"bundle-fail\") {\n        runLog.log(\"Errors prevented startup:\\n\\n\" +\n                        runResult.errors.formatMessages(),  { arrow: true });\n        if (self.watchForChanges) {\n          runLog.log(\"Your application has errors. \" +\n                     \"Waiting for file change.\",  { arrow: true });\n          Console.enableProgressDisplay(false);\n        }\n      }\n\n      else if (runResult.outcome === \"changed\") {\n        continue;\n      } else if (runResult.outcome === \"terminated\") {\n        if (runResult.signal) {\n          runLog.log('Exited from signal: ' + runResult.signal, { arrow: true });\n        } else if (runResult.code !== undefined) {\n          runLog.log('Exited with code: ' + runResult.code, { arrow: true });\n        } else {\n          // explanation should already have been logged\n        }\n\n        if (self.watchForChanges) {\n          runLog.log(\"Your application is crashing. \" +\n                     \"Waiting for file change.\",\n                     { arrow: true });\n          Console.enableProgressDisplay(false);\n        }\n      }\n\n      else {\n        throw new Error(\"unknown run outcome?\");\n      }\n\n      if (self.watchForChanges) {\n        self.watchPromise = self._makePromise(\"watch\");\n\n        if (!runResult.watchSet) {\n          throw Error(\"watching for changes with no watchSet?\");\n        }\n        // XXX reference to watcher is lost later?\n        var watcher = new watch.Watcher({\n          watchSet: runResult.watchSet,\n          onChange: function () {\n            self._resolvePromise(\"watch\");\n          }\n        });\n        self.proxy.setMode(\"errorpage\");\n        if (self.hmrServer) {\n          self.hmrServer.setAppState(\"error\");\n        }\n        // If onChange wasn't called synchronously (clearing watchPromise), wait\n        // on it.\n        self.watchPromise && self.watchPromise.await();\n        // While we were waiting, did somebody stop() us?\n        if (self.exitPromise) {\n          break;\n        }\n        runLog.log(\"Modified -- restarting.\",  { arrow: true });\n        Console.enableProgressDisplay(true);\n        continue;\n      }\n\n      break;\n    }\n\n    // Allow the process to exit normally, since optimistic file watchers\n    // may be keeping the event loop busy.\n    closeAllWatchers();\n\n    // Giving up for good.\n    self._cleanUpPromises();\n\n    self.fiber = null;\n  }\n});\n\n///////////////////////////////////////////////////////////////////////////////\n\nexports.AppRunner = AppRunner;\n"],"file":"tools/runners/run-app.js.map"}