{"version":3,"sources":["meteor://ðŸ’»app/packages/minifyStdJS/plugin/minify-js.js","meteor://ðŸ’»app/packages/minifyStdJS/plugin/stats.js","meteor://ðŸ’»app/packages/minifyStdJS/plugin/utils.js"],"names":["extractModuleSizesTree","module","link","v","Plugin","registerMinifier","extensions","archMatching","minifier","MeteorBabelMinifier","prototype","processFilesForBundle","files","options","mode","minifyMode","forEach","file","addJavaScript","data","getContentsAsBuffer","sourceMap","getSourceMap","path","getPathInBundle","maybeThrowMinifyErrorBySourceFile","error","minifierErrorRegex","parseError","exec","message","lineErrorMessage","lineErrorLineNumber","parseErrorContentIndex","contents","getContentsAsString","split","lineContent","lineSrcLineParts","lineSrcLineContent","lineSrcLineNumber","c","sourceLine","test","parseErrorPath","substring","replace","minError","Error","toBeAdded","stats","Object","create","minified","meteorJsMinify","code","err","filePath","tree","Buffer","byteLength","nudge","length","export","Visitor","default","findPossibleIndexes","meteorInstallRegExp","RegExp","map","exp","source","join","match","ast","Babel","parse","meteorInstallName","some","name","i","meteorInstallVisitor","visit","reset","root","possibleIndexes","visitCallExpression","node","getValue","hasIdWithName","callee","walk","expr","type","slice","start","end","properties","prop","keyName","getKeyName","key","value","arguments","visitChildren","last","expressions","property","isObject","isNodeLike","codeOfA","charCodeAt","codeOfZ","Array","isArray","isCapitalized","string"],"mappings":"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","file":"/packages/minifyStdJS_plugin.js","sourcesContent":["import { extractModuleSizesTree } from \"./stats.js\";\n\nPlugin.registerMinifier({\n  extensions: ['js'],\n  archMatching: 'web'\n}, function () {\n  var minifier = new MeteorBabelMinifier();\n  return minifier;\n});\n\nfunction MeteorBabelMinifier () {};\n\nMeteorBabelMinifier.prototype.processFilesForBundle = function(files, options) {\n  var mode = options.minifyMode;\n\n  // don't minify anything for development\n  if (mode === 'development') {\n    files.forEach(function (file) {\n      file.addJavaScript({\n        data: file.getContentsAsBuffer(),\n        sourceMap: file.getSourceMap(),\n        path: file.getPathInBundle(),\n      });\n    });\n    return;\n  }\n\n  function maybeThrowMinifyErrorBySourceFile(error, file) {\n    var minifierErrorRegex = /^(.*?)\\s?\\((\\d+):(\\d+)\\)$/;\n    var parseError = minifierErrorRegex.exec(error.message);\n\n    if (!parseError) {\n      // If we were unable to parse it, just let the usual error handling work.\n      return;\n    }\n\n    var lineErrorMessage = parseError[1];\n    var lineErrorLineNumber = parseError[2];\n\n    var parseErrorContentIndex = lineErrorLineNumber - 1;\n\n    // Unlikely, since we have a multi-line fixed header in this file.\n    if (parseErrorContentIndex < 0) {\n      return;\n    }\n\n    /*\n\n    What we're parsing looks like this:\n\n    /////////////////////////////////////////\n    //                                     //\n    // path/to/file.js                     //\n    //                                     //\n    /////////////////////////////////////////\n                                           // 1\n       var illegalECMAScript = true;       // 2\n                                           // 3\n    /////////////////////////////////////////\n\n    Btw, the above code is intentionally not newer ECMAScript so\n    we don't break ourselves.\n\n    */\n\n    var contents = file.getContentsAsString().split(/\\n/);\n    var lineContent = contents[parseErrorContentIndex];\n\n    // Try to grab the line number, which sometimes doesn't exist on\n    // line, abnormally-long lines in a larger block.\n    var lineSrcLineParts = /^(.*?)(?:\\s*\\/\\/ (\\d+))?$/.exec(lineContent);\n\n    // The line didn't match at all?  Let's just not try.\n    if (!lineSrcLineParts) {\n      return;\n    }\n\n    var lineSrcLineContent = lineSrcLineParts[1];\n    var lineSrcLineNumber = lineSrcLineParts[2];\n\n    // Count backward from the failed line to find the filename.\n    for (var c = parseErrorContentIndex - 1; c >= 0; c--) {\n      var sourceLine = contents[c];\n\n      // If the line is a boatload of slashes, we're in the right place.\n      if (/^\\/\\/\\/{6,}$/.test(sourceLine)) {\n\n        // If 4 lines back is the same exact line, we've found the framing.\n        if (contents[c - 4] === sourceLine) {\n\n          // So in that case, 2 lines back is the file path.\n          var parseErrorPath = contents[c - 2]\n            .substring(3)\n            .replace(/\\s+\\/\\//, \"\");\n\n          var minError = new Error(\n            \"Babili minification error \" +\n            \"within \" + file.getPathInBundle() + \":\\n\" +\n            parseErrorPath +\n            (lineSrcLineNumber ? \", line \" + lineSrcLineNumber : \"\") + \"\\n\" +\n            \"\\n\" +\n            lineErrorMessage + \":\\n\" +\n            \"\\n\" +\n            lineSrcLineContent + \"\\n\"\n          );\n\n          throw minError;\n        }\n      }\n    }\n  }\n\n  const toBeAdded = {\n    data: \"\",\n    stats: Object.create(null)\n  };\n\n  files.forEach(file => {\n    // Don't reminify *.min.js.\n    if (/\\.min\\.js$/.test(file.getPathInBundle())) {\n      toBeAdded.data += file.getContentsAsString();\n    } else {\n      var minified;\n\n      try {\n        minified = meteorJsMinify(file.getContentsAsString());\n\n        if (!(minified && typeof minified.code === \"string\")) {\n          throw new Error();\n        }\n\n      } catch (err) {\n        var filePath = file.getPathInBundle();\n\n        maybeThrowMinifyErrorBySourceFile(err, file);\n\n        err.message += \" while minifying \" + filePath;\n        throw err;\n      }\n\n      const tree = extractModuleSizesTree(minified.code);\n      if (tree) {\n        toBeAdded.stats[file.getPathInBundle()] =\n          [Buffer.byteLength(minified.code), tree];\n      } else {\n        toBeAdded.stats[file.getPathInBundle()] =\n          Buffer.byteLength(minified.code);\n      }\n\n      toBeAdded.data += minified.code;\n    }\n\n    toBeAdded.data += '\\n\\n';\n\n    Plugin.nudge();\n  });\n\n  if (files.length) {\n    files[0].addJavaScript(toBeAdded);\n  }\n};\n","import Visitor from \"reify/lib/visitor.js\";\nimport { findPossibleIndexes } from \"reify/lib/utils.js\";\n\n// This RegExp will be used to scan the source for calls to meteorInstall,\n// taking into consideration that the function name may have been mangled\n// to something other than \"meteorInstall\" by the minifier.\nconst meteorInstallRegExp = new RegExp([\n  // If meteorInstall is called by its unminified name, then that's what\n  // we should be looking for in the AST.\n  /\\b(meteorInstall)\\(\\{/,\n  // If the meteorInstall function name has been minified, we can figure\n  // out its mangled name by examining the import assingment.\n  /\\b(\\w+)=Package\\.modules\\.meteorInstall\\b/,\n  /\\b(\\w+)=Package\\[\"modules-runtime\"\\].meteorInstall\\b/,\n  // Sometimes uglify-es will inline (0,Package.modules.meteorInstall) as\n  // a call expression.\n  /\\(0,Package\\.modules\\.(meteorInstall)\\)\\(/,\n  /\\(0,Package\\[\"modules-runtime\"\\]\\.(meteorInstall)\\)\\(/,\n].map(exp => exp.source).join(\"|\"));\n\nexport function extractModuleSizesTree(source) {\n  const match = meteorInstallRegExp.exec(source);\n  if (match) {\n    const ast = Babel.parse(source);\n    let meteorInstallName = \"meteorInstall\";\n    // The minifier may have renamed meteorInstall to something shorter.\n    match.some((name, i) => (i > 0 && (meteorInstallName = name)));\n    meteorInstallVisitor.visit(ast, meteorInstallName, source);\n    return meteorInstallVisitor.tree;\n  }\n}\n\nconst meteorInstallVisitor = new (class extends Visitor {\n  reset(root, meteorInstallName, source) {\n    this.name = meteorInstallName;\n    this.source = source;\n    this.tree = Object.create(null);\n    // Optimization to abandon entire subtrees of the AST that contain\n    // nothing like the meteorInstall identifier we're looking for.\n    this.possibleIndexes = findPossibleIndexes(source, [\n      meteorInstallName,\n    ]);\n  }\n\n  visitCallExpression(path) {\n    const node = path.getValue();\n\n    if (hasIdWithName(node.callee, this.name)) {\n      const source = this.source;\n\n      function walk(tree, expr) {\n        if (expr.type !== \"ObjectExpression\") {\n          return Buffer.byteLength(source.slice(expr.start, expr.end));\n        }\n\n        tree = tree || Object.create(null);\n\n        expr.properties.forEach(prop => {\n          const keyName = getKeyName(prop.key);\n          if (typeof keyName === \"string\") {\n            tree[keyName] = walk(tree[keyName], prop.value);\n          }\n        });\n\n        return tree;\n      }\n\n      walk(this.tree, node.arguments[0]);\n\n    } else {\n      this.visitChildren(path);\n    }\n  }\n});\n\nfunction hasIdWithName(node, name) {\n  switch (node && node.type) {\n  case \"SequenceExpression\":\n    const last = node.expressions[node.expressions.length - 1];\n    return hasIdWithName(last, name);\n  case \"MemberExpression\":\n    return hasIdWithName(node.property, name);\n  case \"Identifier\":\n    return node.name === name;\n  default:\n    return false;\n  }\n}\n\nfunction getKeyName(key) {\n  if (key.type === \"Identifier\") {\n    return key.name;\n  }\n\n  if (key.type === \"StringLiteral\" ||\n      key.type === \"Literal\") {\n    return key.value;\n  }\n\n  return null;\n}","\"use strict\";\n\nconst codeOfA = \"A\".charCodeAt(0);\nconst codeOfZ = \"Z\".charCodeAt(0);\n\nexport function isObject(value) {\n  return typeof value === \"object\" && value !== null;\n}\n\n// Without a complete list of Node .type names, we have to settle for this\n// fuzzy matching of object shapes. However, the infeasibility of\n// maintaining a complete list of type names is one of the reasons we're\n// using the FastPath/Visitor abstraction in the first place.\nexport function isNodeLike(value) {\n  return isObject(value) &&\n    ! Array.isArray(value) &&\n    isCapitalized(value.type);\n}\n\nfunction isCapitalized(string) {\n  if (typeof string !== \"string\") {\n    return false;\n  }\n  const code = string.charCodeAt(0);\n  return code >= codeOfA && code <= codeOfZ;\n}\n"]}