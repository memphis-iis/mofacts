{"version":3,"sources":["meteor://ðŸ’»app/packages/caching-html-compiler/caching-html-compiler.js"],"names":["isEmpty","module","link","default","v","path","Plugin","CachingHtmlCompiler","CachingCompiler","constructor","name","tagScannerFunc","tagHandlerFunc","compilerName","defaultCacheSize","_bodyAttrInfo","compileResultSize","compileResult","lengthOrZero","field","length","head","body","js","processFilesForTarget","inputFiles","getCacheKey","inputFile","getArch","getSourceHash","hmrAvailable","compileOneFile","contents","getContentsAsString","inputPath","getPathInPackage","tags","sourceName","tagNames","e","TemplatingTools","CompileError","error","message","line","addCompileResult","allJavaScript","addHtml","section","data","bodyAttrs","Object","keys","forEach","attr","value","hasOwnProperty","JSON","stringify","filePath","pathPart","dirname","sep","ext","extname","basename","addJavaScript","join"],"mappings":"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","file":"/packages/caching-html-compiler.js","sourcesContent":["import isEmpty from 'lodash.isempty';\n\nconst path = Plugin.path;\n\n// The CompileResult type for this CachingCompiler is the return value of\n// htmlScanner.scan: a {js, head, body, bodyAttrs} object.\nCachingHtmlCompiler = class CachingHtmlCompiler extends CachingCompiler {\n  /**\n   * Constructor for CachingHtmlCompiler\n   * @param  {String} name The name of the compiler, printed in errors -\n   * should probably always be the same as the name of the build\n   * plugin/package\n   * @param  {Function} tagScannerFunc Transforms a template file (commonly\n   * .html) into an array of Tags\n   * @param  {Function} tagHandlerFunc Transforms an array of tags into a\n   * results object with js, body, head, and bodyAttrs properties\n   */\n  constructor(name, tagScannerFunc, tagHandlerFunc) {\n    super({\n      compilerName: name,\n      defaultCacheSize: 1024*1024*10,\n    });\n\n    this._bodyAttrInfo = null;\n\n    this.tagScannerFunc = tagScannerFunc;\n    this.tagHandlerFunc = tagHandlerFunc;\n  }\n\n  // Implements method from CachingCompilerBase\n  compileResultSize(compileResult) {\n    function lengthOrZero(field) {\n      return field ? field.length : 0;\n    }\n    return lengthOrZero(compileResult.head) + lengthOrZero(compileResult.body) +\n      lengthOrZero(compileResult.js);\n  }\n\n  // Overrides method from CachingCompiler\n  processFilesForTarget(inputFiles) {\n    this._bodyAttrInfo = {};\n    return super.processFilesForTarget(inputFiles);\n  }\n\n  // Implements method from CachingCompilerBase\n  getCacheKey(inputFile) {\n    // Note: the path is only used for errors, so it doesn't have to be part\n    // of the cache key.\n    return [\n      inputFile.getArch(),\n      inputFile.getSourceHash(),\n      inputFile.hmrAvailable && inputFile.hmrAvailable()\n    ];\n  }\n\n  // Implements method from CachingCompiler\n  compileOneFile(inputFile) {\n    const contents = inputFile.getContentsAsString();\n    const inputPath = inputFile.getPathInPackage();\n    try {\n      const tags = this.tagScannerFunc({\n        sourceName: inputPath,\n        contents: contents,\n        tagNames: [\"body\", \"head\", \"template\"]\n      });\n\n      return this.tagHandlerFunc(tags, inputFile.hmrAvailable && inputFile.hmrAvailable());\n    } catch (e) {\n      if (e instanceof TemplatingTools.CompileError) {\n        inputFile.error({\n          message: e.message,\n          line: e.line\n        });\n        return null;\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  // Implements method from CachingCompilerBase\n  addCompileResult(inputFile, compileResult) {\n    let allJavaScript = \"\";\n\n    if (compileResult.head) {\n      inputFile.addHtml({ section: \"head\", data: compileResult.head });\n    }\n\n    if (compileResult.body) {\n      inputFile.addHtml({ section: \"body\", data: compileResult.body });\n    }\n\n    if (compileResult.js) {\n      allJavaScript += compileResult.js;\n    }\n\n    if (!isEmpty(compileResult.bodyAttrs)) {\n      Object.keys(compileResult.bodyAttrs).forEach((attr) => {\n        const value = compileResult.bodyAttrs[attr];\n        if (this._bodyAttrInfo.hasOwnProperty(attr) &&\n            this._bodyAttrInfo[attr].value !== value) {\n          // two conflicting attributes on <body> tags in two different template\n          // files\n          inputFile.error({\n            message:\n            `<body> declarations have conflicting values for the '${ attr }' ` +\n              `attribute in the following files: ` +\n              this._bodyAttrInfo[attr].inputFile.getPathInPackage() +\n              `, ${ inputFile.getPathInPackage() }`\n          });\n        } else {\n          this._bodyAttrInfo[attr] = {inputFile, value};\n        }\n      });\n\n      // Add JavaScript code to set attributes on body\n      allJavaScript +=\n`Meteor.startup(function() {\n  var attrs = ${JSON.stringify(compileResult.bodyAttrs)};\n  for (var prop in attrs) {\n    document.body.setAttribute(prop, attrs[prop]);\n  }\n});\n`;\n    }\n    \n\n    if (allJavaScript) {\n      const filePath = inputFile.getPathInPackage();\n      // XXX this path manipulation may be unnecessarily complex\n      let pathPart = path.dirname(filePath);\n      if (pathPart === '.')\n        pathPart = '';\n      if (pathPart.length && pathPart !== path.sep)\n        pathPart = pathPart + path.sep;\n      const ext = path.extname(filePath);\n      const basename = path.basename(filePath, ext);\n\n      // XXX generate a source map\n\n      inputFile.addJavaScript({\n        path: path.join(pathPart, \"template.\" + basename + \".js\"),\n        data: allJavaScript\n      });\n    }\n  }\n}\n"]}