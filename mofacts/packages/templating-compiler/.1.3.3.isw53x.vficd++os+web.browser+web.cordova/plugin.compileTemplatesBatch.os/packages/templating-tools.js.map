{"version":3,"sources":["meteor://ðŸ’»app/packages/templating-tools/templating-tools.js","meteor://ðŸ’»app/packages/templating-tools/html-scanner.js","meteor://ðŸ’»app/packages/templating-tools/compile-tags-with-spacebars.js","meteor://ðŸ’»app/packages/templating-tools/throw-compile-error.js","meteor://ðŸ’»app/packages/templating-tools/code-generation.js"],"names":["TemplatingTools","CompileError","scanHtmlForTags","options","scan","HtmlScan","getTags","sourceName","contents","tagNames","rest","index","tags","tagNameRegex","join","openTagRegex","RegExp","advance","match","length","exec","throwCompileError","matchToken","matchTokenTagName","matchTokenComment","matchTokenUnsupported","tagStartIndex","commentEnd","toLowerCase","tagName","tagAttribs","tagPartRegex","attr","attrToken","attrKey","attrValue","end","tagContents","slice","contentsStartIndex","m","trimmedContentsStartIndex","trimmedTagContents","tag","attribs","fileContents","push","amount","substring","msg","overrideIndex","finalIndex","err","message","file","line","split","throwBodyAttrsError","parseError","compileTagsWithSpacebars","handler","SpacebarsTagCompiler","forEach","addTagToResults","getResults","results","head","body","js","bodyAttrs","hasAttribs","_","isEmpty","name","SpacebarsCompiler","isReservedName","renderFuncCode","compile","isTemplate","generateTemplateJS","addBodyAttrs","isBody","generateBodyJS","e","scanner","offset","attrs","Object","keys","val","hasOwnProperty","nameLiteral","JSON","stringify","templateDotNameLiteral"],"mappings":"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","file":"/packages/templating-tools.js","sourcesContent":["TemplatingTools = {\n  // This type of error should be thrown during compilation\n  CompileError: class CompileError {}\n};\n","TemplatingTools.scanHtmlForTags = function scanHtmlForTags(options) {\n  const scan = new HtmlScan(options);\n  return scan.getTags();\n};\n\n/**\n * Scan an HTML file for top-level tags and extract their contents. Pass them to\n * a tag handler (an object with a handleTag method)\n *\n * This is a primitive, regex-based scanner.  It scans \n * top-level tags, which are allowed to have attributes,\n * and ignores top-level HTML comments.\n */\nclass HtmlScan {\n  /**\n   * Initialize and run a scan of a single file\n   * @param  {String} sourceName The filename, used in errors only\n   * @param  {String} contents   The contents of the file\n   * @param  {String[]} tagNames An array of tag names that are accepted at the\n   * top level. If any other tag is encountered, an error is thrown.\n   */\n  constructor({\n        sourceName,\n        contents,\n        tagNames\n      }) {\n    this.sourceName = sourceName;\n    this.contents = contents;\n    this.tagNames = tagNames;\n\n    this.rest = contents;\n    this.index = 0;\n\n    this.tags = [];\n\n    tagNameRegex = this.tagNames.join(\"|\");\n    const openTagRegex = new RegExp(`^((<(${tagNameRegex})\\\\b)|(<!--)|(<!DOCTYPE|{{!)|$)`, \"i\");\n\n    while (this.rest) {\n      // skip whitespace first (for better line numbers)\n      this.advance(this.rest.match(/^\\s*/)[0].length);\n\n      const match = openTagRegex.exec(this.rest);\n\n      if (! match) {\n        this.throwCompileError(`Expected one of: <${this.tagNames.join('>, <')}>`);\n      }\n\n      const matchToken = match[1];\n      const matchTokenTagName =  match[3];\n      const matchTokenComment = match[4];\n      const matchTokenUnsupported = match[5];\n\n      const tagStartIndex = this.index;\n      this.advance(match.index + match[0].length);\n\n      if (! matchToken) {\n        break; // matched $ (end of file)\n      }\n\n      if (matchTokenComment === '<!--') {\n        // top-level HTML comment\n        const commentEnd = /--\\s*>/.exec(this.rest);\n        if (! commentEnd)\n          this.throwCompileError(\"unclosed HTML comment in template file\");\n        this.advance(commentEnd.index + commentEnd[0].length);\n        continue;\n      }\n\n      if (matchTokenUnsupported) {\n        switch (matchTokenUnsupported.toLowerCase()) {\n        case '<!doctype':\n          this.throwCompileError(\n            \"Can't set DOCTYPE here.  (Meteor sets <!DOCTYPE html> for you)\");\n        case '{{!':\n          this.throwCompileError(\n            \"Can't use '{{! }}' outside a template.  Use '<!-- -->'.\");\n        }\n\n        this.throwCompileError();\n      }\n\n      // otherwise, a <tag>\n      const tagName = matchTokenTagName.toLowerCase();\n      const tagAttribs = {}; // bare name -> value dict\n      const tagPartRegex = /^\\s*((([a-zA-Z0-9:_-]+)\\s*=\\s*([\"'])(.*?)\\4)|(>))/;\n\n      // read attributes\n      let attr;\n      while ((attr = tagPartRegex.exec(this.rest))) {\n        const attrToken = attr[1];\n        const attrKey = attr[3];\n        let attrValue = attr[5];\n        this.advance(attr.index + attr[0].length);\n\n        if (attrToken === '>') {\n          break;\n        }\n\n        // XXX we don't HTML unescape the attribute value\n        // (e.g. to allow \"abcd&quot;efg\") or protect against\n        // collisions with methods of tagAttribs (e.g. for\n        // a property named toString)\n        attrValue = attrValue.match(/^\\s*([\\s\\S]*?)\\s*$/)[1]; // trim\n        tagAttribs[attrKey] = attrValue;\n      }\n\n      if (! attr) { // didn't end on '>'\n        this.throwCompileError(\"Parse error in tag\");\n      }\n\n      // find </tag>\n      const end = (new RegExp('</'+tagName+'\\\\s*>', 'i')).exec(this.rest);\n      if (! end) {\n        this.throwCompileError(\"unclosed <\"+tagName+\">\");\n      }\n\n      const tagContents = this.rest.slice(0, end.index);\n      const contentsStartIndex = this.index;\n\n      // trim the tag contents.\n      // this is a courtesy and is also relied on by some unit tests.\n      var m = tagContents.match(/^([ \\t\\r\\n]*)([\\s\\S]*?)[ \\t\\r\\n]*$/);\n      const trimmedContentsStartIndex = contentsStartIndex + m[1].length;\n      const trimmedTagContents = m[2];\n\n      const tag = {\n        tagName: tagName,\n        attribs: tagAttribs,\n        contents: trimmedTagContents,\n        contentsStartIndex: trimmedContentsStartIndex,\n        tagStartIndex: tagStartIndex,\n        fileContents: this.contents,\n        sourceName: this.sourceName\n      };\n\n      // save the tag\n      this.tags.push(tag);\n\n      // advance afterwards, so that line numbers in errors are correct\n      this.advance(end.index + end[0].length);\n    }\n  }\n\n  /**\n   * Advance the parser\n   * @param  {Number} amount The amount of characters to advance\n   */\n  advance(amount) {\n    this.rest = this.rest.substring(amount);\n    this.index += amount;\n  }\n\n  throwCompileError(msg, overrideIndex) {\n    const finalIndex = (typeof overrideIndex === 'number' ? overrideIndex : this.index);\n\n    const err = new TemplatingTools.CompileError();\n    err.message = msg || \"bad formatting in template file\";\n    err.file = this.sourceName;\n    err.line = this.contents.substring(0, finalIndex).split('\\n').length;\n\n    throw err;\n  }\n\n  throwBodyAttrsError(msg) {\n    this.parseError(msg);\n  }\n\n  getTags() {\n    return this.tags;\n  }\n}\n","TemplatingTools.compileTagsWithSpacebars = function compileTagsWithSpacebars(tags) {\n  var handler = new SpacebarsTagCompiler();\n\n  tags.forEach((tag) => {\n    handler.addTagToResults(tag);\n  });\n\n  return handler.getResults();\n};\n\nclass SpacebarsTagCompiler {\n  constructor() {\n    this.results = {\n      head: '',\n      body: '',\n      js: '',\n      bodyAttrs: {}\n    };\n  }\n\n  getResults() {\n    return this.results;\n  }\n\n  addTagToResults(tag) {\n    this.tag = tag;\n\n    // do we have 1 or more attributes?\n    const hasAttribs = ! _.isEmpty(this.tag.attribs);\n\n    if (this.tag.tagName === \"head\") {\n      if (hasAttribs) {\n        this.throwCompileError(\"Attributes on <head> not supported\");\n      }\n\n      this.results.head += this.tag.contents;\n      return;\n    }\n\n\n    // <body> or <template>\n\n    try {\n      if (this.tag.tagName === \"template\") {\n        const name = this.tag.attribs.name;\n\n        if (! name) {\n          this.throwCompileError(\"Template has no 'name' attribute\");\n        }\n\n        if (SpacebarsCompiler.isReservedName(name)) {\n          this.throwCompileError(`Template can't be named \"${name}\"`);\n        }\n\n        const renderFuncCode = SpacebarsCompiler.compile(this.tag.contents, {\n          isTemplate: true,\n          sourceName: `Template \"${name}\"`\n        });\n\n        this.results.js += TemplatingTools.generateTemplateJS(\n          name, renderFuncCode);\n      } else if (this.tag.tagName === \"body\") {\n        this.addBodyAttrs(this.tag.attribs);\n\n        const renderFuncCode = SpacebarsCompiler.compile(this.tag.contents, {\n          isBody: true,\n          sourceName: \"<body>\"\n        });\n\n        // We may be one of many `<body>` tags.\n        this.results.js += TemplatingTools.generateBodyJS(renderFuncCode);\n      } else {\n        this.throwCompileError(\"Expected <template>, <head>, or <body> tag in template file\", tagStartIndex);\n      }\n    } catch (e) {\n      if (e.scanner) {\n        // The error came from Spacebars\n        this.throwCompileError(e.message, this.tag.contentsStartIndex + e.offset);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  addBodyAttrs(attrs) {\n    Object.keys(attrs).forEach((attr) => {\n      const val = attrs[attr];\n\n      // This check is for conflicting body attributes in the same file;\n      // we check across multiple files in caching-html-compiler using the\n      // attributes on results.bodyAttrs\n      if (this.results.bodyAttrs.hasOwnProperty(attr) && this.results.bodyAttrs[attr] !== val) {\n        this.throwCompileError(\n          `<body> declarations have conflicting values for the '${attr}' attribute.`);\n      }\n\n      this.results.bodyAttrs[attr] = val;\n    });\n  }\n\n  throwCompileError(message, overrideIndex) {\n    TemplatingTools.throwCompileError(this.tag, message, overrideIndex);\n  }\n}\n","TemplatingTools.throwCompileError =\nfunction throwCompileError(tag, message, overrideIndex) {\n  const finalIndex = (typeof overrideIndex === 'number' ?\n    overrideIndex : tag.tagStartIndex);\n\n  const err = new TemplatingTools.CompileError();\n  err.message = message || \"bad formatting in template file\";\n  err.file = tag.sourceName;\n  err.line = tag.fileContents.substring(0, finalIndex).split('\\n').length;\n  throw err;\n}\n","TemplatingTools.generateTemplateJS =\nfunction generateTemplateJS(name, renderFuncCode) {\n  const nameLiteral = JSON.stringify(name);\n  const templateDotNameLiteral = JSON.stringify(`Template.${name}`);\n\n  return `\nTemplate.__checkName(${nameLiteral});\nTemplate[${nameLiteral}] = new Template(${templateDotNameLiteral}, ${renderFuncCode});\n`;\n}\n\nTemplatingTools.generateBodyJS =\nfunction generateBodyJS(renderFuncCode) {\n  return `\nTemplate.body.addContent(${renderFuncCode});\nMeteor.startup(Template.body.renderToDocument);\n`;\n}\n"]}