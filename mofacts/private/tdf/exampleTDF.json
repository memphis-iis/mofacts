{
    "tutor": {
        "setspec": {
            "lessonname": "Example Lesson",
            "userselect": "true",
            "stimulusfile": "exampleStim.json",
            "lfparameter": ".85",
            "audioInputEnabled": "true",
            "audioInputSensitivity": "15",
            "speechIgnoreOutOfGrammarResponses": "false",
            "speechOutOfGrammarFeedback": "Please try again",
            "enableAudioPromptAndFeedback": "true",
            "audioPromptSpeakingRate": "1",
            "textToSpeechAPIKey": "APIKEYHERE",
            "speechAPIKey": "APIKEYHERE",
            "alternateImageFiltering": "true"
        },
        "unit": [
            {
                "unitname": "Instructions",
                "unitinstructions": "Press continue to start"
            },
            {
                "unitname": "Reading completed",
                "unitinstructionsquestion": "Did you finish reading the chapter?",
                "assessmentsession": {
                    "conditiontemplatesbygroup": {
                        "groupnames": "A",
                        "clustersrepeated": "1",
                        "templatesrepeated": "1",
                        "group": "0,f,d,0"
                    },
                    "initialpositions": "A_1",
                    "randomizegroups": "false",
                    "clusterlist": "34-34",
                    "assignrandomclusters": "false",
                    "permutefinalresult": "0-0"
                },
                "deliveryparams": {
                    "drill": "10000000",
                    "purestudy": "16000",
                    "skipstudy": "false",
                    "reviewstudy": "8000",
                    "correctprompt": "8000",
                    "fontsize": "2",
                    "correctscore": "0",
                    "incorrectscore": "0",
                    "allowstimulusdropping": "false"
                }
            },
            {
                "unitinstructions": "<center><h3>Anatomy & Physiology Practice Instructions</h3></center><br>Our MoFaCTS system has chosen some of the most important sentences from your textbook and they are presented here for your practice. This practice will work better we think if you have read the textbook first, so that you understand the overall organization. For each important sentence we remove keywords and the practice is to fill-in-the-blank for each sentence. Sometimes we substitute a paraphrase of the sentence to imporve it or provide variety. Sometimes there will be 1 or 2 syllables presented as a hint. Fill-in-the-blank quizzing has been proven to be an powerful aid to memory, and the system focuses on items you get wrong to make sure you learn all the items thouroughly. The system  pronounces keywords to help you memorize them if you turn that on in the main menu. The system also provides the progress button above to check how much practice you have done, and how well our AI system thinks you have learned the words. We hope you will be able to use this progress information to decide if you want to continue the practice after you have completed the required amount.<br>        <center><h3>Practice Tips Video</h3></center>        <br><center>        <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/tgRcASfdjIY\" frameborder=\"0\" allow=\"accelerometer;margin-left: auto;margin-right: auto;autoplay; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>  </center>        ",
                "unitname": "Title of the unit goes here***",
                "learningsession": {
                    "clusterlist": "0-33",
                    "unitMode": "thresholdCeiling",
                    "calculateProbability": "function mul(m1, m2) {  var result = 0;  var len = m1.length;  for (var i = 0; i < len; i++) {      result += m1[i] * m2[i]  }  return result}function logitdec(outcomes, decay) {  if (outcomes) {      var outcomessuc = JSON.parse(JSON.stringify(outcomes));      var outcomesfail = outcomes.map(function(value) {          return Math.abs(value - 1)      });      var w = outcomessuc.unshift(1);      var v = outcomesfail.unshift(1);      return Math.log(mul(outcomessuc, [...Array(w).keys()].reverse().map(function(value, index) {          return Math.pow(decay, value)      })) / mul(outcomesfail, [...Array(w).keys()].reverse().map(function(value, index) {          return Math.pow(decay, value)      })))  }  return 0}function recency(age, d) {if (age==0) { return 0;} else  {return Math.pow(1 + age, -d);  }}function quaddiffcor(seq, probs) {  return mul(seq, probs.map(function(value) {      return value * value  }))}function quaddiffcor(seq, probs) {  return mul(seq, probs.map(function(value) {      return value * value  }))}function quaddiffincor(seq, probs) {  return mul(Math.abs(seq-1), probs.map(function(value) {      return value * value  }))}function linediffcor(seq, probs) {  return mul(seq, probs)}function linediffincor(seq, probs) {  return mul(seq.map(function(value) {      return Math.abs(value - 1)  }), probs)}p.hintsylls = [];if((p.stimSuccessCount+p.stimFailureCount)<3 && p.syllables>2) {  var numHintSylls = getRandomInt(3);  for(var index=0;index<numHintSylls;index++){    p.hintsylls.push(index);  }}var intercept;function arrSum(arr){return arr.reduce(function(a,b){return a + b}, 0)}function errlist(seq) {  return seq.map(function(value) {return Math.abs(value - 1)})}if (p.hintsylls.length==0) {intercept=-.563} else if (p.hintsylls.length==1) {intercept=0.261} else {intercept=0.496}                    p.y = intercept    +                    .721 * logitdec(                        p.overallOutcomeHistory.slice(Math.max(p.overallOutcomeHistory.length-60,1),                        p.overallOutcomeHistory.length), .955) +                    .268 * logitdec(p.responseOutcomeHistory, .794) +                    10.4 * recency(p.stimSecsSinceLastShown, .519) +                    .943 *  recency(p.responseSecsSinceLastShown, .049) +                    1.40  * linediffcor(p.stimOutcomeHistory, p.stimPreviousCalculatedProbabilities) +                    -1.40 * quaddiffcor(p.stimOutcomeHistory, p.stimPreviousCalculatedProbabilities) +                    -.178 * arrSum(errlist(p.stimOutcomeHistory)) ;                    p.probability = 1.0 / (1.0 + Math.exp(-p.y));                  // console.log(p.overallOutcomeHistory+\\\" - \\\"+p.responseOutcomeHistory +\\\" - \\\"+p.stimSecsSinceLastShown+\\\" - \\\"+p.stimOutcomeHistory+\\\" - \\\"+p.stimPreviousCalculatedProbabilities);          return p            "
                },
                "deliveryparams": {
                    "autostopTimeoutThreshold": "2",
                    "feedbackType": "refutational",
                    "drill": "30000",
                    "purestudy": "16000",
                    "skipstudy": "false",
                    "reviewstudy": "16000",
                    "correctprompt": "750",
                    "fontsize": "3",
                    "correctscore": "1",
                    "incorrectscore": "0",
                    "allowstimulusdropping": "true"
                }
            }
        ]
    }
}